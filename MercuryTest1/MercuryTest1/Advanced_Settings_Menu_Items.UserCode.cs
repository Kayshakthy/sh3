///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
    public partial class Advanced_Settings_Menu_Items
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_Advanced_Settings_Menu_Items()
        {
        
        	Delay.Seconds(5);
        	WebDocument webDocument = "/dom[@domain='192.168.0.1']";
        	webDocument.WaitForDocumentLoaded();
        	
        	//TableTag myTable = webDocument.FindSingle("/dom[@domain='192.168.0.1']//table[#'ConnectionTable']"); 
        	Ranorex.UlTag menuUITag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//ul[#'menu']");      	
        	IList<LiTag> menuCounts = menuUITag.FindChildren<LiTag>();	//counting menu items		
	     	int menuItemsCount = menuCounts.Count;
	     	Report.Info("menuItemsCount" + menuItemsCount.ToString());
	     	if(menuItemsCount>5){
	     		Report.Failure(" Other  menu items are present in the screen");
	     		return ;
	     	}
	     	
	     	     	Boolean isTrue =true;
			foreach(LiTag col in menuCounts)  
	    	{  
	        	//Report.Info(col.InnerText); 
	        	
	        	IList<ATag> aVals = col.Find<ATag>("./a");
	        	
	        	foreach(ATag aVal in aVals){
	        		string menuItem = aVal.InnerText.ToString();
	        		Report.Success(  "	menuItem Name: 	" + menuItem + "   : is present");
	        		if((menuItem.Trim().StartsWith("Home")) || (menuItem.Trim().StartsWith("Modem Mode" ))|| (menuItem.Trim().StartsWith("Admin") )){
	        			isTrue = true;
	        		}else{
	        			isTrue = false;
	        			break;
	        		}
	        	}

			       		
			}
			/*
			if(!isTrue){
				Report.Failure("Different Menu items exist");
			}else{
				Report.Screenshot(menuUITag.Element,true);
				//Report.Screenshot();
				Report.Success("Only Modem Mode menu items exist");
			}	*/
        }

    }
}