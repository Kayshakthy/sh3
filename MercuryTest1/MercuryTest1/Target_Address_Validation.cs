///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Target_Address_Validation recording.
    /// </summary>
    [TestModule("b3d691bd-002d-4d16-9432-b997b79dc0b1", ModuleType.Recording, 1)]
    public partial class Target_Address_Validation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Target_Address_Validation instance = new Target_Address_Validation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Target_Address_Validation()
        {
            Trace_route = "";
            Max_hops = "10";
            Base_port = "33434";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Target_Address_Validation Instance
        {
            get { return instance; }
        }

#region Variables

        string _Trace_route;

        /// <summary>
        /// Gets or sets the value of variable Trace_route.
        /// </summary>
        [TestVariable("e709d04c-a3dc-43ae-8a3d-850fd29068e6")]
        public string Trace_route
        {
            get { return _Trace_route; }
            set { _Trace_route = value; }
        }

        string _Max_hops;

        /// <summary>
        /// Gets or sets the value of variable Max_hops.
        /// </summary>
        [TestVariable("454485c8-fff6-4b59-a0e1-5153b87c7a9b")]
        public string Max_hops
        {
            get { return _Max_hops; }
            set { _Max_hops = value; }
        }

        string _Base_port;

        /// <summary>
        /// Gets or sets the value of variable Base_port.
        /// </summary>
        [TestVariable("199c2513-3d0f-40a3-8745-d24c3e1bc0f9")]
        public string Base_port
        {
            get { return _Base_port; }
            set { _Base_port = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Clear results') on item 'WebDocument19216801.Button25'.", repo.WebDocument19216801.Button25Info, new RecordItemIndex(0));
            //Validate.Attribute(repo.WebDocument19216801.Button25Info, "TagValue", "Clear results");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Clear results') on item 'WebDocument19216801.Button25'.", repo.WebDocument19216801.Button25Info, new RecordItemIndex(1));
            //Validate.Attribute(repo.WebDocument19216801.Button25Info, "Value", "Clear results");
            //Delay.Milliseconds(100);
            
            repo.WebDocument19216801.Target.Click("23;17");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Target);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Target);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Target.PressKeys(Trace_route);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Maxhops.Click("23;17");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Maxhops);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Maxhops);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Maxhops.PressKeys("234");
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Baseport.Click("23;17");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Baseport);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Baseport);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Baseport.PressKeys("33434");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument19216801.Start'.", repo.WebDocument19216801.StartInfo, new RecordItemIndex(14));
            Validate.Attribute(repo.WebDocument19216801.StartInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            repo.WebDocument19216801.Start.Click("57;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(16));
            Delay.Duration(30000, false);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='traceResult') on item 'WebDocument19216801.TraceResult'.", repo.WebDocument19216801.TraceResultInfo, new RecordItemIndex(17));
            //Validate.Attribute(repo.WebDocument19216801.TraceResultInfo, "Id", "traceResult");
            //Delay.Milliseconds(100);
            
            Validate_TraceResult(Trace_route);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Invalid address') on item 'WebDocument19216801.TraceResult'.", repo.WebDocument19216801.TraceResultInfo, new RecordItemIndex(19));
            //Validate.Attribute(repo.WebDocument19216801.TraceResultInfo, "InnerText", "Invalid address");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='textarea') on item 'WebDocument19216801.TraceResult'.", repo.WebDocument19216801.TraceResultInfo, new RecordItemIndex(20));
            //Validate.Attribute(repo.WebDocument19216801.TraceResultInfo, "TagName", "textarea");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Invalid address') on item 'WebDocument19216801.TraceResult'.", repo.WebDocument19216801.TraceResultInfo, new RecordItemIndex(21));
            //Validate.Attribute(repo.WebDocument19216801.TraceResultInfo, "TagValue", "Invalid address");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=835,Height=191}) on item 'WebDocument19216801.TraceResult'.", repo.WebDocument19216801.TraceResultInfo, new RecordItemIndex(22));
            //Validate.ContainsImage(repo.WebDocument19216801.TraceResultInfo, TraceResult_Screenshot2_2, TraceResult_Screenshot2_2_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='Msg') on item 'WebDocument19216801.DivButtons'.", repo.WebDocument19216801.DivButtonsInfo, new RecordItemIndex(23));
            //Validate.Attribute(repo.WebDocument19216801.DivButtonsInfo, "Id", "Msg");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='WARNING : Ideal BasePort value for the given number of hops should be in the range (1-65505)') on item 'WebDocument19216801.DivButtons'.", repo.WebDocument19216801.DivButtonsInfo, new RecordItemIndex(24));
            //Validate.Attribute(repo.WebDocument19216801.DivButtonsInfo, "InnerText", "WARNING : Ideal BasePort value for the given number of hops should be in the range (1-65505)");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=875,Height=20}) on item 'WebDocument19216801.DivButtons'.", repo.WebDocument19216801.DivButtonsInfo, new RecordItemIndex(25));
            //Validate.ContainsImage(repo.WebDocument19216801.DivButtonsInfo, DivButtons_Screenshot1, DivButtons_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Start test') on item 'WebDocument19216801.Start'.", repo.WebDocument19216801.StartInfo, new RecordItemIndex(26));
            //Validate.Attribute(repo.WebDocument19216801.StartInfo, "Value", "Start test");
            //Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(27));
            
        }

#region Image Feature Data
        CompressedImage TraceResult_Screenshot2
        { get { return repo.WebDocument19216801.TraceResultInfo.GetScreenshot2(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions TraceResult_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage TraceResult_Screenshot2_2
        { get { return repo.WebDocument19216801.TraceResultInfo.GetScreenshot2(new Rectangle(0, 0, 835, 191)); } }

        Imaging.FindOptions TraceResult_Screenshot2_2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage DivButtons_Screenshot1
        { get { return repo.WebDocument19216801.DivButtonsInfo.GetScreenshot1(new Rectangle(0, 0, 875, 20)); } }

        Imaging.FindOptions DivButtons_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
