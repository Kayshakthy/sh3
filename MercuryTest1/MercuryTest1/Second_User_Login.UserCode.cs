///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
    public partial class Second_User_Login
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_OtherLocalUserHasAlreadyLoggedIn()
        {

        	//string str1 = repo.WebDocumentIE.OtherLocalUserHasAlreadyLoggedIn.InnerText;
        	//string str1 = "haHHHGFHGH";
            //string str2 = "invalid";
            /*
            if(str1.StartsWith("Other local user has already")){
            	Report.Info(ReportLevel.Success,"Validation","Other local user has already logged in !!!");
            	Report.Screenshot(repo.WebDocumentIE.OtherLocalUserHasAlreadyLoggedIn,true);
            	TestSuite.Current.GetTestCase("Logout_Arris").Checked = false;
            }else{
            	//login success and logout
            	TestSuite.Current.GetTestCase("Logout_Arris").Checked = true;
            }
			*/

//           bool rst = Validate.Attribute(repo.WebDocumentIE.OtherLocalUserHasAlreadyLoggedInInfo, "InnerText", "Other local user has already logged in, please wait...", "{3}", false);
           bool rst = Validate.Attribute(repo.WebDocumentIE.OtherLocalUserHasAlreadyLoggedInInfo, "InnerText", "Someone else is currently logged into the settings page. Only one session at a time is allowed. Please try again later.", "{3}", false);
           if(rst){
           		Report.Success("Other local user has already logged in");
	           	TestSuite.Current.GetTestCase("Logout_Arris").Checked = false;
	           	Report.Screenshot(repo.WebDocumentIE.OtherLocalUserHasAlreadyLoggedIn,true);
           }else{
//           		Report.Failure("Only one local user logged in NOW");
           		Report.Success("Only one local user logged in NOW");
           		TestSuite.Current.GetTestCase("Logout_Arris").Checked = true;
           }
           //Validate.Attribute(repo.WebDocumentIE.OtherLocalUserHasAlreadyLoggedInInfo, "InnerText", "Other local user has already logged in, please wait...", Validate.DefaultMessage, false);
        }

    }
}