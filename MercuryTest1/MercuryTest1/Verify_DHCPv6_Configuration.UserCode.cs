///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
	public partial class Verify_DHCPv6_Configuration
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		int TotalRows1=0;
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void Validate_DHCPv6_Configuration_Parameters()
		{
			//Validate_DHCPv6_Configuration
			Report.Info("Validate_DHCPv6_Configuration");
			WebDocument webDocument = "/dom[@domain='192.168.0.1']";
			TableTag myTable1 = webDocument.FindSingle("/dom[@domain='192.168.0.1']//div[#'DHCPv6server']/table");
			// Ranorex.InputTag IPv4FirewallProtectTag ="/dom[@domain='192.168.0.1']//div[#'tr_EnableFirewall']/input[#'EnableFirewall']";
			
			//count the rows
			IList<TrTag> rows1 = myTable1.Find<TrTag>("./tbody//tr");
			TotalRows1 = rows1.Count;
			Report.Info("Total rows ",TotalRows1.ToString());
			
			
			if(TotalRows1>0){
				int rowNum = 1;
				IList<TrTag> rows = myTable1.Find<TrTag>("./tbody//tr");
//				Report.Info("rows(tr)",rows.Count.ToString());
				
				//walkthrough all the columns
				foreach ( TrTag row in myTable1.Find ("./ tbody /tr"))
				{
					if(rowNum >1){
						int colNum = 1;
						// Get all cells from the row
						/* rowInfo += " All Cells : ";  */
						foreach ( TdTag cell in row . Find ("./ td"))
						{
							/* rowInfo += cell . InnerText + ", "; */
//							if(colNum == 1 || colNum == 3 ){
//								Report . Info ("cell info: ", cell.InnerText);
//							}
							// Move the mouse to each cell element
							cell . MoveTo ();
							// Set css style
							cell . SetStyle (" background - color "," #33 ff00 ");
							colNum++;
						}
						//Report . Info ( rowInfo );
					}
					rowNum++;
				}
				
				/*
        		IList<TdTag> cols = myTable1.Find<TdTag>("./tbody//td");
        		foreach(TdTag col in cols)
        		{
        			Report.Info(col.InnerText);
        			colNum++;
        		}//end of forloop
				 */
			}
			
			// Report.Screenshot();
			Report.Screenshot("DHCPv6server",myTable1.Element,true);
			
		}

	}
}