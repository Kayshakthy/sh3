///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_and_Allow_Attached_Device_To_Both_WirelessFilterList recording.
    /// </summary>
    [TestModule("8e14b2fb-4075-4b2b-9353-15ad08f36fce", ModuleType.Recording, 1)]
    public partial class Add_and_Allow_Attached_Device_To_Both_WirelessFilterList : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Add_and_Allow_Attached_Device_To_Both_WirelessFilterList instance = new Add_and_Allow_Attached_Device_To_Both_WirelessFilterList();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_and_Allow_Attached_Device_To_Both_WirelessFilterList()
        {
            mac1 = "";
            mac2 = "";
            mac3 = "";
            mac4 = "";
            mac5 = "";
            mac6 = "";
            accessMode = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_and_Allow_Attached_Device_To_Both_WirelessFilterList Instance
        {
            get { return instance; }
        }

#region Variables

        string _mac1;

        /// <summary>
        /// Gets or sets the value of variable mac1.
        /// </summary>
        [TestVariable("69f43ea0-89f8-4a84-9a3e-18eeaf7a5e1c")]
        public string mac1
        {
            get { return _mac1; }
            set { _mac1 = value; }
        }

        string _mac2;

        /// <summary>
        /// Gets or sets the value of variable mac2.
        /// </summary>
        [TestVariable("1b77b4f9-6ec8-4cb9-9fe3-fe3f05c49aa5")]
        public string mac2
        {
            get { return _mac2; }
            set { _mac2 = value; }
        }

        string _mac3;

        /// <summary>
        /// Gets or sets the value of variable mac3.
        /// </summary>
        [TestVariable("31c6af11-1b6c-4287-a7c6-1083a1a6cd80")]
        public string mac3
        {
            get { return _mac3; }
            set { _mac3 = value; }
        }

        string _mac4;

        /// <summary>
        /// Gets or sets the value of variable mac4.
        /// </summary>
        [TestVariable("ebe66d76-5fe7-4b76-8d87-598118bd29ae")]
        public string mac4
        {
            get { return _mac4; }
            set { _mac4 = value; }
        }

        string _mac5;

        /// <summary>
        /// Gets or sets the value of variable mac5.
        /// </summary>
        [TestVariable("49ad7e4c-a256-42ec-a7a7-122bcd7c9551")]
        public string mac5
        {
            get { return _mac5; }
            set { _mac5 = value; }
        }

        string _mac6;

        /// <summary>
        /// Gets or sets the value of variable mac6.
        /// </summary>
        [TestVariable("78f0150c-7bbe-47ed-9aa7-d51ead8315ee")]
        public string mac6
        {
            get { return _mac6; }
            set { _mac6 = value; }
        }

        string _accessMode;

        /// <summary>
        /// Gets or sets the value of variable accessMode.
        /// </summary>
        [TestVariable("a2a27a69-2767-4484-a9f7-dba45de4199e")]
        public string accessMode
        {
            get { return _accessMode; }
            set { _accessMode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Choose_attached_device_to_add_2and5Ghz(mac1, mac2, mac3, mac4, mac5, mac6, accessMode);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
