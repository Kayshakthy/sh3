///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Not_Sufficicent_Pass_5GHz recording.
    /// </summary>
    [TestModule("921deafb-98e9-454a-8e58-21b5cf3eab48", ModuleType.Recording, 1)]
    public partial class Not_Sufficicent_Pass_5GHz : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Not_Sufficicent_Pass_5GHz instance = new Not_Sufficicent_Pass_5GHz();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Not_Sufficicent_Pass_5GHz()
        {
            Not_Sufficient_Pass_5GHz = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Not_Sufficicent_Pass_5GHz Instance
        {
            get { return instance; }
        }

#region Variables

        string _Not_Sufficient_Pass_5GHz;

        /// <summary>
        /// Gets or sets the value of variable Not_Sufficient_Pass_5GHz.
        /// </summary>
        [TestVariable("ba5a91a5-fcb1-4406-a3df-1d8a7abd4ef2")]
        public string Not_Sufficient_Pass_5GHz
        {
            get { return _Not_Sufficient_Pass_5GHz; }
            set { _Not_Sufficient_Pass_5GHz = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.Passphrase50.Click("70;11");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Passphrase50.PressKeys(Not_Sufficient_Pass_5GHz);
            Delay.Milliseconds(100);
            
            try {
                Validate.Attribute(repo.WebDocument19216801.PasstextWifiInfo, "InnerText", "Not Sufficient", Validate.DefaultMessage, false);
                Delay.Milliseconds(100);
            } catch(Exception) {  }
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot14' with region {X=0,Y=0,Width=70,Height=14}) on item 'WebDocument19216801.PasstextWifi'.", repo.WebDocument19216801.PasstextWifiInfo, new RecordItemIndex(5));
            //Validate.ContainsImage(repo.WebDocument19216801.PasstextWifiInfo, PasstextWifi_Screenshot14, PasstextWifi_Screenshot14_Options);
            //Delay.Milliseconds(100);
            
            Validate_Not_Sufficient_Pass_5GHz(Not_Sufficient_Pass_5GHz);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        CompressedImage PasstextWifi_Screenshot14
        { get { return repo.WebDocument19216801.PasstextWifiInfo.GetScreenshot14(new Rectangle(0, 0, 70, 14)); } }

        Imaging.FindOptions PasstextWifi_Screenshot14_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
