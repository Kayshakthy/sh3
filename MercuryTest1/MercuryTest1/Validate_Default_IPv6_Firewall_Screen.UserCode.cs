///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
    public partial class Validate_Default_IPv6_Firewall_Screen
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_Firewall_Page_Default_Settings_IPv6()
        {
        	 //Validate Ipv6 firewall fields
        	
        	//IPv6 -> firewall protection - Enable
        	//IPv6 ->  Block fragmented IP packets - Disable
        	//IPv6 ->  Port scan detection - Disable
        	//IPv6 ->  flood detection - Enable
        	
        	bool FirewallProtect=false,BlockFragment=false,PortScan=false,PFloodDetect=false;
        	Delay.Seconds(2);
        	WebDocument webDocument = "/dom[@domain='192.168.0.1']";
        	webDocument.WaitForDocumentLoaded();
        	
			Ranorex.InputTag IPv6FirewallProtectTag ="/dom[@domain='192.168.0.1']//div[#'tr_EnableFirewallv6']/input[#'EnableFirewallv6']";
			Ranorex.InputTag IPv6BlockFragmentTag ="/dom[@domain='192.168.0.1']//div[#'tr_EnableBlockFramentedPktsv6']/input[#'EnableBlockFramentedPktsv6']";
			Ranorex.InputTag IPv6PortScanTag = "/dom[@domain='192.168.0.1']//div[#'tr_EnablePortScanDetectionv6']/input[#'EnablePortScanDetectionv6']";
			Ranorex.InputTag IPv6IPFloodDetectTag ="/dom[@domain='192.168.0.1']//div[#'tr_EnableIPFloodDetectionv6']/input[#'EnableIPFloodDetectionv6']";
			
			Report.Info("IPv6FirewallProtectTag(Default) : "+IPv6FirewallProtectTag.Checked.ToString());
			if(IPv6FirewallProtectTag.Checked.ToString() == "True"){
				FirewallProtect = true;
			}else{
				FirewallProtect =false;
			}
			Report.Info("IPv6BlockFragmentTag(Default) : "+IPv6BlockFragmentTag.Checked.ToString());
			if(IPv6BlockFragmentTag.Checked.ToString() =="True"){
				BlockFragment = true;
			}else{
				BlockFragment = false;
			}
			Report.Info("IPv6PortScanTag(Default) : " + IPv6PortScanTag.Checked.ToString());
			if(IPv6PortScanTag.Checked.ToString() =="True"){
				PortScan = true;
			}else{
				PortScan = false;
			}
			Report.Info("IPv6IPFloodDetectTag(Default) : " + IPv6IPFloodDetectTag.Checked.ToString());
			if(IPv6IPFloodDetectTag.Checked.ToString() =="True"){
				PFloodDetect = true;
			}else{
				PFloodDetect = false;
			}
			
			if(FirewallProtect  && !BlockFragment && !PortScan && PFloodDetect){
//			if(FirewallProtect == true  && BlockFragment == false  && PortScan == true  && PFloodDetect == true){		//R4.2
				Report.Success( " All default settings are valid  and it is as expected ");
			}else{
				Report.Failure("Some of Firewall_Page_Default_Settings are wrong ");
			}
			Ranorex.DivTag FirewallTag = "/dom[@domain='192.168.0.1']//div[#'IPv6Firewall']";
			Report.Screenshot("Firewall_Page_Default_Settings",FirewallTag.Element);
			Report.Screenshot();
			
        	//Validate.ContainsImage(repo.WebDocument19216801.FmChbxEnableFirewallInfo, FmChbxEnableFirewall_Screenshot1, FmChbxEnableFirewall_Screenshot1_Options);
            Delay.Milliseconds(2);
        }

    }
}