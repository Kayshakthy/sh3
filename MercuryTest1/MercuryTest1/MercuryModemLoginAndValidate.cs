///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The MercuryModemLoginAndValidate recording.
    /// </summary>
    [TestModule("f292c73d-8907-4b63-b337-745e82bcffd6", ModuleType.Recording, 1)]
    public partial class MercuryModemLoginAndValidate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static MercuryModemLoginAndValidate instance = new MercuryModemLoginAndValidate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public MercuryModemLoginAndValidate()
        {
            ModemModeLogin = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static MercuryModemLoginAndValidate Instance
        {
            get { return instance; }
        }

#region Variables

        string _ModemModeLogin;

        /// <summary>
        /// Gets or sets the value of variable ModemModeLogin.
        /// </summary>
        [TestVariable("31a15e63-0315-4870-9362-99c36311fb88")]
        public string ModemModeLogin
        {
            get { return _ModemModeLogin; }
            set { _ModemModeLogin = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument1921681001.Password.Click("114;13");
            Delay.Milliseconds(200);
            
            repo.WebDocument1921681001.Password.PressKeys(ModemModeLogin);
            Delay.Milliseconds(0);
            
            //Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Enabled", "True");
            //Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Class", "submitBtn");
            //Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "TagValue", "Login");
            //Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Value", "Login");
            //Delay.Milliseconds(100);
            
            //Validate.Exists(repo.WebDocument1921681001.ButtonInfo);
            //Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Value", "Login");
            //Delay.Milliseconds(100);
            
            //Validate.ContainsImage(repo.WebDocument1921681001.ButtonInfo, Button_Screenshot2, Button_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            repo.WebDocument1921681001.Button.Click("65;28");
            Delay.Milliseconds(200);
            
            //Validate.Attribute(repo.WebDocument1921681001.LogOutInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument1921681001.LogOutInfo, "InnerText", "Log out");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=45,Height=16}) on item 'WebDocument1921681001.LogOut'.", repo.WebDocument1921681001.LogOutInfo, new RecordItemIndex(13));
            //Validate.ContainsImage(repo.WebDocument1921681001.LogOutInfo, LogOut_Screenshot2, LogOut_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument1921681001.LogOut' at 22;0.", repo.WebDocument1921681001.LogOutInfo, new RecordItemIndex(14));
            //repo.WebDocument1921681001.LogOut.Click("22;0");
            //Delay.Milliseconds(200);
            
            //Validate.Attribute(repo.WebDocument1921681001.LogoContainerInfo, "Enabled", "True");
            //Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument1921681001.LogoContainerInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='logo_container') on item 'WebDocument1921681001.LogoContainer'.", repo.WebDocument1921681001.LogoContainerInfo, new RecordItemIndex(17));
            //Validate.Attribute(repo.WebDocument1921681001.LogoContainerInfo, "Class", "logo_container");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='logo_container') on item 'WebDocument1921681001.LogoContainer'.", repo.WebDocument1921681001.LogoContainerInfo, new RecordItemIndex(18));
            //Validate.Attribute(repo.WebDocument1921681001.LogoContainerInfo, "Id", "logo_container");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=117,Height=83}) on item 'WebDocument1921681001.LogoContainer'.", repo.WebDocument1921681001.LogoContainerInfo, new RecordItemIndex(19));
            //Validate.ContainsImage(repo.WebDocument1921681001.LogoContainerInfo, LogoContainer_Screenshot1, LogoContainer_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(20));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "Enabled", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(21));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='section_header') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(22));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "Class", "section_header");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='Wiztext') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(23));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "Id", "Wiztext");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Modem status overview') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(24));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "InnerText", "Modem status overview");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=728,Height=84}) on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(25));
            //Validate.ContainsImage(repo.WebDocument1921681001.Mainpage.WiztextInfo, Wiztext_Screenshot1, Wiztext_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.Mainpage.Wireless'.", repo.WebDocument1921681001.Mainpage.WirelessInfo, new RecordItemIndex(26));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.WirelessInfo, "Enabled", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.Mainpage.Wireless'.", repo.WebDocument1921681001.Mainpage.WirelessInfo, new RecordItemIndex(27));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.WirelessInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.WirelessInfo, "InnerText", "Wireless");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=55,Height=16}) on item 'WebDocument1921681001.Mainpage.Wireless'.", repo.WebDocument1921681001.Mainpage.WirelessInfo, new RecordItemIndex(29));
            //Validate.ContainsImage(repo.WebDocument1921681001.Mainpage.WirelessInfo, Wireless_Screenshot1, Wireless_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(30));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, "Enabled", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(31));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='section_title') on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(32));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, "Class", "section_title");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Your modem status') on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(33));
            //Validate.Attribute(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, "InnerText", "Your modem status");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=360,Height=29}) on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(34));
            //Validate.ContainsImage(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, YourModemStatus_Screenshot1, YourModemStatus_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.InternetStatus'.", repo.WebDocument1921681001.InternetStatusInfo, new RecordItemIndex(35));
            //Validate.Attribute(repo.WebDocument1921681001.InternetStatusInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='internetStatus') on item 'WebDocument1921681001.InternetStatus'.", repo.WebDocument1921681001.InternetStatusInfo, new RecordItemIndex(36));
            //Validate.Attribute(repo.WebDocument1921681001.InternetStatusInfo, "Id", "internetStatus");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='(Enabled Modem Mode)') on item 'WebDocument1921681001.InternetStatus'.", repo.WebDocument1921681001.InternetStatusInfo, new RecordItemIndex(37));
            //Validate.Attribute(repo.WebDocument1921681001.InternetStatusInfo, "InnerText", "(Enabled Modem Mode)");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=157,Height=16}) on item 'WebDocument1921681001.InternetStatus'.", repo.WebDocument1921681001.InternetStatusInfo, new RecordItemIndex(38));
            //Validate.ContainsImage(repo.WebDocument1921681001.InternetStatusInfo, InternetStatus_Screenshot1, InternetStatus_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage Button_Screenshot2
        { get { return repo.WebDocument1921681001.ButtonInfo.GetScreenshot2(new Rectangle(0, 0, 129, 62)); } }

        Imaging.FindOptions Button_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage LogOut_Screenshot2
        { get { return repo.WebDocument1921681001.LogOutInfo.GetScreenshot2(new Rectangle(0, 0, 45, 16)); } }

        Imaging.FindOptions LogOut_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage LogoContainer_Screenshot1
        { get { return repo.WebDocument1921681001.LogoContainerInfo.GetScreenshot1(new Rectangle(0, 0, 117, 83)); } }

        Imaging.FindOptions LogoContainer_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Wiztext_Screenshot1
        { get { return repo.WebDocument1921681001.Mainpage.WiztextInfo.GetScreenshot1(new Rectangle(0, 0, 728, 84)); } }

        Imaging.FindOptions Wiztext_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Wireless_Screenshot1
        { get { return repo.WebDocument1921681001.Mainpage.WirelessInfo.GetScreenshot1(new Rectangle(0, 0, 55, 16)); } }

        Imaging.FindOptions Wireless_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage YourModemStatus_Screenshot1
        { get { return repo.WebDocument1921681001.Mainpage.YourModemStatusInfo.GetScreenshot1(new Rectangle(0, 0, 360, 29)); } }

        Imaging.FindOptions YourModemStatus_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage InternetStatus_Screenshot1
        { get { return repo.WebDocument1921681001.InternetStatusInfo.GetScreenshot1(new Rectangle(0, 0, 157, 16)); } }

        Imaging.FindOptions InternetStatus_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
