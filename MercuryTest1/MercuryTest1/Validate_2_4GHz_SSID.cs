///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validate_2_4GHz_SSID recording.
    /// </summary>
    [TestModule("d3b7693a-0519-46d7-9dfd-269495dbfcce", ModuleType.Recording, 1)]
    public partial class Validate_2_4GHz_SSID : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Validate_2_4GHz_SSID instance = new Validate_2_4GHz_SSID();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validate_2_4GHz_SSID()
        {
            SSID_2_4GHz_ = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validate_2_4GHz_SSID Instance
        {
            get { return instance; }
        }

#region Variables

        string _SSID_2_4GHz_;

        /// <summary>
        /// Gets or sets the value of variable SSID_2_4GHz_.
        /// </summary>
        [TestVariable("2a9ff1a0-57ee-44cd-8709-132ac3bc7778")]
        public string SSID_2_4GHz_
        {
            get { return _SSID_2_4GHz_; }
            set { _SSID_2_4GHz_ = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'WebDocument19216801.SSID' at 65;17.", repo.WebDocument19216801.SSIDInfo, new RecordItemIndex(1));
            repo.WebDocument19216801.SSID.DoubleClick("65;17");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.SSID);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.SSID);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$SSID_2_4GHz_' with focus on 'WebDocument19216801.SSID'.", repo.WebDocument19216801.SSIDInfo, new RecordItemIndex(4));
            repo.WebDocument19216801.SSID.PressKeys(SSID_2_4GHz_);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Button25.Click("61;15");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='errTipClose') on item 'WebDocument19216801.ErrCloseSSID'.", repo.WebDocument19216801.ErrCloseSSIDInfo, new RecordItemIndex(6));
            //Validate.Attribute(repo.WebDocument19216801.ErrCloseSSIDInfo, "Class", "errTipClose");
            //Delay.Milliseconds(100);
            
            Validate_ErrCloseSSID(SSID_2_4GHz_);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        CompressedImage ErrCloseSSID_Screenshot1
        { get { return repo.WebDocument19216801.ErrCloseSSIDInfo.GetScreenshot1(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions ErrCloseSSID_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
