///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Form_New_Port_Forwarding recording.
    /// </summary>
    [TestModule("b4b64399-8623-4380-9078-a8edabf2782f", ModuleType.Recording, 1)]
    public partial class Form_New_Port_Forwarding : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Form_New_Port_Forwarding instance = new Form_New_Port_Forwarding();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Form_New_Port_Forwarding()
        {
            LocalIPAddr = "";
            LocalStartPort = "";
            LocalEndPort = "";
            ExternalStartPort = "";
            ExternalEndPort = "";
            Port_Fwd_Protocol = "";
            Port_Fwd_Enable = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Form_New_Port_Forwarding Instance
        {
            get { return instance; }
        }

#region Variables

        string _LocalIPAddr;

        /// <summary>
        /// Gets or sets the value of variable LocalIPAddr.
        /// </summary>
        [TestVariable("8b5b264c-e9e5-4da3-bf08-19205311237a")]
        public string LocalIPAddr
        {
            get { return _LocalIPAddr; }
            set { _LocalIPAddr = value; }
        }

        string _LocalStartPort;

        /// <summary>
        /// Gets or sets the value of variable LocalStartPort.
        /// </summary>
        [TestVariable("3715eda2-04f1-4f21-91ea-945f4ed5ad88")]
        public string LocalStartPort
        {
            get { return _LocalStartPort; }
            set { _LocalStartPort = value; }
        }

        string _LocalEndPort;

        /// <summary>
        /// Gets or sets the value of variable LocalEndPort.
        /// </summary>
        [TestVariable("4d7f16db-9e36-4b4e-89fa-f98670fda80e")]
        public string LocalEndPort
        {
            get { return _LocalEndPort; }
            set { _LocalEndPort = value; }
        }

        string _ExternalStartPort;

        /// <summary>
        /// Gets or sets the value of variable ExternalStartPort.
        /// </summary>
        [TestVariable("3edfda43-2bee-4bff-94cc-6770b274ab05")]
        public string ExternalStartPort
        {
            get { return _ExternalStartPort; }
            set { _ExternalStartPort = value; }
        }

        string _ExternalEndPort;

        /// <summary>
        /// Gets or sets the value of variable ExternalEndPort.
        /// </summary>
        [TestVariable("2eb9717d-39d4-49ea-9829-dfbd5e1c6700")]
        public string ExternalEndPort
        {
            get { return _ExternalEndPort; }
            set { _ExternalEndPort = value; }
        }

        string _Port_Fwd_Protocol;

        /// <summary>
        /// Gets or sets the value of variable Port_Fwd_Protocol.
        /// </summary>
        [TestVariable("700f9705-ff67-4153-a0c3-0eb857307b21")]
        public string Port_Fwd_Protocol
        {
            get { return _Port_Fwd_Protocol; }
            set { _Port_Fwd_Protocol = value; }
        }

        string _Port_Fwd_Enable;

        /// <summary>
        /// Gets or sets the value of variable Port_Fwd_Enable.
        /// </summary>
        [TestVariable("1af42b15-bf0c-473f-a67d-dae059af3d62")]
        public string Port_Fwd_Enable
        {
            get { return _Port_Fwd_Enable; }
            set { _Port_Fwd_Enable = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.IPSingleAddress3.Click("23;18");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.IPSingleAddress3);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.IPSingleAddress3);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPSingleAddress3.PressKeys(LocalIPAddr);
            Delay.Milliseconds(100);
            
            repo.WebDocument19216801.LocalStartPort.Click("38;10");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.LocalStartPort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.LocalStartPort);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.LocalStartPort.PressKeys(LocalStartPort);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.LocalEndPort.Click("23;8");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.LocalEndPort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.LocalEndPort);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.LocalEndPort.PressKeys(LocalEndPort);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.ExternalStartPort.Click("58;6");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.ExternalStartPort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.ExternalStartPort);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.ExternalStartPort.PressKeys(ExternalStartPort);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.ExternalEndPort.Click("33;6");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.ExternalEndPort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.ExternalEndPort);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.ExternalEndPort.PressKeys(ExternalEndPort);
            Delay.Milliseconds(0);
            
            Port_Forwarding_Rule_Details(LocalIPAddr, LocalStartPort, LocalEndPort, ExternalStartPort, ExternalEndPort, Port_Fwd_Protocol, Port_Fwd_Enable);
            Delay.Milliseconds(0);
            
            try {
                update_the_values_for_add_forward_rule(Port_Fwd_Protocol, Port_Fwd_Enable);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(21)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
