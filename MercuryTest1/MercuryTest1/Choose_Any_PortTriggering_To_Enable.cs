///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Choose_Any_PortTriggering_To_Enable recording.
    /// </summary>
    [TestModule("5cfafc4d-994e-41a4-947d-f590c23d2446", ModuleType.Recording, 1)]
    public partial class Choose_Any_PortTriggering_To_Enable : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Choose_Any_PortTriggering_To_Enable instance = new Choose_Any_PortTriggering_To_Enable();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Choose_Any_PortTriggering_To_Enable()
        {
            Trigger_Start_Port = "";
            Trigger_End_Port = "";
            Target_Start_Port = "";
            Target_End_Port = "";
            Protocol = "";
            Enabled = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Choose_Any_PortTriggering_To_Enable Instance
        {
            get { return instance; }
        }

#region Variables

        string _Trigger_Start_Port;

        /// <summary>
        /// Gets or sets the value of variable Trigger_Start_Port.
        /// </summary>
        [TestVariable("87fa978a-ed8b-42eb-b206-a04579154b44")]
        public string Trigger_Start_Port
        {
            get { return _Trigger_Start_Port; }
            set { _Trigger_Start_Port = value; }
        }

        string _Trigger_End_Port;

        /// <summary>
        /// Gets or sets the value of variable Trigger_End_Port.
        /// </summary>
        [TestVariable("c8d763f4-de91-408c-b99d-46faf0aafc9a")]
        public string Trigger_End_Port
        {
            get { return _Trigger_End_Port; }
            set { _Trigger_End_Port = value; }
        }

        string _Target_Start_Port;

        /// <summary>
        /// Gets or sets the value of variable Target_Start_Port.
        /// </summary>
        [TestVariable("8e414c63-ac78-4d77-ac1b-67e5da47f20d")]
        public string Target_Start_Port
        {
            get { return _Target_Start_Port; }
            set { _Target_Start_Port = value; }
        }

        string _Target_End_Port;

        /// <summary>
        /// Gets or sets the value of variable Target_End_Port.
        /// </summary>
        [TestVariable("c2a67e8b-3170-4ee8-b47b-d6d5b2090f9a")]
        public string Target_End_Port
        {
            get { return _Target_End_Port; }
            set { _Target_End_Port = value; }
        }

        string _Protocol;

        /// <summary>
        /// Gets or sets the value of variable Protocol.
        /// </summary>
        [TestVariable("f0fe7bb9-127f-4356-9ac1-ef0b123d62d4")]
        public string Protocol
        {
            get { return _Protocol; }
            set { _Protocol = value; }
        }

        string _Enabled;

        /// <summary>
        /// Gets or sets the value of variable Enabled.
        /// </summary>
        [TestVariable("c76e5ed0-0c84-4999-8a49-1811d3867a74")]
        public string Enabled
        {
            get { return _Enabled; }
            set { _Enabled = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Choose_Any_PortTriggering_Rule_To_Enable(Trigger_Start_Port, Trigger_End_Port, Target_Start_Port, Target_End_Port, Protocol, Enabled);
            //Delay.Milliseconds(0);
            
            Choose_Any_Port_Triggering_Rule_To_Enable(Trigger_Start_Port, Trigger_End_Port, Target_Start_Port, Target_End_Port);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
