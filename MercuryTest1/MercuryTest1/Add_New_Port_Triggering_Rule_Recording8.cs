///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_New_Port_Triggering_Rule_Recording8 recording.
    /// </summary>
    [TestModule("e1090d75-d2e4-4f72-8eec-342998c2b973", ModuleType.Recording, 1)]
    public partial class Add_New_Port_Triggering_Rule_Recording8 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Add_New_Port_Triggering_Rule_Recording8 instance = new Add_New_Port_Triggering_Rule_Recording8();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_New_Port_Triggering_Rule_Recording8()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_New_Port_Triggering_Rule_Recording8 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Active='False') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(0));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "Active", "False");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AppIcon='iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACx\r\njwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAUhSURBVDhPlZR5UBN3FMd/CWjRUalCuJS0aGkR\r\n7FhrHaktphW0Sqt2qsGjngEZMdQD5bDYRFBRkXJoCwQQBCxqKpFDgRoqGA61RQ5lI1dJAgRIlHCE\r\nkITN7msIWHXGTqefme/sP28/O+/39vfQ/wEkDDtQWa2Frmnx0Da5BJqo94kGaqG+DG3juqLJE2Wv\r\nZ84h/hS3yNvz3c8Jg7elFeUUP0jGRpQfK7VPpg72l1r0yLOmXKo+inxvBqIt+mJKkeIns41MhMwm\r\nXn8Vx5BiNw9eTfqe21hXzn2Bvrs3iyQHd4D+D5qhouAbBTvnuuxDzo38d7dGr19nZTW9M8PsM3Uu\r\ninJHaMqEYgIm38wpXOi1mt/UGCNVEvdacoHALwL0uMNQiSXkFkfCKawDAlv0sKFqgHS7UCuZHSRg\r\n1ufTndT5KHAxQlMnTOM4hRUtWXtLJk7s6SPE0qtgwBMBWh1BkWcFKSVpECftgx/7SYhQAgS2G+Dr\r\nygHSOe6hbMOJ4zu7r5ovMSpetDw3lG/pmdVwJ0GuMmCyXCDx8wBNs0Gcaf10+5lTmfSDfO7iM8LE\r\nLQLs0bE2tY5jlPq34LDytpJ8J/JOzTI212FCNQZQnMNL9nz/uHekruWysc0kIDFrqE21lR84tmm+\r\nK5M7PkFumbkjO8fh0/jy3yK79IYQOQmb6zSwMLNVR2dnc8Y8pjp7bsFU78uPfy1qu0OOjl4GaH8P\r\nZNescVbEkaB/il7COTT3y7DGvpGIpwC+T3TAKHkKc4MLyugBiTNNBfZBBdZhgnxMo0gxDmApDNyw\r\nhNRKPrn+Sm2XJ6+q0Su5stEzuQJbkSQSr0i8K16VViU53jpEnu4HCPjLAGtE/fB2VJWE5s+bZxJ+\r\ncTLbvlCUoiAGAgAKzCGv9CRk6nSQTcIrySIAMnGADB1AsgbgjAqALTHAV1WD4BRb+8zWL8XNJGzF\r\ndrj1dhzU4zUzoCLnc+ApnsFFvQHCsd7h0DpZX2jteEIeyvqC/5SoDj+QqPZXS1Ss8vb+dbda+5dl\r\nN/bTOcJW611JzggAUeRN3jHD7XS8/dpbcEIkhCStAeKVmlGXHwoP2n3Hp73IxVez+0Uctl+wQlwu\r\nFUHL6hlquVPtcMUb2rO5J+CwWAGxgwZI6NMZlp+/ewX58yaZ2niJOay0Bfb+6X62vqkhNruSubSt\r\nF45afRu3zpXJn4xAvsAFpNTmpuw3m71+qdT6PVbBcYUezqsNEFQjH3qfkx9quzfLBjG45rR9/Gl2\r\nrLTlHrGlj4KxQfxws4ZkPVCRy1MatLbbEtimr0Hn9KWAUdrqoifFuHAEIu/yboLdooaoPhziB4zn\r\n+EipZvxcXkkPzLq2kJNXvDOvsSukWW040EGAT70WFl7vJG338x9abj09/stAp/lSop4irgpG/s4b\r\nIjxcYqsxb5GC2NuqgXAFDlEqAs4+w+F0tx4iO/UQ1k3APhkBGxu0sKiwl5h55JZ01qboVSbZGNr7\r\nlk5QT6mr4VL9GDTaNId9/A/mnfr93orS7lGfBjX4tushoAM3xgAs4/31EY+CZ7UaXPmdBO3QjaZZ\r\nPrFepmE8p4yLzPUVlNghAboq4iLXEaEFPSl9zUpXjuCcW3yl1P16m+YTYQ/uUTEIH93sIdzSMS09\r\nsrTHPiA7w3pzzKLX3SSUxkLTFZeou4fzUNzwTWqYlIeW7WS8ZWHjm2prtzdju+P+nHP2e1Iz7Xbz\r\nom12JfrRdiTMQ0zm65fpcxgImY/tM+PT4l8373+C0N+UOfsYJSgp6gAAAABJRU5ErkJggg==') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(1));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "AppIcon", "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACx\r\njwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAUhSURBVDhPlZR5UBN3FMd/CWjRUalCuJS0aGkR\r\n7FhrHaktphW0Sqt2qsGjngEZMdQD5bDYRFBRkXJoCwQQBCxqKpFDgRoqGA61RQ5lI1dJAgRIlHCE\r\nkITN7msIWHXGTqefme/sP28/O+/39vfQ/wEkDDtQWa2Frmnx0Da5BJqo94kGaqG+DG3juqLJE2Wv\r\nZ84h/hS3yNvz3c8Jg7elFeUUP0jGRpQfK7VPpg72l1r0yLOmXKo+inxvBqIt+mJKkeIns41MhMwm\r\nXn8Vx5BiNw9eTfqe21hXzn2Bvrs3iyQHd4D+D5qhouAbBTvnuuxDzo38d7dGr19nZTW9M8PsM3Uu\r\ninJHaMqEYgIm38wpXOi1mt/UGCNVEvdacoHALwL0uMNQiSXkFkfCKawDAlv0sKFqgHS7UCuZHSRg\r\n1ufTndT5KHAxQlMnTOM4hRUtWXtLJk7s6SPE0qtgwBMBWh1BkWcFKSVpECftgx/7SYhQAgS2G+Dr\r\nygHSOe6hbMOJ4zu7r5ovMSpetDw3lG/pmdVwJ0GuMmCyXCDx8wBNs0Gcaf10+5lTmfSDfO7iM8LE\r\nLQLs0bE2tY5jlPq34LDytpJ8J/JOzTI212FCNQZQnMNL9nz/uHekruWysc0kIDFrqE21lR84tmm+\r\nK5M7PkFumbkjO8fh0/jy3yK79IYQOQmb6zSwMLNVR2dnc8Y8pjp7bsFU78uPfy1qu0OOjl4GaH8P\r\nZNescVbEkaB/il7COTT3y7DGvpGIpwC+T3TAKHkKc4MLyugBiTNNBfZBBdZhgnxMo0gxDmApDNyw\r\nhNRKPrn+Sm2XJ6+q0Su5stEzuQJbkSQSr0i8K16VViU53jpEnu4HCPjLAGtE/fB2VJWE5s+bZxJ+\r\ncTLbvlCUoiAGAgAKzCGv9CRk6nSQTcIrySIAMnGADB1AsgbgjAqALTHAV1WD4BRb+8zWL8XNJGzF\r\ndrj1dhzU4zUzoCLnc+ApnsFFvQHCsd7h0DpZX2jteEIeyvqC/5SoDj+QqPZXS1Ss8vb+dbda+5dl\r\nN/bTOcJW611JzggAUeRN3jHD7XS8/dpbcEIkhCStAeKVmlGXHwoP2n3Hp73IxVez+0Uctl+wQlwu\r\nFUHL6hlquVPtcMUb2rO5J+CwWAGxgwZI6NMZlp+/ewX58yaZ2niJOay0Bfb+6X62vqkhNruSubSt\r\nF45afRu3zpXJn4xAvsAFpNTmpuw3m71+qdT6PVbBcYUezqsNEFQjH3qfkx9quzfLBjG45rR9/Gl2\r\nrLTlHrGlj4KxQfxws4ZkPVCRy1MatLbbEtimr0Hn9KWAUdrqoifFuHAEIu/yboLdooaoPhziB4zn\r\n+EipZvxcXkkPzLq2kJNXvDOvsSukWW040EGAT70WFl7vJG338x9abj09/stAp/lSop4irgpG/s4b\r\nIjxcYqsxb5GC2NuqgXAFDlEqAs4+w+F0tx4iO/UQ1k3APhkBGxu0sKiwl5h55JZ01qboVSbZGNr7\r\nlk5QT6mr4VL9GDTaNId9/A/mnfr93orS7lGfBjX4tushoAM3xgAs4/31EY+CZ7UaXPmdBO3QjaZZ\r\nPrFepmE8p4yLzPUVlNghAboq4iLXEaEFPSl9zUpXjuCcW3yl1P16m+YTYQ/uUTEIH93sIdzSMS09\r\nsrTHPiA7w3pzzKLX3SSUxkLTFZeou4fzUNzwTWqYlIeW7WS8ZWHjm2prtzdju+P+nHP2e1Iz7Xbz\r\nom12JfrRdiTMQ0zm65fpcxgImY/tM+PT4l8373+C0N+UOfsYJSgp6gAAAABJRU5ErkJggg==");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (State='Normal') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(2));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "State", "Normal");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Title='Message from webpage') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(3));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "Title", "Message from webpage");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ProcessId='30636') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(4));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "ProcessId", "30636");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ProcessName='iexplore') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(5));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "ProcessName", "iexplore");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowExtendedStyle='RightScrollBar, Left, DialogModalFrame, WindowEdge, ControlParent') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(6));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "WindowExtendedStyle", "RightScrollBar, Left, DialogModalFrame, WindowEdge, ControlParent");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowStyle='Overlapped, DialogFrame, ClipSiblings, Visible, PopupWindow') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(7));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "WindowStyle", "Overlapped, DialogFrame, ClipSiblings, Visible, PopupWindow");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowText='Message from webpage') on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(8));
            Validate.Attribute(repo.MessageFromWebpage.SelfInfo, "WindowText", "Message from webpage");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=330,Height=222}) on item 'MessageFromWebpage'.", repo.MessageFromWebpage.SelfInfo, new RecordItemIndex(9));
            Validate.ContainsImage(repo.MessageFromWebpage.SelfInfo, MessageFromWebpage_Screenshot1, MessageFromWebpage_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Caption='Table FWPortTrigTable is full') on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(10));
            Validate.Attribute(repo.MessageFromWebpage.Text65535Info, "Caption", "Table FWPortTrigTable is full");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Table FWPortTrigTable is full') on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(11));
            Validate.Attribute(repo.MessageFromWebpage.Text65535Info, "Text", "Table FWPortTrigTable is full");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ProcessId='30636') on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(12));
            Validate.Attribute(repo.MessageFromWebpage.Text65535Info, "ProcessId", "30636");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ProcessName='iexplore') on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(13));
            Validate.Attribute(repo.MessageFromWebpage.Text65535Info, "ProcessName", "iexplore");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowExtendedStyle='RightScrollBar, Left, NoParentNotify') on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(14));
            Validate.Attribute(repo.MessageFromWebpage.Text65535Info, "WindowExtendedStyle", "RightScrollBar, Left, NoParentNotify");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowStyle='Overlapped, Group, Visible, ChildWindow') on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(15));
            Validate.Attribute(repo.MessageFromWebpage.Text65535Info, "WindowStyle", "Overlapped, Group, Visible, ChildWindow");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowText='Table FWPortTrigTable is full') on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(16));
            Validate.Attribute(repo.MessageFromWebpage.Text65535Info, "WindowText", "Table FWPortTrigTable is full");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleName='Table FWPortTrigTable is full') on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(17));
            Validate.Attribute(repo.MessageFromWebpage.Text65535Info, "AccessibleName", "Table FWPortTrigTable is full");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=194,Height=23}) on item 'MessageFromWebpage.Text65535'.", repo.MessageFromWebpage.Text65535Info, new RecordItemIndex(18));
            Validate.ContainsImage(repo.MessageFromWebpage.Text65535Info, Text65535_Screenshot2, Text65535_Screenshot2_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='') on item 'MessageFromWebpage.Text20'.", repo.MessageFromWebpage.Text20Info, new RecordItemIndex(19));
            Validate.Attribute(repo.MessageFromWebpage.Text20Info, "Text", "");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ProcessId='30636') on item 'MessageFromWebpage.Text20'.", repo.MessageFromWebpage.Text20Info, new RecordItemIndex(20));
            Validate.Attribute(repo.MessageFromWebpage.Text20Info, "ProcessId", "30636");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ProcessName='iexplore') on item 'MessageFromWebpage.Text20'.", repo.MessageFromWebpage.Text20Info, new RecordItemIndex(21));
            Validate.Attribute(repo.MessageFromWebpage.Text20Info, "ProcessName", "iexplore");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowExtendedStyle='RightScrollBar, Left, NoParentNotify') on item 'MessageFromWebpage.Text20'.", repo.MessageFromWebpage.Text20Info, new RecordItemIndex(22));
            Validate.Attribute(repo.MessageFromWebpage.Text20Info, "WindowExtendedStyle", "RightScrollBar, Left, NoParentNotify");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowStyle='Overlapped, Group, Visible, ChildWindow') on item 'MessageFromWebpage.Text20'.", repo.MessageFromWebpage.Text20Info, new RecordItemIndex(23));
            Validate.Attribute(repo.MessageFromWebpage.Text20Info, "WindowStyle", "Overlapped, Group, Visible, ChildWindow");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=40,Height=40}) on item 'MessageFromWebpage.Text20'.", repo.MessageFromWebpage.Text20Info, new RecordItemIndex(24));
            Validate.ContainsImage(repo.MessageFromWebpage.Text20Info, Text20_Screenshot1, Text20_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='OK') on item 'MessageFromWebpage.ButtonOK'.", repo.MessageFromWebpage.ButtonOKInfo, new RecordItemIndex(25));
            Validate.Attribute(repo.MessageFromWebpage.ButtonOKInfo, "Text", "OK");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Handle='16058982') on item 'MessageFromWebpage.ButtonOK'.", repo.MessageFromWebpage.ButtonOKInfo, new RecordItemIndex(26));
            Validate.Attribute(repo.MessageFromWebpage.ButtonOKInfo, "Handle", "16058982");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (ProcessId='30636') on item 'MessageFromWebpage.ButtonOK'.", repo.MessageFromWebpage.ButtonOKInfo, new RecordItemIndex(27));
            Validate.Attribute(repo.MessageFromWebpage.ButtonOKInfo, "ProcessId", "30636");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowStyle='Overlapped, MaximizeBox, Group, Visible, ChildWindow') on item 'MessageFromWebpage.ButtonOK'.", repo.MessageFromWebpage.ButtonOKInfo, new RecordItemIndex(28));
            Validate.Attribute(repo.MessageFromWebpage.ButtonOKInfo, "WindowStyle", "Overlapped, MaximizeBox, Group, Visible, ChildWindow");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowText='OK') on item 'MessageFromWebpage.ButtonOK'.", repo.MessageFromWebpage.ButtonOKInfo, new RecordItemIndex(29));
            Validate.Attribute(repo.MessageFromWebpage.ButtonOKInfo, "WindowText", "OK");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleName='OK') on item 'MessageFromWebpage.ButtonOK'.", repo.MessageFromWebpage.ButtonOKInfo, new RecordItemIndex(30));
            Validate.Attribute(repo.MessageFromWebpage.ButtonOKInfo, "AccessibleName", "OK");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=100,Height=35}) on item 'MessageFromWebpage.ButtonOK'.", repo.MessageFromWebpage.ButtonOKInfo, new RecordItemIndex(31));
            Validate.ContainsImage(repo.MessageFromWebpage.ButtonOKInfo, ButtonOK_Screenshot1, ButtonOK_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MessageFromWebpage.ButtonOK' at 43;28.", repo.MessageFromWebpage.ButtonOKInfo, new RecordItemIndex(32));
            repo.MessageFromWebpage.ButtonOK.Click("43;28");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
        CompressedImage MessageFromWebpage_Screenshot1
        { get { return repo.MessageFromWebpage.SelfInfo.GetScreenshot1(new Rectangle(0, 0, 330, 222)); } }

        Imaging.FindOptions MessageFromWebpage_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Text65535_Screenshot2
        { get { return repo.MessageFromWebpage.Text65535Info.GetScreenshot2(new Rectangle(0, 0, 194, 23)); } }

        Imaging.FindOptions Text65535_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Text20_Screenshot1
        { get { return repo.MessageFromWebpage.Text20Info.GetScreenshot1(new Rectangle(0, 0, 40, 40)); } }

        Imaging.FindOptions Text20_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage ButtonOK_Screenshot1
        { get { return repo.MessageFromWebpage.ButtonOKInfo.GetScreenshot1(new Rectangle(0, 0, 100, 35)); } }

        Imaging.FindOptions ButtonOK_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
