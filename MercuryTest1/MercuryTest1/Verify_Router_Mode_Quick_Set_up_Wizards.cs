///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verify_Router_Mode_Quick_Set_up_Wizards recording.
    /// </summary>
    [TestModule("b8c55fba-2eae-4d7d-96af-f68e8bcd4036", ModuleType.Recording, 1)]
    public partial class Verify_Router_Mode_Quick_Set_up_Wizards : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Verify_Router_Mode_Quick_Set_up_Wizards instance = new Verify_Router_Mode_Quick_Set_up_Wizards();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verify_Router_Mode_Quick_Set_up_Wizards()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verify_Router_Mode_Quick_Set_up_Wizards Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Validate.Attribute(repo.WebDocument19216801.WiztextInfo, "Id", "Wiztext");
            Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument19216801.WiztextInfo, "InnerText", "Quick Set-Up Wizards");
            Delay.Milliseconds(100);
            
            Validate.Exists(repo.WebDocument19216801.WiztextInfo);
            Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocumentIE.WiztableInfo, "Id", "wiztable");
            Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocumentIE.WiztableInfo, "TagName", "table");
            Delay.Milliseconds(100);
            
            Validate.Exists(repo.WebDocumentIE.WiztableInfo);
            Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument19216801.ConfigureYourWiFiNetworkInfo, "InnerText", "Configure your WiFi network");
            Delay.Milliseconds(100);
            
            Validate.Exists(repo.WebDocument19216801.ConfigureYourWiFiNetworkInfo);
            Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument19216801.NetworkDiagnosticToolInfo, "InnerText", "Network Diagnostic Tool");
            //Delay.Milliseconds(100);
            
            //Validate.Exists(repo.WebDocument19216801.NetworkDiagnosticToolInfo);
            //Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument19216801.Wiztable.NetworkDiagnosticTool1Info, "InnerText", "Network diagnostic tool");
            Delay.Milliseconds(100);
            
            Validate.Exists(repo.WebDocument19216801.Wiztable.NetworkDiagnosticTool1Info);
            Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument19216801.Wiztable.Layer2Info, "Class", "darkblue replaced-svg");
            Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument19216801.Wiztable.Layer2Info, "Id", "Layer_2");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='\n\n\n') on item 'WebDocument19216801.Wiztable.Layer2'.", repo.WebDocument19216801.Wiztable.Layer2Info, new RecordItemIndex(14));
            //Validate.Attribute(repo.WebDocument19216801.Wiztable.Layer2Info, "InnerText", "\n\n\n");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=180,Height=60}) on item 'WebDocument19216801.Wiztable.Layer2'.", repo.WebDocument19216801.Wiztable.Layer2Info, new RecordItemIndex(15));
            Validate.ContainsImage(repo.WebDocument19216801.Wiztable.Layer2Info, Layer2_Screenshot1, Layer2_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument19216801.ModifyYourGuestNetwork1Info, "InnerText", "Modify Your Guest Network");
            //Delay.Milliseconds(100);
            
            //Validate.Exists(repo.WebDocument19216801.ModifyYourGuestNetwork1Info);
            //Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument19216801.ModifyYourGuestNetworkInfo, "InnerText", "Modify your Guest network");
            Delay.Milliseconds(100);
            
            Validate.Exists(repo.WebDocument19216801.ModifyYourGuestNetworkInfo);
            Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument19216801.Wiztable.Layer21Info, "Class", "darkblue replaced-svg");
            Delay.Milliseconds(100);
            
            Validate.Attribute(repo.WebDocument19216801.Wiztable.Layer21Info, "Id", "Layer_2");
            Delay.Milliseconds(100);
            
            Validate.Exists(repo.WebDocument19216801.Wiztable.Layer21Info);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "Quick Set-up Wizards", null, false, new RecordItemIndex(23));
            
        }

#region Image Feature Data
        CompressedImage Layer2_Screenshot1
        { get { return repo.WebDocument19216801.Wiztable.Layer2Info.GetScreenshot1(new Rectangle(0, 0, 180, 60)); } }

        Imaging.FindOptions Layer2_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
