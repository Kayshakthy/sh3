///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verify_TCP_Port_Exception_list recording.
    /// </summary>
    [TestModule("1e747292-0b46-4085-84f5-ef8c0cde5114", ModuleType.Recording, 1)]
    public partial class Verify_TCP_Port_Exception_list : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Verify_TCP_Port_Exception_list instance = new Verify_TCP_Port_Exception_list();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verify_TCP_Port_Exception_list()
        {
            IP_Last_Octet = "a";
            Port_Fwd_Protocol = "TCP";
            Port_Fwd_Enable = "On";
            Local_Start = "25";
            Local_End = "25";
            External_Start = "28";
            External_End = "29";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verify_TCP_Port_Exception_list Instance
        {
            get { return instance; }
        }

#region Variables

        string _IP_Last_Octet;

        /// <summary>
        /// Gets or sets the value of variable IP_Last_Octet.
        /// </summary>
        [TestVariable("ff8f0f26-0d2f-473a-a9f4-bb375a02231f")]
        public string IP_Last_Octet
        {
            get { return _IP_Last_Octet; }
            set { _IP_Last_Octet = value; }
        }

        string _Port_Fwd_Protocol;

        /// <summary>
        /// Gets or sets the value of variable Port_Fwd_Protocol.
        /// </summary>
        [TestVariable("0b9e78ea-cbdc-4698-971a-9e68660badae")]
        public string Port_Fwd_Protocol
        {
            get { return _Port_Fwd_Protocol; }
            set { _Port_Fwd_Protocol = value; }
        }

        string _Port_Fwd_Enable;

        /// <summary>
        /// Gets or sets the value of variable Port_Fwd_Enable.
        /// </summary>
        [TestVariable("88f3f99f-7482-4147-874f-93c5f6fd7504")]
        public string Port_Fwd_Enable
        {
            get { return _Port_Fwd_Enable; }
            set { _Port_Fwd_Enable = value; }
        }

        string _Local_Start;

        /// <summary>
        /// Gets or sets the value of variable Local_Start.
        /// </summary>
        [TestVariable("7854e409-d300-466e-824b-801937e08974")]
        public string Local_Start
        {
            get { return _Local_Start; }
            set { _Local_Start = value; }
        }

        string _Local_End;

        /// <summary>
        /// Gets or sets the value of variable Local_End.
        /// </summary>
        [TestVariable("1f6339ee-0660-4df2-a544-6858e9f06ba8")]
        public string Local_End
        {
            get { return _Local_End; }
            set { _Local_End = value; }
        }

        string _External_Start;

        /// <summary>
        /// Gets or sets the value of variable External_Start.
        /// </summary>
        [TestVariable("4002157e-cec4-4ec5-b015-0e0a3363c0c3")]
        public string External_Start
        {
            get { return _External_Start; }
            set { _External_Start = value; }
        }

        string _External_End;

        /// <summary>
        /// Gets or sets the value of variable External_End.
        /// </summary>
        [TestVariable("41a6dd83-0f4c-4f5d-896f-e5840bcab73e")]
        public string External_End
        {
            get { return _External_End; }
            set { _External_End = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Validate.Attribute(repo.WebDocument19216801.IPAdd1Info, "TagValue", "Create a new rule");
            Delay.Milliseconds(100);
            
            repo.WebDocument19216801.IPAdd1.Click("128;39");
            Delay.Milliseconds(200);
            
            repo.WebDocument19216801.IPSingleAddress3.Click("28;17");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.IPSingleAddress3);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPSingleAddress3.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPSingleAddress3.PressKeys(IP_Last_Octet);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPSingleAddress3.PressKeys("{Tab}");
            Delay.Milliseconds(0);
            
            //Validate_IsNotAValidIPAddress1(IP_Last_Octet);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.LocalStartPort' at 22;13.", repo.WebDocument19216801.LocalStartPortInfo, new RecordItemIndex(8));
            repo.WebDocument19216801.LocalStartPort.Click("22;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocument19216801.LocalStartPort'.", repo.WebDocument19216801.LocalStartPortInfo, new RecordItemIndex(9));
            Keyboard.PrepareFocus(repo.WebDocument19216801.LocalStartPort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'WebDocument19216801.LocalStartPort'.", repo.WebDocument19216801.LocalStartPortInfo, new RecordItemIndex(10));
            repo.WebDocument19216801.LocalStartPort.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Local_Start' with focus on 'WebDocument19216801.LocalStartPort'.", repo.WebDocument19216801.LocalStartPortInfo, new RecordItemIndex(11));
            repo.WebDocument19216801.LocalStartPort.PressKeys(Local_Start);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.LocalEndPort' at 35;15.", repo.WebDocument19216801.LocalEndPortInfo, new RecordItemIndex(12));
            repo.WebDocument19216801.LocalEndPort.Click("35;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocument19216801.LocalEndPort'.", repo.WebDocument19216801.LocalEndPortInfo, new RecordItemIndex(13));
            Keyboard.PrepareFocus(repo.WebDocument19216801.LocalEndPort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'WebDocument19216801.LocalEndPort'.", repo.WebDocument19216801.LocalEndPortInfo, new RecordItemIndex(14));
            repo.WebDocument19216801.LocalEndPort.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Local_End' with focus on 'WebDocument19216801.LocalEndPort'.", repo.WebDocument19216801.LocalEndPortInfo, new RecordItemIndex(15));
            repo.WebDocument19216801.LocalEndPort.PressKeys(Local_End);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.ExternalStartPort' at 43;15.", repo.WebDocument19216801.ExternalStartPortInfo, new RecordItemIndex(16));
            repo.WebDocument19216801.ExternalStartPort.Click("43;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocument19216801.ExternalStartPort'.", repo.WebDocument19216801.ExternalStartPortInfo, new RecordItemIndex(17));
            Keyboard.PrepareFocus(repo.WebDocument19216801.ExternalStartPort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'WebDocument19216801.ExternalStartPort'.", repo.WebDocument19216801.ExternalStartPortInfo, new RecordItemIndex(18));
            repo.WebDocument19216801.ExternalStartPort.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$External_Start' with focus on 'WebDocument19216801.ExternalStartPort'.", repo.WebDocument19216801.ExternalStartPortInfo, new RecordItemIndex(19));
            repo.WebDocument19216801.ExternalStartPort.PressKeys(External_Start);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.ExternalEndPort' at 40;9.", repo.WebDocument19216801.ExternalEndPortInfo, new RecordItemIndex(20));
            repo.WebDocument19216801.ExternalEndPort.Click("40;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocument19216801.ExternalEndPort'.", repo.WebDocument19216801.ExternalEndPortInfo, new RecordItemIndex(21));
            Keyboard.PrepareFocus(repo.WebDocument19216801.ExternalEndPort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'WebDocument19216801.ExternalEndPort'.", repo.WebDocument19216801.ExternalEndPortInfo, new RecordItemIndex(22));
            repo.WebDocument19216801.ExternalEndPort.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$External_End' with focus on 'WebDocument19216801.ExternalEndPort'.", repo.WebDocument19216801.ExternalEndPortInfo, new RecordItemIndex(23));
            repo.WebDocument19216801.ExternalEndPort.PressKeys(External_End);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.FmSelProtocol.CiteTagUDP' at 199;17.", repo.WebDocument19216801.FmSelProtocol.CiteTagUDPInfo, new RecordItemIndex(24));
            //repo.WebDocument19216801.FmSelProtocol.CiteTagUDP.Click("199;17");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}' with focus on 'WebDocument19216801.FmSelProtocol.SomeSpanTag8'.", repo.WebDocument19216801.FmSelProtocol.SomeSpanTag8Info, new RecordItemIndex(25));
            //repo.WebDocument19216801.FmSelProtocol.SomeSpanTag8.PressKeys("{Down}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}' with focus on 'WebDocument19216801.FmSelProtocol.SomeSpanTag8'.", repo.WebDocument19216801.FmSelProtocol.SomeSpanTag8Info, new RecordItemIndex(26));
            //repo.WebDocument19216801.FmSelProtocol.SomeSpanTag8.PressKeys("{Down}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Up}' with focus on 'WebDocument19216801.FmSelProtocol.SomeSpanTag8'.", repo.WebDocument19216801.FmSelProtocol.SomeSpanTag8Info, new RecordItemIndex(27));
            //repo.WebDocument19216801.FmSelProtocol.SomeSpanTag8.PressKeys("{Up}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Up}' with focus on 'WebDocument19216801.FmSelProtocol.SomeSpanTag8'.", repo.WebDocument19216801.FmSelProtocol.SomeSpanTag8Info, new RecordItemIndex(28));
            //repo.WebDocument19216801.FmSelProtocol.SomeSpanTag8.PressKeys("{Up}");
            //Delay.Milliseconds(0);
            
            try {
                update_the_values_for_add_forward_rule(Port_Fwd_Protocol, Port_Fwd_Enable);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(29)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.AddApply' at 89;29.", repo.WebDocument19216801.AddApplyInfo, new RecordItemIndex(30));
            repo.WebDocument19216801.AddApply.Click("89;29");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-LocalEndPort') on item 'WebDocumentIE.ErrCloseLocalEndPort'.", repo.WebDocumentIE.ErrCloseLocalEndPortInfo, new RecordItemIndex(31));
            Validate.Attribute(repo.WebDocumentIE.ErrCloseLocalEndPortInfo, "Id", "errClose-LocalEndPort");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=31,Height=36}) on item 'WebDocumentIE.ErrCloseLocalEndPort'.", repo.WebDocumentIE.ErrCloseLocalEndPortInfo, new RecordItemIndex(32));
            //Validate.ContainsImage(repo.WebDocumentIE.ErrCloseLocalEndPortInfo, ErrCloseLocalEndPort_Screenshot2, ErrCloseLocalEndPort_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='The configured port range cannot contain one of the following reserved ports 25,53,135,137,138,139,161,162,445,1080') on item 'WebDocument19216801.TheConfiguredPortRangeCannotContain'.", repo.WebDocument19216801.TheConfiguredPortRangeCannotContainInfo, new RecordItemIndex(33));
            Validate.Attribute(repo.WebDocument19216801.TheConfiguredPortRangeCannotContainInfo, "InnerText", "The configured port range cannot contain one of the following reserved ports 25,53,135,137,138,139,161,162,445,1080");
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(34));
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=252,Height=78}) on item 'WebDocument19216801.TheConfiguredPortRangeCannotContain'.", repo.WebDocument19216801.TheConfiguredPortRangeCannotContainInfo, new RecordItemIndex(35));
            //Validate.ContainsImage(repo.WebDocument19216801.TheConfiguredPortRangeCannotContainInfo, TheConfiguredPortRangeCannotContain_Screenshot1, TheConfiguredPortRangeCannotContain_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage IsNotAValidIPAddress1_Screenshot1
        { get { return repo.WebDocument19216801.IsNotAValidIPAddress1Info.GetScreenshot1(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions IsNotAValidIPAddress1_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage ErrCloseLocalEndPort_Screenshot2
        { get { return repo.WebDocumentIE.ErrCloseLocalEndPortInfo.GetScreenshot2(new Rectangle(0, 0, 31, 36)); } }

        Imaging.FindOptions ErrCloseLocalEndPort_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage TheConfiguredPortRangeCannotContain_Screenshot1
        { get { return repo.WebDocument19216801.TheConfiguredPortRangeCannotContainInfo.GetScreenshot1(new Rectangle(0, 0, 252, 78)); } }

        Imaging.FindOptions TheConfiguredPortRangeCannotContain_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
