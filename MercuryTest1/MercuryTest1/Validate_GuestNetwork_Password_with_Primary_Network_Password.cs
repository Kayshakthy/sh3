///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validate_GuestNetwork_Password_with_Primary_Network_Password recording.
    /// </summary>
    [TestModule("c2b15ac9-8fec-4112-b766-460cb33e1f95", ModuleType.Recording, 1)]
    public partial class Validate_GuestNetwork_Password_with_Primary_Network_Password : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Validate_GuestNetwork_Password_with_Primary_Network_Password instance = new Validate_GuestNetwork_Password_with_Primary_Network_Password();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validate_GuestNetwork_Password_with_Primary_Network_Password()
        {
            Good_Guest_Pass = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validate_GuestNetwork_Password_with_Primary_Network_Password Instance
        {
            get { return instance; }
        }

#region Variables

        string _Good_Guest_Pass;

        /// <summary>
        /// Gets or sets the value of variable Good_Guest_Pass.
        /// </summary>
        [TestVariable("87122712-19d4-4af3-8e22-89b2793dc8ee")]
        public string Good_Guest_Pass
        {
            get { return _Good_Guest_Pass; }
            set { _Good_Guest_Pass = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.Passphrase.Click("49;11");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Passphrase);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Passphrase);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Passphrase.PressKeys(Good_Guest_Pass);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Button7.Click("99;20");
            Delay.Milliseconds(200);
            
            //Validate.Attribute(repo.WebDocument19216801.PasswordShouldNotBeTheSameAsPrimaInfo, "InnerText", "Password should not be the same as primary network.");
            //Delay.Milliseconds(100);
            
            Validate_PasswordShouldNotBeTheSameAsPrima(Good_Guest_Pass);
            Delay.Milliseconds(0);
            
            //Validate.ContainsImage(repo.WebDocument19216801.PasswordShouldNotBeTheSameAsPrimaInfo, PasswordShouldNotBeTheSameAsPrima_Screenshot1_2, PasswordShouldNotBeTheSameAsPrima_Screenshot1_2_Options);
            //Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument19216801.ErrClosePassphraseInfo, "Class", "errTipClose");
            //Delay.Milliseconds(100);
            
            //Validate.Attribute(repo.WebDocument19216801.ErrClosePassphraseInfo, "Id", "errClose-Passphrase");
            //Delay.Milliseconds(100);
            
            //Validate.ContainsImage(repo.WebDocument19216801.ErrClosePassphraseInfo, ErrClosePassphrase_Screenshot1, ErrClosePassphrase_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage PasswordShouldNotBeTheSameAsPrima_Screenshot1
        { get { return repo.WebDocument19216801.PasswordShouldNotBeTheSameAsPrimaInfo.GetScreenshot1(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions PasswordShouldNotBeTheSameAsPrima_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage PasswordShouldNotBeTheSameAsPrima_Screenshot1_2
        { get { return repo.WebDocument19216801.PasswordShouldNotBeTheSameAsPrimaInfo.GetScreenshot1(new Rectangle(0, 0, 211, 43)); } }

        Imaging.FindOptions PasswordShouldNotBeTheSameAsPrima_Screenshot1_2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage ErrClosePassphrase_Screenshot1
        { get { return repo.WebDocument19216801.ErrClosePassphraseInfo.GetScreenshot1(new Rectangle(0, 0, 31, 36)); } }

        Imaging.FindOptions ErrClosePassphrase_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
