///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ViewDeviceInfo recording.
    /// </summary>
    [TestModule("6f600c4e-08dd-4720-a825-1e9d599c3065", ModuleType.Recording, 1)]
    public partial class ViewDeviceInfo : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static ViewDeviceInfo instance = new ViewDeviceInfo();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ViewDeviceInfo()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ViewDeviceInfo Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Admin' at 47;16.", repo.WebDocument19216801.AdminInfo, new RecordItemIndex(0));
            repo.WebDocument19216801.Admin.Click("47;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Info' at 18;14.", repo.WebDocument19216801.InfoInfo, new RecordItemIndex(1));
            repo.WebDocument19216801.Info.Click("18;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=':  DOCSIS 3.0 ') on item 'WebDocument19216801.StandardSpecificationCompliant'.", repo.WebDocument19216801.StandardSpecificationCompliantInfo, new RecordItemIndex(2));
            Validate.Attribute(repo.WebDocument19216801.StandardSpecificationCompliantInfo, "InnerText", ":  DOCSIS 3.0 ");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=117,Height=24}) on item 'WebDocument19216801.StandardSpecificationCompliant'.", repo.WebDocument19216801.StandardSpecificationCompliantInfo, new RecordItemIndex(3));
            Validate.ContainsImage(repo.WebDocument19216801.StandardSpecificationCompliantInfo, StandardSpecificationCompliant_Screenshot1, StandardSpecificationCompliant_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=':  4') on item 'WebDocument19216801.HardwareVersion'.", repo.WebDocument19216801.HardwareVersionInfo, new RecordItemIndex(4));
            Validate.Attribute(repo.WebDocument19216801.HardwareVersionInfo, "InnerText", ":  4");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=21,Height=24}) on item 'WebDocument19216801.HardwareVersion'.", repo.WebDocument19216801.HardwareVersionInfo, new RecordItemIndex(5));
            Validate.ContainsImage(repo.WebDocument19216801.HardwareVersionInfo, HardwareVersion_Screenshot1, HardwareVersion_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=':  9.1.88J2') on item 'WebDocument19216801.SoftwareVersion'.", repo.WebDocument19216801.SoftwareVersionInfo, new RecordItemIndex(6));
            Validate.Attribute(repo.WebDocument19216801.SoftwareVersionInfo, "InnerText", ":  9.1.88J2");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=81,Height=24}) on item 'WebDocument19216801.SoftwareVersion'.", repo.WebDocument19216801.SoftwareVersionInfo, new RecordItemIndex(7));
            Validate.ContainsImage(repo.WebDocument19216801.SoftwareVersionInfo, SoftwareVersion_Screenshot1, SoftwareVersion_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "Software Version Details", null, false, new RecordItemIndex(8));
            
        }

#region Image Feature Data
        CompressedImage StandardSpecificationCompliant_Screenshot1
        { get { return repo.WebDocument19216801.StandardSpecificationCompliantInfo.GetScreenshot1(new Rectangle(0, 0, 117, 24)); } }

        Imaging.FindOptions StandardSpecificationCompliant_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage HardwareVersion_Screenshot1
        { get { return repo.WebDocument19216801.HardwareVersionInfo.GetScreenshot1(new Rectangle(0, 0, 21, 24)); } }

        Imaging.FindOptions HardwareVersion_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage SoftwareVersion_Screenshot1
        { get { return repo.WebDocument19216801.SoftwareVersionInfo.GetScreenshot1(new Rectangle(0, 0, 81, 24)); } }

        Imaging.FindOptions SoftwareVersion_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
