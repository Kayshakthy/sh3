///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Navigate_To_UPnP recording.
    /// </summary>
    [TestModule("958cdc18-cbf5-4643-b4c8-38cb2150d3e7", ModuleType.Recording, 1)]
    public partial class Navigate_To_UPnP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Navigate_To_UPnP instance = new Navigate_To_UPnP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Navigate_To_UPnP()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Navigate_To_UPnP Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 15s.", new RecordItemIndex(0));
            Delay.Duration(15000, false);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument19216801.AdvancedSettings'.", repo.WebDocument19216801.AdvancedSettingsInfo, new RecordItemIndex(1));
            //Validate.Attribute(repo.WebDocument19216801.AdvancedSettingsInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Advanced settings') on item 'WebDocument19216801.AdvancedSettings'.", repo.WebDocument19216801.AdvancedSettingsInfo, new RecordItemIndex(2));
            //Validate.Attribute(repo.WebDocument19216801.AdvancedSettingsInfo, "InnerText", "Advanced settings");
            //Delay.Milliseconds(100);
            
            repo.WebDocument19216801.AdvancedSettings.Click("38;8");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.UPnP' at 30;11.", repo.WebDocument19216801.UPnPInfo, new RecordItemIndex(4));
            //repo.WebDocument19216801.UPnP.Click("30;11");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Scroll Vertical by -360 units.", new RecordItemIndex(5));
            //Mouse.ScrollWheel(-360);
            //Delay.Milliseconds(500);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument19216801.UPnP'.", repo.WebDocument19216801.UPnPInfo, new RecordItemIndex(6));
            //Validate.Attribute(repo.WebDocument19216801.UPnPInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='UPnP') on item 'WebDocument19216801.UPnP'.", repo.WebDocument19216801.UPnPInfo, new RecordItemIndex(7));
            //Validate.Attribute(repo.WebDocument19216801.UPnPInfo, "InnerText", "UPnP");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Href='http://192.168.0.1/?upnp_setting&mid=uPnP') on item 'WebDocument19216801.UPnP'.", repo.WebDocument19216801.UPnPInfo, new RecordItemIndex(8));
            //Validate.Attribute(repo.WebDocument19216801.UPnPInfo, "Href", "http://192.168.0.1/?upnp_setting&mid=uPnP");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=32,Height=16}) on item 'WebDocument19216801.UPnP'.", repo.WebDocument19216801.UPnPInfo, new RecordItemIndex(9));
            //Validate.ContainsImage(repo.WebDocument19216801.UPnPInfo, UPnP_Screenshot2, UPnP_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.UPnP' at 11;8.", repo.WebDocument19216801.UPnPInfo, new RecordItemIndex(10));
            //repo.WebDocument19216801.UPnP.Click("11;8");
            //Delay.Milliseconds(200);
            
            repo.WebDocument19216801.UPnP.DoubleClick("12;3");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument19216801.LabelUPnP'.", repo.WebDocument19216801.LabelUPnPInfo, new RecordItemIndex(12));
            //Validate.Attribute(repo.WebDocument19216801.LabelUPnPInfo, "Visible", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='label_uPnP') on item 'WebDocument19216801.LabelUPnP'.", repo.WebDocument19216801.LabelUPnPInfo, new RecordItemIndex(13));
            //Validate.Attribute(repo.WebDocument19216801.LabelUPnPInfo, "Id", "label_uPnP");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='UPnP') on item 'WebDocument19216801.LabelUPnP'.", repo.WebDocument19216801.LabelUPnPInfo, new RecordItemIndex(14));
            //Validate.Attribute(repo.WebDocument19216801.LabelUPnPInfo, "InnerText", "UPnP");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=728,Height=66}) on item 'WebDocument19216801.LabelUPnP'.", repo.WebDocument19216801.LabelUPnPInfo, new RecordItemIndex(15));
            //Validate.ContainsImage(repo.WebDocument19216801.LabelUPnPInfo, LabelUPnP_Screenshot1, LabelUPnP_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage UPnP_Screenshot2
        { get { return repo.WebDocument19216801.UPnPInfo.GetScreenshot2(new Rectangle(0, 0, 32, 16)); } }

        Imaging.FindOptions UPnP_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage LabelUPnP_Screenshot1
        { get { return repo.WebDocument19216801.LabelUPnPInfo.GetScreenshot1(new Rectangle(0, 0, 728, 66)); } }

        Imaging.FindOptions LabelUPnP_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
