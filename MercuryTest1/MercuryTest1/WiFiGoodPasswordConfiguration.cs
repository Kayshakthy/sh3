///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The WiFiGoodPasswordConfiguration recording.
    /// </summary>
    [TestModule("c6492456-1604-491c-9b89-a8108b2d5265", ModuleType.Recording, 1)]
    public partial class WiFiGoodPasswordConfiguration : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static WiFiGoodPasswordConfiguration instance = new WiFiGoodPasswordConfiguration();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public WiFiGoodPasswordConfiguration()
        {
            NewVariable = "virginMedia!2345";
            PasswordConfig = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static WiFiGoodPasswordConfiguration Instance
        {
            get { return instance; }
        }

#region Variables

        string _NewVariable;

        /// <summary>
        /// Gets or sets the value of variable NewVariable.
        /// </summary>
        [TestVariable("78abaa63-fca4-421a-b3e7-aac0715f9bf8")]
        public string NewVariable
        {
            get { return _NewVariable; }
            set { _NewVariable = value; }
        }

        string _PasswordConfig;

        /// <summary>
        /// Gets or sets the value of variable PasswordConfig.
        /// </summary>
        [TestVariable("e820d74a-c8e9-423e-bf2e-dea2a60d2618")]
        public string PasswordConfig
        {
            get { return _PasswordConfig; }
            set { _PasswordConfig = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.ConfigureYourWiFiConnection' at 93;23.", repo.WebDocument19216801.ConfigureYourWiFiConnectionInfo, new RecordItemIndex(0));
            //repo.WebDocument19216801.ConfigureYourWiFiConnection.Click("93;23");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='WiFi configuration') on item 'WebDocument19216801.WiFiConfiguration'.", repo.WebDocument19216801.WiFiConfigurationInfo, new RecordItemIndex(1));
            //Validate.Attribute(repo.WebDocument19216801.WiFiConfigurationInfo, "InnerText", "WiFi configuration");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WebDocument19216801.WiFiConfiguration'.", repo.WebDocument19216801.WiFiConfigurationInfo, new RecordItemIndex(2));
            //Validate.Exists(repo.WebDocument19216801.WiFiConfigurationInfo);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Configure your WiFi network') on item 'WebDocument19216801.ConfigureYourWiFiNetwork'.", repo.WebDocument19216801.ConfigureYourWiFiNetworkInfo, new RecordItemIndex(3));
            Validate.Attribute(repo.WebDocument19216801.ConfigureYourWiFiNetworkInfo, "InnerText", "Configure your WiFi network");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.ConfigureYourWiFiNetwork' at 118;17.", repo.WebDocument19216801.ConfigureYourWiFiNetworkInfo, new RecordItemIndex(4));
            repo.WebDocument19216801.ConfigureYourWiFiNetwork.Click("118;17");
            Delay.Milliseconds(200);
            
            repo.WebDocument19216801.Change.Click("19;12");
            Delay.Milliseconds(200);
            
            //repo.WebDocument19216801.NewWiFiPassword.Click("21;10");
            //Delay.Milliseconds(200);
            
            repo.WebDocument19216801.NewWiFiPassword.Click("21;10");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.NewWiFiPassword);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.NewWiFiPassword);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.NewWiFiPassword.PressKeys(PasswordConfig);
            Delay.Milliseconds(0);
            
            //repo.WebDocument19216801.NewWiFiPassword.PressKeys(PasswordConfig);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Good') on item 'WebDocument19216801.PasstextWifi'.", repo.WebDocument19216801.PasstextWifiInfo, new RecordItemIndex(12));
            Validate.Attribute(repo.WebDocument19216801.PasstextWifiInfo, "InnerText", "Good");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WebDocument19216801.PasstextWifi'.", repo.WebDocument19216801.PasstextWifiInfo, new RecordItemIndex(13));
            Validate.Exists(repo.WebDocument19216801.PasstextWifiInfo);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=17,Height=19}) on item 'WebDocument19216801.TickMarkNewWiFiPassword'.", repo.WebDocument19216801.TickMarkNewWiFiPasswordInfo, new RecordItemIndex(14));
            //Validate.ContainsImage(repo.WebDocument19216801.TickMarkNewWiFiPasswordInfo, TickMarkNewWiFiPassword_Screenshot1, TickMarkNewWiFiPassword_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            Verify_and_Validate_Wifi_Good_Password_Result();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.WiFiNetworkFrame01.Button6' at 82;33.", repo.WebDocument19216801.WiFiNetworkFrame01.Button6Info, new RecordItemIndex(16));
            repo.WebDocument19216801.WiFiNetworkFrame01.Button6.Click("82;33");
            Delay.Milliseconds(200);
            
            //repo.WebDocument19216801.WiFiNetworkFrame0.Click("403;344");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 100ms.", new RecordItemIndex(18));
            Delay.Duration(100, false);
            
        }

#region Image Feature Data
        CompressedImage TickMarkNewWiFiPassword_Screenshot1
        { get { return repo.WebDocument19216801.TickMarkNewWiFiPasswordInfo.GetScreenshot1(new Rectangle(0, 0, 17, 19)); } }

        Imaging.FindOptions TickMarkNewWiFiPassword_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
