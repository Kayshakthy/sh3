///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Perform_Jperf_Server_Application recording.
    /// </summary>
    [TestModule("5c8d0e07-b27e-4fd1-89e6-1bd7f3338648", ModuleType.Recording, 1)]
    public partial class Perform_Jperf_Server_Application : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Perform_Jperf_Server_Application instance = new Perform_Jperf_Server_Application();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Perform_Jperf_Server_Application()
        {
            Server_Listen_Port = "";
            Server_Protocol = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Perform_Jperf_Server_Application Instance
        {
            get { return instance; }
        }

#region Variables

        string _Server_Listen_Port;

        /// <summary>
        /// Gets or sets the value of variable Server_Listen_Port.
        /// </summary>
        [TestVariable("ea400dac-6b5c-44de-93f1-8fdd32c11525")]
        public string Server_Listen_Port
        {
            get { return _Server_Listen_Port; }
            set { _Server_Listen_Port = value; }
        }

        string _Server_Protocol;

        /// <summary>
        /// Gets or sets the value of variable Server_Protocol.
        /// </summary>
        [TestVariable("def67e2c-eb9d-4933-b36d-831886ca408a")]
        public string Server_Protocol
        {
            get { return _Server_Protocol; }
            set { _Server_Protocol = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Host.Local.RunApplication("C:\\Work\\Test Tools\\jperf-2.0.2\\jperf-2.0.2\\jperf.bat", "", "C:\\Work\\Test Tools\\jperf-2.0.2\\jperf-2.0.2", false);
            Delay.Milliseconds(0);
            
            repo.JPerf202NetworkPerformanceMeasur.Maximize.Click("12;12");
            Delay.Milliseconds(200);
            
            repo.JPerf202NetworkPerformanceMeasur.Toolbar.Server.Click("8;15");
            Delay.Milliseconds(200);
            
            repo.JPerf202NetworkPerformanceMeasur.Toolbar.SpinnerFormattedTextField.MoveTo("59;7");
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            repo.JPerf202NetworkPerformanceMeasur.Toolbar.SpinnerFormattedTextField.MoveTo("67;-1");
            Delay.Milliseconds(200);
            
            repo.JPerf202NetworkPerformanceMeasur.Toolbar.ListenPort.MoveTo("119;13");
            Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            repo.JPerf202NetworkPerformanceMeasur.Toolbar.SpinnerFormattedTextField.PressKeys(Server_Listen_Port);
            Delay.Milliseconds(0);
            
            //repo.JPerf202NetworkPerformanceMeasur.Toolbar.RunIPerf.Click("99;24");
            //Delay.Milliseconds(200);
            
            Validate_Output();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'JPerf202NetworkPerformanceMeasur.Toolbar.StopIPerf' at 74;21.", repo.JPerf202NetworkPerformanceMeasur.Toolbar.StopIPerfInfo, new RecordItemIndex(9));
            //repo.JPerf202NetworkPerformanceMeasur.Toolbar.StopIPerf.Click("74;21");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(10));
            //Delay.Duration(5000, false);
            
            //repo.JPerf202NetworkPerformanceMeasur.JPerf.Click("21;7");
            //Delay.Milliseconds(200);
            
            //repo.JPerf202NetworkPerformanceMeasur.Quit.Click("53;15");
            //Delay.Milliseconds(200);
            
        }

#region Image Feature Data
        CompressedImage Output_Screenshot1
        { get { return repo.JPerf202NetworkPerformanceMeasur.OutputInfo.GetScreenshot1(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions Output_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
