///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verify_Device_Connection_Status_Info recording.
    /// </summary>
    [TestModule("a9ac3b50-0c5a-4ccb-b143-4d7ad46674af", ModuleType.Recording, 1)]
    public partial class Verify_Device_Connection_Status_Info : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Verify_Device_Connection_Status_Info instance = new Verify_Device_Connection_Status_Info();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verify_Device_Connection_Status_Info()
        {
            Standard_Spec = "";
            Hardware_version = "";
            Software_version = "";
            Cable_modem_serial_number = "";
            Network_access = "";
            Cable_MAC_address = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verify_Device_Connection_Status_Info Instance
        {
            get { return instance; }
        }

#region Variables

        string _Standard_Spec;

        /// <summary>
        /// Gets or sets the value of variable Standard_Spec.
        /// </summary>
        [TestVariable("47af5920-e700-4162-88e5-50bce22ef164")]
        public string Standard_Spec
        {
            get { return _Standard_Spec; }
            set { _Standard_Spec = value; }
        }

        string _Hardware_version;

        /// <summary>
        /// Gets or sets the value of variable Hardware_version.
        /// </summary>
        [TestVariable("3a590205-6320-43e0-bbe4-72f9814b9ec7")]
        public string Hardware_version
        {
            get { return _Hardware_version; }
            set { _Hardware_version = value; }
        }

        string _Software_version;

        /// <summary>
        /// Gets or sets the value of variable Software_version.
        /// </summary>
        [TestVariable("446c7790-6ffd-4c9b-86a0-71d11abbad0f")]
        public string Software_version
        {
            get { return _Software_version; }
            set { _Software_version = value; }
        }

        string _Cable_modem_serial_number;

        /// <summary>
        /// Gets or sets the value of variable Cable_modem_serial_number.
        /// </summary>
        [TestVariable("4c0563a4-569d-454a-acba-47a48cfa11e6")]
        public string Cable_modem_serial_number
        {
            get { return _Cable_modem_serial_number; }
            set { _Cable_modem_serial_number = value; }
        }

        string _Network_access;

        /// <summary>
        /// Gets or sets the value of variable Network_access.
        /// </summary>
        [TestVariable("973793ae-65f7-42bc-9362-300bf8d6324b")]
        public string Network_access
        {
            get { return _Network_access; }
            set { _Network_access = value; }
        }

        string _Cable_MAC_address;

        /// <summary>
        /// Gets or sets the value of variable Cable_MAC_address.
        /// </summary>
        [TestVariable("23b1215e-8910-42c9-8196-81db779c0c90")]
        public string Cable_MAC_address
        {
            get { return _Cable_MAC_address; }
            set { _Cable_MAC_address = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Verify_And_Validate_Device_Connection_Status_Info(Standard_Spec, Hardware_version, Software_version, Cable_modem_serial_number, Network_access, Cable_MAC_address);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WebDocument19216801.SomeDivTag'.", repo.WebDocument19216801.SomeDivTagInfo, new RecordItemIndex(1));
            Validate.Exists(repo.WebDocument19216801.SomeDivTagInfo);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='button_containers') on item 'WebDocumentIE.ButtonContainers'.", repo.WebDocumentIE.ButtonContainersInfo, new RecordItemIndex(2));
            //Validate.Attribute(repo.WebDocumentIE.ButtonContainersInfo, "Class", "button_containers");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=277,Height=265}) on item 'WebDocumentIE.ButtonContainers'.", repo.WebDocumentIE.ButtonContainersInfo, new RecordItemIndex(3));
            //Validate.ContainsImage(repo.WebDocumentIE.ButtonContainersInfo, ButtonContainers_Screenshot1, ButtonContainers_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='section_header') on item 'WebDocument19216801.DivButtons'.", repo.WebDocument19216801.DivButtonsInfo, new RecordItemIndex(4));
            //Validate.Attribute(repo.WebDocument19216801.DivButtonsInfo, "Class", "section_header");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='Wiztext') on item 'WebDocument19216801.DivButtons'.", repo.WebDocument19216801.DivButtonsInfo, new RecordItemIndex(5));
            //Validate.Attribute(repo.WebDocument19216801.DivButtonsInfo, "Id", "Wiztext");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Hub 3.0 status overview') on item 'WebDocument19216801.DivButtons'.", repo.WebDocument19216801.DivButtonsInfo, new RecordItemIndex(6));
            //Validate.Attribute(repo.WebDocument19216801.DivButtonsInfo, "InnerText", "Hub 3.0 status overview");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=875,Height=101}) on item 'WebDocument19216801.DivButtons'.", repo.WebDocument19216801.DivButtonsInfo, new RecordItemIndex(7));
            //Validate.ContainsImage(repo.WebDocument19216801.DivButtonsInfo, DivButtons_Screenshot2, DivButtons_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage ButtonContainers_Screenshot1
        { get { return repo.WebDocumentIE.ButtonContainersInfo.GetScreenshot1(new Rectangle(0, 0, 277, 265)); } }

        Imaging.FindOptions ButtonContainers_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage DivButtons_Screenshot2
        { get { return repo.WebDocument19216801.DivButtonsInfo.GetScreenshot2(new Rectangle(0, 0, 875, 101)); } }

        Imaging.FindOptions DivButtons_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
