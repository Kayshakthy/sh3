///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Navigate_To_IP_and_port_filtering recording.
    /// </summary>
    [TestModule("ccdc3857-e7bc-4e78-b576-b3c7523e3ea7", ModuleType.Recording, 1)]
    public partial class Navigate_To_IP_and_port_filtering : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Navigate_To_IP_and_port_filtering instance = new Navigate_To_IP_and_port_filtering();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Navigate_To_IP_and_port_filtering()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Navigate_To_IP_and_port_filtering Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 15s.", new RecordItemIndex(0));
            Delay.Duration(15000, false);
            
            repo.WebDocument19216801.AdvancedSettings.Click("71;9");
            Delay.Milliseconds(200);
            
            repo.WebDocument19216801.Security1.Click("30;9");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Scroll Vertical by -240 units.", new RecordItemIndex(3));
            //Mouse.ScrollWheel(-240);
            //Delay.Milliseconds(500);
            
            //repo.WebDocumentIE.IPAndPortFiltering.Click("41;7");
            //Delay.Milliseconds(200);
            
            //Validate.Attribute(repo.WebDocumentIE.IPAndPortFilteringInfo, "InnerText", "IP and Port filtering");
            //Delay.Milliseconds(100);
            
            //repo.WebDocumentIE.IPAndPortFiltering.Click("98;7");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(7));
            //Delay.Duration(10000, false);
            
            Validate.Attribute(repo.WebDocument19216801.IPAndPortFilteringInfo, "InnerText", "IP and port filtering");
            Delay.Milliseconds(100);
            
            Delay.Duration(10000, false);
            
            repo.WebDocument19216801.IPAndPortFiltering.Click("99;7");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument19216801.LabelIPFiltering'.", repo.WebDocument19216801.LabelIPFilteringInfo, new RecordItemIndex(11));
            //Validate.Attribute(repo.WebDocument19216801.LabelIPFilteringInfo, "Enabled", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='label_IPFiltering') on item 'WebDocument19216801.LabelIPFiltering'.", repo.WebDocument19216801.LabelIPFilteringInfo, new RecordItemIndex(12));
            //Validate.Attribute(repo.WebDocument19216801.LabelIPFilteringInfo, "Id", "label_IPFiltering");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='IP and Port filtering') on item 'WebDocument19216801.LabelIPFiltering'.", repo.WebDocument19216801.LabelIPFilteringInfo, new RecordItemIndex(13));
            //Validate.Attribute(repo.WebDocument19216801.LabelIPFilteringInfo, "InnerText", "IP and Port filtering");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=728,Height=66}) on item 'WebDocument19216801.LabelIPFiltering'.", repo.WebDocument19216801.LabelIPFilteringInfo, new RecordItemIndex(14));
            //Validate.ContainsImage(repo.WebDocument19216801.LabelIPFilteringInfo, LabelIPFiltering_Screenshot1, LabelIPFiltering_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.AdvancedSettings' at 92;13.", repo.WebDocument19216801.AdvancedSettingsInfo, new RecordItemIndex(15));
            //repo.WebDocument19216801.AdvancedSettings.Click("92;13");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Security1' at 51;13.", repo.WebDocument19216801.Security1Info, new RecordItemIndex(16));
            //repo.WebDocument19216801.Security1.Click("51;13");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocumentIE.IPAndPortFiltering' at 98;7.", repo.WebDocumentIE.IPAndPortFilteringInfo, new RecordItemIndex(17));
            //repo.WebDocumentIE.IPAndPortFiltering.Click("98;7");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.IPAdd1' at 182;18.", repo.WebDocument19216801.IPAdd1Info, new RecordItemIndex(18));
            //repo.WebDocument19216801.IPAdd1.Click("182;18");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.SomeSpanTag4' at 213;22.", repo.WebDocument19216801.SomeSpanTag4Info, new RecordItemIndex(19));
            //repo.WebDocument19216801.SomeSpanTag4.Click("213;22");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.AdvancedSettings' at 99;12.", repo.WebDocument19216801.AdvancedSettingsInfo, new RecordItemIndex(20));
            //repo.WebDocument19216801.AdvancedSettings.Click("99;12");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=165,Height=17}) on item 'WebDocumentIE.IPAndPortFiltering'.", repo.WebDocumentIE.IPAndPortFilteringInfo, new RecordItemIndex(21));
            //Validate.ContainsImage(repo.WebDocumentIE.IPAndPortFilteringInfo, IPAndPortFiltering_Screenshot1, IPAndPortFiltering_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocumentIE.IPAndPortFiltering' at 100;8.", repo.WebDocumentIE.IPAndPortFilteringInfo, new RecordItemIndex(22));
            //repo.WebDocumentIE.IPAndPortFiltering.Click("100;8");
            //Delay.Milliseconds(200);
            
            Report.Screenshot(ReportLevel.Info, "User", "IP and Port Filtering", null, false, new RecordItemIndex(23));
            
        }

#region Image Feature Data
        CompressedImage LabelIPFiltering_Screenshot1
        { get { return repo.WebDocument19216801.LabelIPFilteringInfo.GetScreenshot1(new Rectangle(0, 0, 728, 66)); } }

        Imaging.FindOptions LabelIPFiltering_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage IPAndPortFiltering_Screenshot1
        { get { return repo.WebDocumentIE.IPAndPortFilteringInfo.GetScreenshot1(new Rectangle(0, 0, 165, 17)); } }

        Imaging.FindOptions IPAndPortFiltering_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
