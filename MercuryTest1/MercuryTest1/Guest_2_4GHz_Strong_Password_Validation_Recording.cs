///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Guest_2_4GHz_Strong_Password_Validation_Recording recording.
    /// </summary>
    [TestModule("ec396891-60ee-4e14-917b-bc8a9aaeafab", ModuleType.Recording, 1)]
    public partial class Guest_2_4GHz_Strong_Password_Validation_Recording : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Guest_2_4GHz_Strong_Password_Validation_Recording instance = new Guest_2_4GHz_Strong_Password_Validation_Recording();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Guest_2_4GHz_Strong_Password_Validation_Recording()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Guest_2_4GHz_Strong_Password_Validation_Recording Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}'.", new RecordItemIndex(0));
            Keyboard.Press("{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Passphrase' at 12;10.", repo.WebDocument19216801.PassphraseInfo, new RecordItemIndex(1));
            repo.WebDocument19216801.Passphrase.Click("12;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}' with focus on 'WebDocument19216801.Passphrase'.", repo.WebDocument19216801.PassphraseInfo, new RecordItemIndex(2));
            repo.WebDocument19216801.Passphrase.PressKeys("{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocument19216801.Passphrase'.", repo.WebDocument19216801.PassphraseInfo, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.WebDocument19216801.Passphrase);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Amm1notested' with focus on 'WebDocument19216801.Passphrase'.", repo.WebDocument19216801.PassphraseInfo, new RecordItemIndex(5));
            repo.WebDocument19216801.Passphrase.PressKeys("Amm1notested");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='pass_text strong') on item 'WebDocument19216801.PasstextWifi'.", repo.WebDocument19216801.PasstextWifiInfo, new RecordItemIndex(6));
            Validate.Attribute(repo.WebDocument19216801.PasstextWifiInfo, "Class", "pass_text strong");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='passtext_wifi') on item 'WebDocument19216801.PasstextWifi'.", repo.WebDocument19216801.PasstextWifiInfo, new RecordItemIndex(7));
            Validate.Attribute(repo.WebDocument19216801.PasstextWifiInfo, "Id", "passtext_wifi");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Strong') on item 'WebDocument19216801.PasstextWifi'.", repo.WebDocument19216801.PasstextWifiInfo, new RecordItemIndex(8));
            Validate.Attribute(repo.WebDocument19216801.PasstextWifiInfo, "InnerText", "Strong");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot11' with region {X=38,Y=0,Width=52,Height=21}) on item 'WebDocument19216801.PasstextWifi'.", repo.WebDocument19216801.PasstextWifiInfo, new RecordItemIndex(9));
            Validate.ContainsImage(repo.WebDocument19216801.PasstextWifiInfo, PasstextWifi_Screenshot11, PasstextWifi_Screenshot11_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument19216801.Http19216801SkinsLgiCssImages1'.", repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info, new RecordItemIndex(10));
            Validate.Attribute(repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='skipSVG check-icon') on item 'WebDocument19216801.Http19216801SkinsLgiCssImages1'.", repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info, new RecordItemIndex(11));
            Validate.Attribute(repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info, "Class", "skipSVG check-icon");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Src='http://192.168.0.1/skins/lgi/css/images/icon-check.svg') on item 'WebDocument19216801.Http19216801SkinsLgiCssImages1'.", repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info, new RecordItemIndex(12));
            Validate.Attribute(repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info, "Src", "http://192.168.0.1/skins/lgi/css/images/icon-check.svg");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=17,Height=19}) on item 'WebDocument19216801.Http19216801SkinsLgiCssImages1'.", repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info, new RecordItemIndex(13));
            Validate.ContainsImage(repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info, Http19216801SkinsLgiCssImages1_Screenshot1, Http19216801SkinsLgiCssImages1_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'WebDocument19216801.WebDocument19216801' at 1359;269.", repo.WebDocument19216801.WebDocument19216801Info, new RecordItemIndex(14));
            repo.WebDocument19216801.WebDocument19216801.MoveTo("1359;269");
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}' with focus on 'WebDocument19216801.Passphrase'.", repo.WebDocument19216801.PassphraseInfo, new RecordItemIndex(15));
            repo.WebDocument19216801.Passphrase.PressKeys("{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'WebDocument19216801.WebDocument19216801' at 1358;408.", repo.WebDocument19216801.WebDocument19216801Info, new RecordItemIndex(16));
            repo.WebDocument19216801.WebDocument19216801.MoveTo("1358;408");
            Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}'.", new RecordItemIndex(17));
            Keyboard.Press("{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument19216801.Button7'.", repo.WebDocument19216801.Button7Info, new RecordItemIndex(18));
            Validate.Attribute(repo.WebDocument19216801.Button7Info, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='submitBtn') on item 'WebDocument19216801.Button7'.", repo.WebDocument19216801.Button7Info, new RecordItemIndex(19));
            Validate.Attribute(repo.WebDocument19216801.Button7Info, "Class", "submitBtn");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Apply changes') on item 'WebDocument19216801.Button7'.", repo.WebDocument19216801.Button7Info, new RecordItemIndex(20));
            Validate.Attribute(repo.WebDocument19216801.Button7Info, "TagValue", "Apply changes");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Apply changes') on item 'WebDocument19216801.Button7'.", repo.WebDocument19216801.Button7Info, new RecordItemIndex(21));
            Validate.Attribute(repo.WebDocument19216801.Button7Info, "Value", "Apply changes");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=166,Height=43}) on item 'WebDocument19216801.Button7'.", repo.WebDocument19216801.Button7Info, new RecordItemIndex(22));
            Validate.ContainsImage(repo.WebDocument19216801.Button7Info, Button7_Screenshot2, Button7_Screenshot2_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Button7' at 99;20.", repo.WebDocument19216801.Button7Info, new RecordItemIndex(23));
            repo.WebDocument19216801.Button7.Click("99;20");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}'.", new RecordItemIndex(24));
            Keyboard.Press("{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.LogOut' at 30;3.", repo.WebDocument19216801.LogOutInfo, new RecordItemIndex(25));
            repo.WebDocument19216801.LogOut.Click("30;3");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey up}'.", new RecordItemIndex(26));
            Keyboard.Press("{LControlKey up}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        CompressedImage PasstextWifi_Screenshot11
        { get { return repo.WebDocument19216801.PasstextWifiInfo.GetScreenshot11(new Rectangle(38, 0, 52, 21)); } }

        Imaging.FindOptions PasstextWifi_Screenshot11_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Http19216801SkinsLgiCssImages1_Screenshot1
        { get { return repo.WebDocument19216801.Http19216801SkinsLgiCssImages1Info.GetScreenshot1(new Rectangle(0, 0, 17, 19)); } }

        Imaging.FindOptions Http19216801SkinsLgiCssImages1_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Button7_Screenshot2
        { get { return repo.WebDocument19216801.Button7Info.GetScreenshot2(new Rectangle(0, 0, 166, 43)); } }

        Imaging.FindOptions Button7_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
