///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
    public partial class Choose_Security_Mode_5GHz_Primary
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_SecurityMode_5GHz_Primary(string argument1)
        {
        	//Validate_SecurityMode_5GHz_Primary
        	if(argument1==""){
	        	argument1 = "WPA-PSK/WPA2-PSK";
	        }
	        Delay.Seconds(15);
	        WebDocument webDocument = "/dom[@domain='192.168.0.1']";
       		//Ranorex.SelectTag securityTag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//div[#'tr_SecurityModeGrp']/select[#'SecurityModeGrp']");
	        Ranorex.SelectTag securityTag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//div[#'tr_SecurityModeGrp50']/select[#'SecurityModeGrp50']");
//	         Ranorex.SelectTag securityTag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//div[#'tr_SecurityMode50']/select[#'SecurityMode50']");
//	        Ranorex.SelectTag securityTag = webDocument.FindSingle("dom[@domain='192.168.0.1']//select[#'SecurityMode50']");	
	        
	        Report.Info(securityTag.GetInnerHtml().ToString());
	        
				
			foreach(Ranorex.OptionTag optTag in securityTag.Find(".//option"))
			{	//TO SELECT THE SecurityMode
	     		//Console.WriteLine(optTag.InnerText);
	     		Report.Info(optTag.InnerText);
	     		//get the currently selected item name and check if it is Disable
	     		
	     		/*
	     		Report.Info(optTag.Element.GetAttributeValueText("selected"));
	     		if(optTag.Element.GetAttributeValueText("selected").Equals("Disable")){
	     			Report.Info("security mode cannot be Disable ");
	     		}
	     		*/
	     		if(optTag.Element.GetAttributeValueText("selected").Equals("Disable")){
	     			// security mode cannot be Disable, so need to change the mode
	     			OptionTag optionTag = argument1;
	     			optionTag.Selected = true;
	     		}else if(optTag.InnerText == argument1){
	     			Report.Info("argument2 matching:: "+argument1 );
	     			   // OptionTag option = "//rxpath/to/option";  
	    				//option.Selected = true;  
	    				optTag.Selected = true;
	    				Report.Success("Security Mode changed successfully !");
//	    				Report.Screenshot("Security Mode",securityTag.Element,true);
	    				Report.Screenshot();
	    				break;
	     		}
			}	// end of for-loop
			Report.Screenshot();
        }

    }
}