///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verify_MTU_Size_Config recording.
    /// </summary>
    [TestModule("bda1b28e-2cf7-46a9-8ec1-36aed2656fb7", ModuleType.Recording, 1)]
    public partial class Verify_MTU_Size_Config : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Verify_MTU_Size_Config instance = new Verify_MTU_Size_Config();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verify_MTU_Size_Config()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verify_MTU_Size_Config Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '-f'.", new RecordItemIndex(0));
            Keyboard.Press("-f");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Application", "Run application '%windir%\\system32\\cmd.exe' with arguments '' in normal mode.", new RecordItemIndex(1));
            Host.Local.RunApplication("%windir%\\system32\\cmd.exe", "", "", false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CWindowsSystem32CmdExe' at 633;77.", repo.CWindowsSystem32CmdExe.SelfInfo, new RecordItemIndex(2));
            repo.CWindowsSystem32CmdExe.Self.Click("633;77");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'ping{Space}'.", new RecordItemIndex(3));
            Keyboard.Press("ping{Space}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'www.bbc.co.uk'.", new RecordItemIndex(4));
            Keyboard.Press("www.bbc.co.uk");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Space}'.", new RecordItemIndex(5));
            Keyboard.Press("{Space}");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Space}-l'.", new RecordItemIndex(6));
            //Keyboard.Press("{Space}-l");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}{Back}{Back}'.", new RecordItemIndex(7));
            //Keyboard.Press("{Back}{Back}{Back}{Back}");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'l{Space}17'.", new RecordItemIndex(8));
            //Keyboard.Press("l{Space}17");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}'.", new RecordItemIndex(9));
            //Keyboard.Press("{Back}");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '-l'.", new RecordItemIndex(10));
            Keyboard.Press("-l");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Space}'.", new RecordItemIndex(11));
            Keyboard.Press("{Space}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1472{Space}'.", new RecordItemIndex(12));
            Keyboard.Press("1472{Space}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '-f'.", new RecordItemIndex(13));
            Keyboard.Press("-f");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(14));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(15));
            Delay.Duration(10000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'exit'.", new RecordItemIndex(17));
            Keyboard.Press("exit");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(18));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
