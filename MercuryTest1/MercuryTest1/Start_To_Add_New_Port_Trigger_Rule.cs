///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Start_To_Add_New_Port_Trigger_Rule recording.
    /// </summary>
    [TestModule("f067cd07-51a6-42a9-8891-ad5005854d74", ModuleType.Recording, 1)]
    public partial class Start_To_Add_New_Port_Trigger_Rule : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Start_To_Add_New_Port_Trigger_Rule instance = new Start_To_Add_New_Port_Trigger_Rule();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Start_To_Add_New_Port_Trigger_Rule()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Start_To_Add_New_Port_Trigger_Rule Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // GUI bases on 9.1.88S
            //repo.WebDocument19216801.IPAdd.Click("66;17");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Add rule') on item 'WebDocument19216801.IPAdd'.", repo.WebDocument19216801.IPAddInfo, new RecordItemIndex(1));
            //Validate.Attribute(repo.WebDocument19216801.IPAddInfo, "Value", "Add rule");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='IP_Add') on item 'WebDocument19216801.IPAdd1'.", repo.WebDocument19216801.IPAdd1Info, new RecordItemIndex(2));
            //Validate.Attribute(repo.WebDocument19216801.IPAdd1Info, "Id", "IP_Add");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Create a new rule') on item 'WebDocument19216801.IPAdd1'.", repo.WebDocument19216801.IPAdd1Info, new RecordItemIndex(3));
            //Validate.Attribute(repo.WebDocument19216801.IPAdd1Info, "TagValue", "Create a new rule");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Tabindex='2') on item 'WebDocument19216801.IPAdd1'.", repo.WebDocument19216801.IPAdd1Info, new RecordItemIndex(4));
            //Validate.Attribute(repo.WebDocument19216801.IPAdd1Info, "Tabindex", "2");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Create a new rule') on item 'WebDocument19216801.IPAdd1'.", repo.WebDocument19216801.IPAdd1Info, new RecordItemIndex(5));
            //Validate.Attribute(repo.WebDocument19216801.IPAdd1Info, "Value", "Create a new rule");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot4' with region {X=0,Y=0,Width=276,Height=63}) on item 'WebDocument19216801.IPAdd1'.", repo.WebDocument19216801.IPAdd1Info, new RecordItemIndex(6));
            //Validate.ContainsImage(repo.WebDocument19216801.IPAdd1Info, IPAdd1_Screenshot4, IPAdd1_Screenshot4_Options);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.IPAdd1' at 147;25.", repo.WebDocument19216801.IPAdd1Info, new RecordItemIndex(7));
            repo.WebDocument19216801.IPAdd1.Click("147;25");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
        CompressedImage IPAdd1_Screenshot4
        { get { return repo.WebDocument19216801.IPAdd1Info.GetScreenshot4(new Rectangle(0, 0, 276, 63)); } }

        Imaging.FindOptions IPAdd1_Screenshot4_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
