///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Create_New_IPv6_Port_Filtering_Rule recording.
    /// </summary>
    [TestModule("6fc24f74-24ca-4a16-b201-5956892f0897", ModuleType.Recording, 1)]
    public partial class Create_New_IPv6_Port_Filtering_Rule : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Create_New_IPv6_Port_Filtering_Rule instance = new Create_New_IPv6_Port_Filtering_Rule();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Create_New_IPv6_Port_Filtering_Rule()
        {
            Enable_IPv6_Port_rule = "";
            Enable_Traffic_policy = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Create_New_IPv6_Port_Filtering_Rule Instance
        {
            get { return instance; }
        }

#region Variables

        string _Enable_IPv6_Port_rule;

        /// <summary>
        /// Gets or sets the value of variable Enable_IPv6_Port_rule.
        /// </summary>
        [TestVariable("116754fd-a9c3-4b1e-8f81-07c8404466b3")]
        public string Enable_IPv6_Port_rule
        {
            get { return _Enable_IPv6_Port_rule; }
            set { _Enable_IPv6_Port_rule = value; }
        }

        string _Enable_Traffic_policy;

        /// <summary>
        /// Gets or sets the value of variable Enable_Traffic_policy.
        /// </summary>
        [TestVariable("46cc7f0a-127e-4e4a-a0f4-0737f6cc00db")]
        public string Enable_Traffic_policy
        {
            get { return _Enable_Traffic_policy; }
            set { _Enable_Traffic_policy = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='label_IPv6Filter') on item 'WebDocument19216801.LabelIPv6Filter'.", repo.WebDocument19216801.LabelIPv6FilterInfo, new RecordItemIndex(0));
            Validate.Attribute(repo.WebDocument19216801.LabelIPv6FilterInfo, "Id", "label_IPv6Filter");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='IPv6 port filtering') on item 'WebDocument19216801.LabelIPv6Filter'.", repo.WebDocument19216801.LabelIPv6FilterInfo, new RecordItemIndex(1));
            Validate.Attribute(repo.WebDocument19216801.LabelIPv6FilterInfo, "InnerText", "IPv6 port filtering");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=875,Height=83}) on item 'WebDocument19216801.LabelIPv6Filter'.", repo.WebDocument19216801.LabelIPv6FilterInfo, new RecordItemIndex(2));
            //Validate.ContainsImage(repo.WebDocument19216801.LabelIPv6FilterInfo, LabelIPv6Filter_Screenshot1, LabelIPv6Filter_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.IPv6Add' at 110;29.", repo.WebDocument19216801.IPv6AddInfo, new RecordItemIndex(3));
            repo.WebDocument19216801.IPv6Add.Click("110;29");
            Delay.Milliseconds(200);
            
            EnableDisable_IPv6_Port_Filtering_Rule(Enable_IPv6_Port_rule);
            Delay.Milliseconds(0);
            
            EnableDisable_Traffic_policy(Enable_Traffic_policy);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        CompressedImage LabelIPv6Filter_Screenshot1
        { get { return repo.WebDocument19216801.LabelIPv6FilterInfo.GetScreenshot1(new Rectangle(0, 0, 875, 83)); } }

        Imaging.FindOptions LabelIPv6Filter_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
