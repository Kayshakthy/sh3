///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Prepare_New_Port_Triggering_Rule recording.
    /// </summary>
    [TestModule("c15bcc7e-a62a-465f-be17-f61916579367", ModuleType.Recording, 1)]
    public partial class Prepare_New_Port_Triggering_Rule : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Prepare_New_Port_Triggering_Rule instance = new Prepare_New_Port_Triggering_Rule();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Prepare_New_Port_Triggering_Rule()
        {
            Trigger_range_start_port = "";
            Trigger_range_end_port = "";
            Target_range_start_port = "";
            Target_range_end_port = "";
            Protocol_Type = "";
            Is_Enabled = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Prepare_New_Port_Triggering_Rule Instance
        {
            get { return instance; }
        }

#region Variables

        string _Trigger_range_start_port;

        /// <summary>
        /// Gets or sets the value of variable Trigger_range_start_port.
        /// </summary>
        [TestVariable("4921cb70-d9ea-469e-b597-ff998605cdbb")]
        public string Trigger_range_start_port
        {
            get { return _Trigger_range_start_port; }
            set { _Trigger_range_start_port = value; }
        }

        string _Trigger_range_end_port;

        /// <summary>
        /// Gets or sets the value of variable Trigger_range_end_port.
        /// </summary>
        [TestVariable("f7418a73-42d1-4bf3-8450-67d9ff729f2f")]
        public string Trigger_range_end_port
        {
            get { return _Trigger_range_end_port; }
            set { _Trigger_range_end_port = value; }
        }

        string _Target_range_start_port;

        /// <summary>
        /// Gets or sets the value of variable Target_range_start_port.
        /// </summary>
        [TestVariable("6979fe66-7810-4a0c-93c9-8021adfa44d9")]
        public string Target_range_start_port
        {
            get { return _Target_range_start_port; }
            set { _Target_range_start_port = value; }
        }

        string _Target_range_end_port;

        /// <summary>
        /// Gets or sets the value of variable Target_range_end_port.
        /// </summary>
        [TestVariable("654fa676-914c-48fb-a1e8-5f661fba73fd")]
        public string Target_range_end_port
        {
            get { return _Target_range_end_port; }
            set { _Target_range_end_port = value; }
        }

        string _Protocol_Type;

        /// <summary>
        /// Gets or sets the value of variable Protocol_Type.
        /// </summary>
        [TestVariable("503f0452-472b-4bd8-a8e0-4adbbad52cad")]
        public string Protocol_Type
        {
            get { return _Protocol_Type; }
            set { _Protocol_Type = value; }
        }

        string _Is_Enabled;

        /// <summary>
        /// Gets or sets the value of variable Is_Enabled.
        /// </summary>
        [TestVariable("1c154a2e-542a-4b92-8804-c4f090a52e29")]
        public string Is_Enabled
        {
            get { return _Is_Enabled; }
            set { _Is_Enabled = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.TriggerStartPort.Click("25;9");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.TriggerStartPort.PressKeys(Trigger_range_start_port);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.TriggerEndPort.Click("20;10");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.TriggerEndPort.PressKeys(Trigger_range_end_port);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.TargetStartPort.Click("14;10");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.TargetStartPort.PressKeys(Target_range_start_port);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.TargetEndPort.Click("19;11");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.TargetEndPort.PressKeys(Target_range_end_port);
            Delay.Milliseconds(0);
            
            New_Port_Triggering_Rule(Protocol_Type, Is_Enabled);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
