///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
    public partial class Choose_Network_Pass
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_PasstextWifi()
        {
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeNotContains (InnerText!>'Invalid') on item 'WebDocument19216801.PasstextWifi'.", repo.WebDocument19216801.PasstextWifiInfo);
            //Validate.Attribute(repo.WebDocument19216801.PasstextWifiInfo, "InnerText", new Regex("^((?!("+Regex.Escape("Invalid")+"))(.|\n))*$"));
            string passStrength = repo.WebDocument19216801.PasstextWifi.InnerText;
            //Report.Info(passStrength);
            if(passStrength == "invalid" ){
            	/*
            	//Report.Log(ReportLevel.Failure,"Guest Network"," INVALD Password !!!");
            	Apply_Guest_Network_Changes apply_guest = new Apply_Guest_Network_Changes();
            	apply_guest.Capture_Screen_For_Result();
            	*/
            	//Report.Info("Guest Network"," INVALD Password !!!");
            	//Report.Log(ReportLevel.Failure,"Guest Network"," INVALD Password !!!",);
            	Report.Failure("Guest Network"," INVALD Password !!!");
				//Display_Result();
            }else if(passStrength == "Not Sufficient"){
            	/*
            	//Report.Log(ReportLevel.Failure,"Guest Network"," Not Sufficient Password !!!");
            	Apply_Guest_Network_Changes apply_guest = new Apply_Guest_Network_Changes();
            	apply_guest.Capture_Screen_For_Result();
     			*/    
     			//Report.Info("Guest Network"," Not Sufficient Password !!!");
     			Report.Failure("Guest Network"," Not Sufficient Password !!!");
				//Display_Result();
            }
            
        }
        public void Display_Result(){
        	    WebDocument webDocument = "/dom[@domain='192.168.0.1']";
        		Ranorex.TableTag WirelessFrequencyTag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//div[#'strengthBar_Passphrase']/table");
        		//Report.Info(WirelessFrequencyTag.GetInnerHtml().ToString());
        		Report.Screenshot("WirelessFrequency",WirelessFrequencyTag.Element,true);
        		TestSuite.Current.GetTestCase("Confirm_Enable_Guest_Network").Checked=false;
        }
        

    }
}