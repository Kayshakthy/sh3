///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Form_TraceRoute recording.
    /// </summary>
    [TestModule("b74dab5a-525b-41c1-ab0e-a7eaa7b36b92", ModuleType.Recording, 1)]
    public partial class Form_TraceRoute : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Form_TraceRoute instance = new Form_TraceRoute();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Form_TraceRoute()
        {
            Trace_route = "";
            Max_hops = "10";
            Base_port = "33434";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Form_TraceRoute Instance
        {
            get { return instance; }
        }

#region Variables

        string _Trace_route;

        /// <summary>
        /// Gets or sets the value of variable Trace_route.
        /// </summary>
        [TestVariable("91d36cd7-ae81-4f8a-8053-542ea834dc18")]
        public string Trace_route
        {
            get { return _Trace_route; }
            set { _Trace_route = value; }
        }

        string _Max_hops;

        /// <summary>
        /// Gets or sets the value of variable Max_hops.
        /// </summary>
        [TestVariable("3f0af6ff-c305-4e35-9b75-7bcb879909f0")]
        public string Max_hops
        {
            get { return _Max_hops; }
            set { _Max_hops = value; }
        }

        string _Base_port;

        /// <summary>
        /// Gets or sets the value of variable Base_port.
        /// </summary>
        [TestVariable("5f438fef-85a3-469a-bcd0-76027824d785")]
        public string Base_port
        {
            get { return _Base_port; }
            set { _Base_port = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.Target.Click("23;17");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Target.PressKeys(Trace_route);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Maxhops.Click("23;17");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Maxhops.PressKeys(Max_hops);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Baseport.Click("23;17");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Baseport.PressKeys(Base_port);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
