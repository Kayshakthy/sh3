///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The MMLoginAndValidateRecording recording.
    /// </summary>
    [TestModule("05b30c6a-3466-4ab5-92a5-278f2dfea871", ModuleType.Recording, 1)]
    public partial class MMLoginAndValidateRecording : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static MMLoginAndValidateRecording instance = new MMLoginAndValidateRecording();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public MMLoginAndValidateRecording()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static MMLoginAndValidateRecording Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://192.168.100.1' with browser 'IE' in normal mode.", new RecordItemIndex(0));
            Host.Local.OpenBrowser("http://192.168.100.1", "IE", "", false, false, false, false, false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument1921681001.Password' at 114;13.", repo.WebDocument1921681001.PasswordInfo, new RecordItemIndex(1));
            repo.WebDocument1921681001.Password.Click("114;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey down}V{LShiftKey up}irgin123' with focus on 'WebDocument1921681001.Password'.", repo.WebDocument1921681001.PasswordInfo, new RecordItemIndex(2));
            repo.WebDocument1921681001.Password.PressKeys("{LShiftKey down}V{LShiftKey up}irgin123");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.Button'.", repo.WebDocument1921681001.ButtonInfo, new RecordItemIndex(3));
            Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.Button'.", repo.WebDocument1921681001.ButtonInfo, new RecordItemIndex(4));
            Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='submitBtn') on item 'WebDocument1921681001.Button'.", repo.WebDocument1921681001.ButtonInfo, new RecordItemIndex(5));
            Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Class", "submitBtn");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Login') on item 'WebDocument1921681001.Button'.", repo.WebDocument1921681001.ButtonInfo, new RecordItemIndex(6));
            Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "TagValue", "Login");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Login') on item 'WebDocument1921681001.Button'.", repo.WebDocument1921681001.ButtonInfo, new RecordItemIndex(7));
            Validate.Attribute(repo.WebDocument1921681001.ButtonInfo, "Value", "Login");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WebDocument1921681001.Button'.", repo.WebDocument1921681001.ButtonInfo, new RecordItemIndex(8));
            Validate.Exists(repo.WebDocument1921681001.ButtonInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KIRUSHAKTHYPC.KIRUSHAKTHYPC' at 660;496.", repo.KIRUSHAKTHYPC.KIRUSHAKTHYPCInfo, new RecordItemIndex(9));
            repo.KIRUSHAKTHYPC.KIRUSHAKTHYPC.Click("660;496");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.LogoContainer'.", repo.WebDocument1921681001.LogoContainerInfo, new RecordItemIndex(10));
            Validate.Attribute(repo.WebDocument1921681001.LogoContainerInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.LogoContainer'.", repo.WebDocument1921681001.LogoContainerInfo, new RecordItemIndex(11));
            Validate.Attribute(repo.WebDocument1921681001.LogoContainerInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='logo_container') on item 'WebDocument1921681001.LogoContainer'.", repo.WebDocument1921681001.LogoContainerInfo, new RecordItemIndex(12));
            Validate.Attribute(repo.WebDocument1921681001.LogoContainerInfo, "Class", "logo_container");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='logo_container') on item 'WebDocument1921681001.LogoContainer'.", repo.WebDocument1921681001.LogoContainerInfo, new RecordItemIndex(13));
            Validate.Attribute(repo.WebDocument1921681001.LogoContainerInfo, "Id", "logo_container");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=117,Height=83}) on item 'WebDocument1921681001.LogoContainer'.", repo.WebDocument1921681001.LogoContainerInfo, new RecordItemIndex(14));
            Validate.ContainsImage(repo.WebDocument1921681001.LogoContainerInfo, LogoContainer_Screenshot1, LogoContainer_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(15));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(16));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='section_header') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(17));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "Class", "section_header");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='Wiztext') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(18));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "Id", "Wiztext");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Modem status overview') on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(19));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.WiztextInfo, "InnerText", "Modem status overview");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=728,Height=84}) on item 'WebDocument1921681001.Mainpage.Wiztext'.", repo.WebDocument1921681001.Mainpage.WiztextInfo, new RecordItemIndex(20));
            Validate.ContainsImage(repo.WebDocument1921681001.Mainpage.WiztextInfo, Wiztext_Screenshot1, Wiztext_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.Mainpage.Wireless'.", repo.WebDocument1921681001.Mainpage.WirelessInfo, new RecordItemIndex(21));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.WirelessInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.Mainpage.Wireless'.", repo.WebDocument1921681001.Mainpage.WirelessInfo, new RecordItemIndex(22));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.WirelessInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Wireless') on item 'WebDocument1921681001.Mainpage.Wireless'.", repo.WebDocument1921681001.Mainpage.WirelessInfo, new RecordItemIndex(23));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.WirelessInfo, "InnerText", "Wireless");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=55,Height=16}) on item 'WebDocument1921681001.Mainpage.Wireless'.", repo.WebDocument1921681001.Mainpage.WirelessInfo, new RecordItemIndex(24));
            Validate.ContainsImage(repo.WebDocument1921681001.Mainpage.WirelessInfo, Wireless_Screenshot1, Wireless_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(25));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(26));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='section_title') on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(27));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, "Class", "section_title");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Your modem status') on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(28));
            Validate.Attribute(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, "InnerText", "Your modem status");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=360,Height=29}) on item 'WebDocument1921681001.Mainpage.YourModemStatus'.", repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, new RecordItemIndex(29));
            Validate.ContainsImage(repo.WebDocument1921681001.Mainpage.YourModemStatusInfo, YourModemStatus_Screenshot1, YourModemStatus_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.InternetStatus'.", repo.WebDocument1921681001.InternetStatusInfo, new RecordItemIndex(30));
            Validate.Attribute(repo.WebDocument1921681001.InternetStatusInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='internetStatus') on item 'WebDocument1921681001.InternetStatus'.", repo.WebDocument1921681001.InternetStatusInfo, new RecordItemIndex(31));
            Validate.Attribute(repo.WebDocument1921681001.InternetStatusInfo, "Id", "internetStatus");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='(Enabled Modem Mode)') on item 'WebDocument1921681001.InternetStatus'.", repo.WebDocument1921681001.InternetStatusInfo, new RecordItemIndex(32));
            Validate.Attribute(repo.WebDocument1921681001.InternetStatusInfo, "InnerText", "(Enabled Modem Mode)");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=157,Height=16}) on item 'WebDocument1921681001.InternetStatus'.", repo.WebDocument1921681001.InternetStatusInfo, new RecordItemIndex(33));
            Validate.ContainsImage(repo.WebDocument1921681001.InternetStatusInfo, InternetStatus_Screenshot1, InternetStatus_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'WebDocument1921681001.LogOut'.", repo.WebDocument1921681001.LogOutInfo, new RecordItemIndex(34));
            Validate.Attribute(repo.WebDocument1921681001.LogOutInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'WebDocument1921681001.LogOut'.", repo.WebDocument1921681001.LogOutInfo, new RecordItemIndex(35));
            Validate.Attribute(repo.WebDocument1921681001.LogOutInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Log out') on item 'WebDocument1921681001.LogOut'.", repo.WebDocument1921681001.LogOutInfo, new RecordItemIndex(36));
            Validate.Attribute(repo.WebDocument1921681001.LogOutInfo, "InnerText", "Log out");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=45,Height=16}) on item 'WebDocument1921681001.LogOut'.", repo.WebDocument1921681001.LogOutInfo, new RecordItemIndex(37));
            Validate.ContainsImage(repo.WebDocument1921681001.LogOutInfo, LogOut_Screenshot1, LogOut_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'WebDocument1921681001.LogOut' at 23;11.", repo.WebDocument1921681001.LogOutInfo, new RecordItemIndex(38));
            repo.WebDocument1921681001.LogOut.MoveTo("23;11");
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'WebDocument1921681001.LogOut' at 23;11.", repo.WebDocument1921681001.LogOutInfo, new RecordItemIndex(39));
            repo.WebDocument1921681001.LogOut.MoveTo("23;11");
            Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Http1921681001WindowsInternet.ClientCaption' at 1339;14.", repo.Http1921681001WindowsInternet.ClientCaptionInfo, new RecordItemIndex(40));
            repo.Http1921681001WindowsInternet.ClientCaption.Click("1339;14");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
        CompressedImage LogoContainer_Screenshot1
        { get { return repo.WebDocument1921681001.LogoContainerInfo.GetScreenshot1(new Rectangle(0, 0, 117, 83)); } }

        Imaging.FindOptions LogoContainer_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Wiztext_Screenshot1
        { get { return repo.WebDocument1921681001.Mainpage.WiztextInfo.GetScreenshot1(new Rectangle(0, 0, 728, 84)); } }

        Imaging.FindOptions Wiztext_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Wireless_Screenshot1
        { get { return repo.WebDocument1921681001.Mainpage.WirelessInfo.GetScreenshot1(new Rectangle(0, 0, 55, 16)); } }

        Imaging.FindOptions Wireless_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage YourModemStatus_Screenshot1
        { get { return repo.WebDocument1921681001.Mainpage.YourModemStatusInfo.GetScreenshot1(new Rectangle(0, 0, 360, 29)); } }

        Imaging.FindOptions YourModemStatus_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage InternetStatus_Screenshot1
        { get { return repo.WebDocument1921681001.InternetStatusInfo.GetScreenshot1(new Rectangle(0, 0, 157, 16)); } }

        Imaging.FindOptions InternetStatus_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage LogOut_Screenshot1
        { get { return repo.WebDocument1921681001.LogOutInfo.GetScreenshot1(new Rectangle(0, 0, 45, 16)); } }

        Imaging.FindOptions LogOut_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
