///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
    public partial class Validate_Router_SignIn_Screen
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_MainTitle()
        {
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='This page can’t be displayed') on item 'CertificateErrorNavigationBlocked.MainTitle'.", repo.CertificateErrorNavigationBlocked.MainTitleInfo);
//            Validate.Attribute(repo.CertificateErrorNavigationBlocked.MainTitleInfo, "InnerText", "This page can’t be displayed");
            bool rst = Validate.Attribute(repo.CertificateErrorNavigationBlocked.MainTitleInfo, "InnerText", "This page can’t be displayed","{0}",false);
            if(rst){
            	Report.Success("This page can’t be displayed");
            }else{
            	Report.Failure("Validation failed");
            }
        }

        public void Validate_Task11()
        {
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Make sure the web address is correct.') on item 'CertificateErrorNavigationBlocked.Task11'.", repo.CertificateErrorNavigationBlocked.Task11Info);
//            Validate.Attribute(repo.CertificateErrorNavigationBlocked.Task11Info, "InnerText", "Make sure the web address is correct.");
        	bool rst = Validate.Attribute(repo.CertificateErrorNavigationBlocked.Task11Info, "InnerText", "Make sure the web address is correct.","{0}",false);
        	if(rst){
        		Report.Success("Make sure the web address is correct.");
        	}else{
        		Report.Failure("Validation failed");
        	}
        }

    }
}