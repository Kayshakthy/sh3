///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
    public partial class Perform_Traceroute
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_Traceroute_Result()
        {

        	Delay.Seconds(20);
        	/*
        	int x = 0;
	        do 
	        {
	            //Console.WriteLine(x);
	            Report.Info(x.ToString());
	            x++;
	        } while (x < 50);
	        */
	       
	        /*
	        Boolean recd = repo.WebDocument19216801.TraceResult.InnerText.Contains("trace complete");
        	if(recd){
        		Report.Log(ReportLevel.Success,"Validation","Traceroute success");
        		//Report.Log(ReportLevel.Info,"Traceroute Target",Trace_route);
        		Report.Log(ReportLevel.Info,"Traceroute Result",repo.WebDocument19216801.TraceResult.InnerText);
        	}else{
        		Report.Log(ReportLevel.Failure,"Validation","Traceroute failure");
        		//Report.Log(ReportLevel.Info,"Traceroute Target",Trace_route);
        		Report.Log(ReportLevel.Info,"Traceroute Result",repo.WebDocument19216801.TraceResult.InnerText);
        	}
        	*/
        	Report.Info(repo.WebDocument19216801.TraceResult.InnerText.ToString());
        	if(repo.WebDocument19216801.TraceResult.InnerText.Contains("Invalid address")){
        		Report.Log(ReportLevel.Failure,"Validation","Traceroute failure");
        	}else{
        		Report.Log(ReportLevel.Success,"Validation","Traceroute success");
        	}
        	Report.Screenshot("Traceroute Result",repo.WebDocument19216801.TraceResult,true);
        }

    }
}