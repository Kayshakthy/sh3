///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Form_IPv4_Port_Filter_Range recording.
    /// </summary>
    [TestModule("46626a15-c78c-45fd-9efb-f8b5aec6c8e1", ModuleType.Recording, 1)]
    public partial class Form_IPv4_Port_Filter_Range : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Form_IPv4_Port_Filter_Range instance = new Form_IPv4_Port_Filter_Range();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Form_IPv4_Port_Filter_Range()
        {
            DestRangeAddrStart = "";
            DestRangeAddrEnd = "";
            SourcePortStart = "";
            SourcePortEnd = "80";
            DestPortStart = "";
            DestPortEnd = "";
            IPv4_Filter_Protocol = "";
            IPv4_SourceIPAddress = "";
            IPv4_DestIPAddress = "";
            IPv4_Protocol_Grp = "";
            IPv4_Src_IP_Grp = "";
            IPv4_Dest_IP_Grp = "";
            IPv4_Src_IP_Start = "";
            IPv4_Src_IP_End = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Form_IPv4_Port_Filter_Range Instance
        {
            get { return instance; }
        }

#region Variables

        string _DestRangeAddrStart;

        /// <summary>
        /// Gets or sets the value of variable DestRangeAddrStart.
        /// </summary>
        [TestVariable("1ffa96a6-1d60-43c7-bcd3-4b497d103707")]
        public string DestRangeAddrStart
        {
            get { return _DestRangeAddrStart; }
            set { _DestRangeAddrStart = value; }
        }

        string _DestRangeAddrEnd;

        /// <summary>
        /// Gets or sets the value of variable DestRangeAddrEnd.
        /// </summary>
        [TestVariable("50eb3061-65e6-4adc-9f8b-91d9305bf845")]
        public string DestRangeAddrEnd
        {
            get { return _DestRangeAddrEnd; }
            set { _DestRangeAddrEnd = value; }
        }

        string _SourcePortStart;

        /// <summary>
        /// Gets or sets the value of variable SourcePortStart.
        /// </summary>
        [TestVariable("57488d82-a8f8-4cfc-b846-ea6a5ac7dd54")]
        public string SourcePortStart
        {
            get { return _SourcePortStart; }
            set { _SourcePortStart = value; }
        }

        string _SourcePortEnd;

        /// <summary>
        /// Gets or sets the value of variable SourcePortEnd.
        /// </summary>
        [TestVariable("2a63e3fa-72f7-4110-a63c-3063e10f8198")]
        public string SourcePortEnd
        {
            get { return _SourcePortEnd; }
            set { _SourcePortEnd = value; }
        }

        string _DestPortStart;

        /// <summary>
        /// Gets or sets the value of variable DestPortStart.
        /// </summary>
        [TestVariable("0e442d3a-8415-4887-a139-6893facb75fc")]
        public string DestPortStart
        {
            get { return _DestPortStart; }
            set { _DestPortStart = value; }
        }

        string _DestPortEnd;

        /// <summary>
        /// Gets or sets the value of variable DestPortEnd.
        /// </summary>
        [TestVariable("3e4d9ea2-1d41-4053-a115-e52030b63921")]
        public string DestPortEnd
        {
            get { return _DestPortEnd; }
            set { _DestPortEnd = value; }
        }

        string _IPv4_Filter_Protocol;

        /// <summary>
        /// Gets or sets the value of variable IPv4_Filter_Protocol.
        /// </summary>
        [TestVariable("96830948-9f4b-423e-8693-bcf32421db90")]
        public string IPv4_Filter_Protocol
        {
            get { return _IPv4_Filter_Protocol; }
            set { _IPv4_Filter_Protocol = value; }
        }

        string _IPv4_SourceIPAddress;

        /// <summary>
        /// Gets or sets the value of variable IPv4_SourceIPAddress.
        /// </summary>
        [TestVariable("818c2b7f-751c-479d-9814-819547782956")]
        public string IPv4_SourceIPAddress
        {
            get { return _IPv4_SourceIPAddress; }
            set { _IPv4_SourceIPAddress = value; }
        }

        string _IPv4_DestIPAddress;

        /// <summary>
        /// Gets or sets the value of variable IPv4_DestIPAddress.
        /// </summary>
        [TestVariable("52cbc572-be3e-4e19-95fc-201d1b8574c1")]
        public string IPv4_DestIPAddress
        {
            get { return _IPv4_DestIPAddress; }
            set { _IPv4_DestIPAddress = value; }
        }

        string _IPv4_Protocol_Grp;

        /// <summary>
        /// Gets or sets the value of variable IPv4_Protocol_Grp.
        /// </summary>
        [TestVariable("441a6c7b-2afa-4938-8442-442a582ce1b6")]
        public string IPv4_Protocol_Grp
        {
            get { return _IPv4_Protocol_Grp; }
            set { _IPv4_Protocol_Grp = value; }
        }

        string _IPv4_Src_IP_Grp;

        /// <summary>
        /// Gets or sets the value of variable IPv4_Src_IP_Grp.
        /// </summary>
        [TestVariable("82ba167a-4cfd-4070-b457-bc0734208ba6")]
        public string IPv4_Src_IP_Grp
        {
            get { return _IPv4_Src_IP_Grp; }
            set { _IPv4_Src_IP_Grp = value; }
        }

        string _IPv4_Dest_IP_Grp;

        /// <summary>
        /// Gets or sets the value of variable IPv4_Dest_IP_Grp.
        /// </summary>
        [TestVariable("a007e0ee-90b0-4438-9472-d224868a0d30")]
        public string IPv4_Dest_IP_Grp
        {
            get { return _IPv4_Dest_IP_Grp; }
            set { _IPv4_Dest_IP_Grp = value; }
        }

        string _IPv4_Src_IP_Start;

        /// <summary>
        /// Gets or sets the value of variable IPv4_Src_IP_Start.
        /// </summary>
        [TestVariable("4dfec32a-467a-4ea5-b54f-ca4687b27dbe")]
        public string IPv4_Src_IP_Start
        {
            get { return _IPv4_Src_IP_Start; }
            set { _IPv4_Src_IP_Start = value; }
        }

        string _IPv4_Src_IP_End;

        /// <summary>
        /// Gets or sets the value of variable IPv4_Src_IP_End.
        /// </summary>
        [TestVariable("129b660b-5d00-4045-9de0-8e82d5caa638")]
        public string IPv4_Src_IP_End
        {
            get { return _IPv4_Src_IP_End; }
            set { _IPv4_Src_IP_End = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.SomeSpanTag4' at 172;22.", repo.WebDocument19216801.SomeSpanTag4Info, new RecordItemIndex(0));
            //repo.WebDocument19216801.SomeSpanTag4.Click("172;22");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.CiteTagAll' at 150;10.", repo.WebDocument19216801.CiteTagAllInfo, new RecordItemIndex(1));
            //repo.WebDocument19216801.CiteTagAll.Click("150;10");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.FmSelIPv4SrcIPGrp.SomeSpanTag' at 174;15.", repo.WebDocument19216801.FmSelIPv4SrcIPGrp.SomeSpanTagInfo, new RecordItemIndex(2));
            //repo.WebDocument19216801.FmSelIPv4SrcIPGrp.SomeSpanTag.Click("174;15");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.FmSelIPv4SrcIPGrp.CiteTagAll1' at 118;10.", repo.WebDocument19216801.FmSelIPv4SrcIPGrp.CiteTagAll1Info, new RecordItemIndex(3));
            //repo.WebDocument19216801.FmSelIPv4SrcIPGrp.CiteTagAll1.Click("118;10");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.SomeSpanTag5' at 174;14.", repo.WebDocument19216801.SomeSpanTag5Info, new RecordItemIndex(4));
            //repo.WebDocument19216801.SomeSpanTag5.Click("174;14");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Range' at 39;7.", repo.WebDocument19216801.RangeInfo, new RecordItemIndex(5));
            //repo.WebDocument19216801.Range.Click("39;7");
            //Delay.Milliseconds(200);
            
            try {
                //Update_Combo_Boxes_For_IPv4Filtering_Rule(IPv4_Filter_Protocol, IPv4_SourceIPAddress, IPv4_DestIPAddress);
                //Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            Update_Combo_Boxes_For_IPv4_Filter_Range(IPv4_Protocol_Grp, IPv4_Src_IP_Grp, IPv4_Dest_IP_Grp);
            Delay.Milliseconds(0);
            
            Validate_IPv4SrcRangeAddressStart3();
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4SrcRangeAddressStart3.Click();
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4SrcRangeAddressStart3.PressKeys(IPv4_Src_IP_Start);
            Delay.Milliseconds(0);
            
            Validate_IPv4SrcRangeAddressEnd3();
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4SrcRangeAddressEnd3.Click();
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4SrcRangeAddressEnd3.PressKeys(IPv4_Src_IP_End);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'WebDocument19216801.IPv4DestRangeAddressStart' at 64;10.", repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, new RecordItemIndex(18));
            //repo.WebDocument19216801.IPv4DestRangeAddressStart.MoveTo("64;10");
            //Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'WebDocument19216801.IPv4DestRangeAddressStart' at 72;2.", repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, new RecordItemIndex(19));
            //repo.WebDocument19216801.IPv4DestRangeAddressStart.MoveTo("72;2");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'WebDocument19216801.FmInpIPv4DestRangeAddressStart' at 1;15.", repo.WebDocument19216801.FmInpIPv4DestRangeAddressStartInfo, new RecordItemIndex(20));
            //repo.WebDocument19216801.FmInpIPv4DestRangeAddressStart.MoveTo("1;15");
            //Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            //Delay.Milliseconds(200);
            
            Validate_IPv4DestRangeAddressStart();
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4DestRangeAddressStart.Click();
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4DestRangeAddressStart.PressKeys(DestRangeAddrStart);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (HasFocus='True') on item 'WebDocument19216801.IPv4DestRangeAddressStart'.", repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, new RecordItemIndex(26));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, "HasFocus", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='IPv4DestRangeAddressStart') on item 'WebDocument19216801.IPv4DestRangeAddressStart'.", repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, new RecordItemIndex(27));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, "Id", "IPv4DestRangeAddressStart");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='192.168.0.1') on item 'WebDocument19216801.IPv4DestRangeAddressStart'.", repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, new RecordItemIndex(28));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, "TagValue", "192.168.0.1");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='192.168.0.1') on item 'WebDocument19216801.IPv4DestRangeAddressStart'.", repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, new RecordItemIndex(29));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestRangeAddressStartInfo, "Value", "192.168.0.1");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'WebDocument19216801.IPv4DestRangeAddressEnd' at 49;7.", repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, new RecordItemIndex(30));
            //repo.WebDocument19216801.IPv4DestRangeAddressEnd.MoveTo("49;7");
            //Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'WebDocument19216801.IPv4DestRangeAddressEnd' at 6;7.", repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, new RecordItemIndex(31));
            //repo.WebDocument19216801.IPv4DestRangeAddressEnd.MoveTo("6;7");
            //Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            //Delay.Milliseconds(200);
            
            Validate_IPv4DestRangeAddressEnd();
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4DestRangeAddressEnd.Click();
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4DestRangeAddressEnd.PressKeys(DestRangeAddrEnd);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='IPv4DestRangeAddressEnd') on item 'WebDocument19216801.IPv4DestRangeAddressEnd'.", repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, new RecordItemIndex(37));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, "Id", "IPv4DestRangeAddressEnd");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='192.168.0.13') on item 'WebDocument19216801.IPv4DestRangeAddressEnd'.", repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, new RecordItemIndex(38));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, "TagValue", "192.168.0.13");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='192.168.0.13') on item 'WebDocument19216801.IPv4DestRangeAddressEnd'.", repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, new RecordItemIndex(39));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, "Value", "192.168.0.13");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=122,Height=20}) on item 'WebDocument19216801.IPv4DestRangeAddressEnd'.", repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, new RecordItemIndex(40));
            //Validate.ContainsImage(repo.WebDocument19216801.IPv4DestRangeAddressEndInfo, IPv4DestRangeAddressEnd_Screenshot2, IPv4DestRangeAddressEnd_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            repo.WebDocument19216801.IPv4SrcPortStart.Click("48;10");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4SrcPortStart.PressKeys(SourcePortStart);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (HasFocus='True') on item 'WebDocument19216801.IPv4SrcPortStart'.", repo.WebDocument19216801.IPv4SrcPortStartInfo, new RecordItemIndex(45));
            //Validate.Attribute(repo.WebDocument19216801.IPv4SrcPortStartInfo, "HasFocus", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='IPv4SrcPortStart') on item 'WebDocument19216801.IPv4SrcPortStart'.", repo.WebDocument19216801.IPv4SrcPortStartInfo, new RecordItemIndex(46));
            //Validate.Attribute(repo.WebDocument19216801.IPv4SrcPortStartInfo, "Id", "IPv4SrcPortStart");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='80') on item 'WebDocument19216801.IPv4SrcPortStart'.", repo.WebDocument19216801.IPv4SrcPortStartInfo, new RecordItemIndex(47));
            //Validate.Attribute(repo.WebDocument19216801.IPv4SrcPortStartInfo, "TagValue", "80");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='80') on item 'WebDocument19216801.IPv4SrcPortStart'.", repo.WebDocument19216801.IPv4SrcPortStartInfo, new RecordItemIndex(48));
            //Validate.Attribute(repo.WebDocument19216801.IPv4SrcPortStartInfo, "Value", "80");
            //Delay.Milliseconds(100);
            
            repo.WebDocument19216801.IPv4SrcPortEnd.Click("36;14");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4SrcPortEnd.PressKeys(SourcePortEnd);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (HasFocus='True') on item 'WebDocument19216801.IPv4SrcPortEnd'.", repo.WebDocument19216801.IPv4SrcPortEndInfo, new RecordItemIndex(53));
            //Validate.Attribute(repo.WebDocument19216801.IPv4SrcPortEndInfo, "HasFocus", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='IPv4SrcPortEnd') on item 'WebDocument19216801.IPv4SrcPortEnd'.", repo.WebDocument19216801.IPv4SrcPortEndInfo, new RecordItemIndex(54));
            //Validate.Attribute(repo.WebDocument19216801.IPv4SrcPortEndInfo, "Id", "IPv4SrcPortEnd");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='80') on item 'WebDocument19216801.IPv4SrcPortEnd'.", repo.WebDocument19216801.IPv4SrcPortEndInfo, new RecordItemIndex(55));
            //Validate.Attribute(repo.WebDocument19216801.IPv4SrcPortEndInfo, "TagValue", "80");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='80') on item 'WebDocument19216801.IPv4SrcPortEnd'.", repo.WebDocument19216801.IPv4SrcPortEndInfo, new RecordItemIndex(56));
            //Validate.Attribute(repo.WebDocument19216801.IPv4SrcPortEndInfo, "Value", "80");
            //Delay.Milliseconds(100);
            
            repo.WebDocument19216801.IPv4DestPortStart.Click("45;12");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '80' with focus on 'WebDocument19216801.IPv4SrcPortEnd'.", repo.WebDocument19216801.IPv4SrcPortEndInfo, new RecordItemIndex(60));
            //repo.WebDocument19216801.IPv4SrcPortEnd.PressKeys("80");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.IPv4DestPortStart' at 40;13.", repo.WebDocument19216801.IPv4DestPortStartInfo, new RecordItemIndex(61));
            //repo.WebDocument19216801.IPv4DestPortStart.Click("40;13");
            //Delay.Milliseconds(200);
            
            repo.WebDocument19216801.IPv4DestPortStart.PressKeys(DestPortStart);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (HasFocus='True') on item 'WebDocument19216801.IPv4DestPortStart'.", repo.WebDocument19216801.IPv4DestPortStartInfo, new RecordItemIndex(63));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestPortStartInfo, "HasFocus", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='IPv4DestPortStart') on item 'WebDocument19216801.IPv4DestPortStart'.", repo.WebDocument19216801.IPv4DestPortStartInfo, new RecordItemIndex(64));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestPortStartInfo, "Id", "IPv4DestPortStart");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='80') on item 'WebDocument19216801.IPv4DestPortStart'.", repo.WebDocument19216801.IPv4DestPortStartInfo, new RecordItemIndex(65));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestPortStartInfo, "TagValue", "80");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='80') on item 'WebDocument19216801.IPv4DestPortStart'.", repo.WebDocument19216801.IPv4DestPortStartInfo, new RecordItemIndex(66));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestPortStartInfo, "Value", "80");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'KIRUSHAKTHYPC.KIRUSHAKTHYPC' at 868;538.", repo.KIRUSHAKTHYPC.KIRUSHAKTHYPCInfo, new RecordItemIndex(67));
            //repo.KIRUSHAKTHYPC.KIRUSHAKTHYPC.Click("868;538");
            //Delay.Milliseconds(200);
            
            repo.WebDocument19216801.IPv4DestPortEnd.Click("45;12");
            Delay.Milliseconds(200);
            
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.IPv4DestPortEnd.PressKeys(DestPortEnd);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (HasFocus='True') on item 'WebDocument19216801.IPv4DestPortEnd'.", repo.WebDocument19216801.IPv4DestPortEndInfo, new RecordItemIndex(72));
            //Validate.Attribute(repo.WebDocument19216801.IPv4DestPortEndInfo, "HasFocus", "True");
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage IPv4SrcRangeAddressStart3_Screenshot1
        { get { return repo.WebDocument19216801.IPv4SrcRangeAddressStart3Info.GetScreenshot1(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions IPv4SrcRangeAddressStart3_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage IPv4SrcRangeAddressEnd3_Screenshot1
        { get { return repo.WebDocument19216801.IPv4SrcRangeAddressEnd3Info.GetScreenshot1(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions IPv4SrcRangeAddressEnd3_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage IPv4DestRangeAddressEnd_Screenshot1
        { get { return repo.WebDocument19216801.IPv4DestRangeAddressEndInfo.GetScreenshot1(new Rectangle(0, 0, 122, 20)); } }

        Imaging.FindOptions IPv4DestRangeAddressEnd_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage IPv4DestRangeAddressEnd_Screenshot2
        { get { return repo.WebDocument19216801.IPv4DestRangeAddressEndInfo.GetScreenshot2(new Rectangle(0, 0, 122, 20)); } }

        Imaging.FindOptions IPv4DestRangeAddressEnd_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
