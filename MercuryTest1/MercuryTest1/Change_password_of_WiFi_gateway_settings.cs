///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Change_password_of_WiFi_gateway_settings recording.
    /// </summary>
    [TestModule("f10f46b5-8b91-46e6-91da-e0853e756d9b", ModuleType.Recording, 1)]
    public partial class Change_password_of_WiFi_gateway_settings : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Change_password_of_WiFi_gateway_settings instance = new Change_password_of_WiFi_gateway_settings();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Change_password_of_WiFi_gateway_settings()
        {
            MM_currentPass = "C{LShiftKey up}hangeme0";
            MM_NewPass = "{LShiftKey down}C{LShiftKey up}hangeme";
            MM_Reenterpassword = "C{LShiftKey up}hqangeme";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Change_password_of_WiFi_gateway_settings Instance
        {
            get { return instance; }
        }

#region Variables

        string _MM_currentPass;

        /// <summary>
        /// Gets or sets the value of variable MM_currentPass.
        /// </summary>
        [TestVariable("0f100544-8969-4222-b01e-e887a485d48d")]
        public string MM_currentPass
        {
            get { return _MM_currentPass; }
            set { _MM_currentPass = value; }
        }

        string _MM_NewPass;

        /// <summary>
        /// Gets or sets the value of variable MM_NewPass.
        /// </summary>
        [TestVariable("3b5b3fee-46bf-40d5-ab42-6069f108631b")]
        public string MM_NewPass
        {
            get { return _MM_NewPass; }
            set { _MM_NewPass = value; }
        }

        string _MM_Reenterpassword;

        /// <summary>
        /// Gets or sets the value of variable MM_Reenterpassword.
        /// </summary>
        [TestVariable("aff39004-99aa-4436-912f-275e84245426")]
        public string MM_Reenterpassword
        {
            get { return _MM_Reenterpassword; }
            set { _MM_Reenterpassword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocumentIE.Admin' at 36;12.", repo.WebDocumentIE.AdminInfo, new RecordItemIndex(0));
            //repo.WebDocumentIE.Admin.Click("36;12");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument1921681001.ChangePassword' at 46;10.", repo.WebDocument1921681001.ChangePasswordInfo, new RecordItemIndex(1));
            //repo.WebDocument1921681001.ChangePassword.Click("46;10");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Change your password') on item 'WebDocument1921681001.LabelLabelChangePassword'.", repo.WebDocument1921681001.LabelLabelChangePasswordInfo, new RecordItemIndex(2));
            Validate.Attribute(repo.WebDocument1921681001.LabelLabelChangePasswordInfo, "InnerText", "Change your password");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Current password') on item 'WebDocument1921681001.CurrentPassword'.", repo.WebDocument1921681001.CurrentPasswordInfo, new RecordItemIndex(3));
            Validate.Attribute(repo.WebDocument1921681001.CurrentPasswordInfo, "InnerText", "Current password");
            Delay.Milliseconds(100);
            
            repo.WebDocument1921681001.CurrentPassword1.Click("37;13");
            Delay.Milliseconds(200);
            
            //Keyboard.PrepareFocus(repo.WebDocument19216801.CurrentPassword1);
            //Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            //Keyboard.PrepareFocus(repo.WebDocument19216801.CurrentPassword1);
            //Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey down}' with focus on 'WebDocument1921681001.CurrentPassword1'.", repo.WebDocument1921681001.CurrentPassword1Info, new RecordItemIndex(7));
            //repo.WebDocument1921681001.CurrentPassword1.PressKeys("{LShiftKey down}");
            //Delay.Milliseconds(0);
            
            //Keyboard.PrepareFocus(repo.WebDocument19216801.CurrentPassword1);
            //Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            //Keyboard.PrepareFocus(repo.WebDocument19216801.CurrentPassword1);
            //Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$MM_currentPass' with focus on 'WebDocument1921681001.CurrentPassword1'.", repo.WebDocument1921681001.CurrentPassword1Info, new RecordItemIndex(10));
            repo.WebDocument1921681001.CurrentPassword1.PressKeys(MM_currentPass);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Enter a New Password') on item 'WebDocument1921681001.EnterANewPassword'.", repo.WebDocument1921681001.EnterANewPasswordInfo, new RecordItemIndex(11));
            Validate.Attribute(repo.WebDocument1921681001.EnterANewPasswordInfo, "InnerText", "Enter a New Password");
            Delay.Milliseconds(100);
            
            repo.WebDocument1921681001.NewPassword13.Click("84;9");
            Delay.Milliseconds(200);
            
            //Keyboard.PrepareFocus(repo.WebDocument1921681001.NewPassword13);
            //Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            //Keyboard.PrepareFocus(repo.WebDocumentIE.NewPassword13);
            //Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$MM_NewPass' with focus on 'WebDocument1921681001.NewPassword13'.", repo.WebDocument1921681001.NewPassword13Info, new RecordItemIndex(15));
            repo.WebDocument1921681001.NewPassword13.PressKeys(MM_NewPass);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Re-enter the New Password') on item 'WebDocument1921681001.ReEnterTheNewPassword'.", repo.WebDocument1921681001.ReEnterTheNewPasswordInfo, new RecordItemIndex(16));
            Validate.Attribute(repo.WebDocument1921681001.ReEnterTheNewPasswordInfo, "InnerText", "Re-enter the New Password");
            Delay.Milliseconds(100);
            
            repo.WebDocument1921681001.ReenterPassword.Click("122;14");
            Delay.Milliseconds(200);
            
            //Keyboard.PrepareFocus(repo.WebDocument1921681001.ReenterPassword);
            //Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            //Keyboard.PrepareFocus(repo.WebDocument1921681001.ReenterPassword);
            //Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey down}' with focus on 'WebDocument1921681001.ReenterPassword'.", repo.WebDocument1921681001.ReenterPasswordInfo, new RecordItemIndex(20));
            //repo.WebDocument1921681001.ReenterPassword.PressKeys("{LShiftKey down}");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$MM_Reenterpassword' with focus on 'WebDocument1921681001.ReenterPassword'.", repo.WebDocument1921681001.ReenterPasswordInfo, new RecordItemIndex(21));
            repo.WebDocument1921681001.ReenterPassword.PressKeys(MM_Reenterpassword);
            Delay.Milliseconds(0);
            
            repo.WebDocument1921681001.Mainpage.Button.Click("78;25");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='errTipClose') on item 'WebDocument1921681001.ErrCloseNewPassword13'.", repo.WebDocument1921681001.ErrCloseNewPassword13Info, new RecordItemIndex(23));
            Validate.Attribute(repo.WebDocument1921681001.ErrCloseNewPassword13Info, "Class", "errTipClose");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-NewPassword13') on item 'WebDocument1921681001.ErrCloseNewPassword13'.", repo.WebDocument1921681001.ErrCloseNewPassword13Info, new RecordItemIndex(24));
            //Validate.Attribute(repo.WebDocument1921681001.ErrCloseNewPassword13Info, "Id", "errClose-NewPassword13");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='New password does not match. Please try again.') on item 'WebDocument1921681001.NewPasswordDoesNotMatchPleaseTry'.", repo.WebDocument1921681001.NewPasswordDoesNotMatchPleaseTryInfo, new RecordItemIndex(25));
            //Validate.Attribute(repo.WebDocument1921681001.NewPasswordDoesNotMatchPleaseTryInfo, "InnerText", "New password does not match. Please try again.");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='errTipClose') on item 'WebDocument1921681001.ErrCloseNewPassword13'.", repo.WebDocument1921681001.ErrCloseNewPassword13Info, new RecordItemIndex(26));
            Validate.Attribute(repo.WebDocument1921681001.ErrCloseNewPassword13Info, "Class", "errTipClose");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-NewPassword13') on item 'WebDocument1921681001.ErrCloseNewPassword13'.", repo.WebDocument1921681001.ErrCloseNewPassword13Info, new RecordItemIndex(27));
            //Validate.Attribute(repo.WebDocument1921681001.ErrCloseNewPassword13Info, "Id", "errClose-NewPassword13");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WebDocument1921681001.ErrCloseNewPassword13'.", repo.WebDocument1921681001.ErrCloseNewPassword13Info, new RecordItemIndex(28));
            Validate.Exists(repo.WebDocument1921681001.ErrCloseNewPassword13Info);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='The password you typed does not meet the requirements.') on item 'WebDocument1921681001.ThePasswordYouTypedDoesNotMeetThe'.", repo.WebDocument1921681001.ThePasswordYouTypedDoesNotMeetTheInfo, new RecordItemIndex(29));
            //Validate.Attribute(repo.WebDocument1921681001.ThePasswordYouTypedDoesNotMeetTheInfo, "InnerText", "The password you typed does not meet the requirements.");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='errTipClose') on item 'WebDocument1921681001.ErrCloseReenterPassword'.", repo.WebDocument1921681001.ErrCloseReenterPasswordInfo, new RecordItemIndex(30));
            Validate.Attribute(repo.WebDocument1921681001.ErrCloseReenterPasswordInfo, "Class", "errTipClose");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-ReenterPassword') on item 'WebDocument1921681001.ErrCloseReenterPassword'.", repo.WebDocument1921681001.ErrCloseReenterPasswordInfo, new RecordItemIndex(31));
            //Validate.Attribute(repo.WebDocument1921681001.ErrCloseReenterPasswordInfo, "Id", "errClose-ReenterPassword");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WebDocument1921681001.ErrCloseReenterPassword'.", repo.WebDocument1921681001.ErrCloseReenterPasswordInfo, new RecordItemIndex(32));
            Validate.Exists(repo.WebDocument1921681001.ErrCloseReenterPasswordInfo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(33));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
