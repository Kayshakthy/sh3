///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InValid_Remote_Access_Port_Field_Validation recording.
    /// </summary>
    [TestModule("b243b02b-bba0-4f91-b8d1-bbde854152a5", ModuleType.Recording, 1)]
    public partial class InValid_Remote_Access_Port_Field_Validation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static InValid_Remote_Access_Port_Field_Validation instance = new InValid_Remote_Access_Port_Field_Validation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InValid_Remote_Access_Port_Field_Validation()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InValid_Remote_Access_Port_Field_Validation Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.RemotePort' at 88;15.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(0));
            repo.WebDocument19216801.RemotePort.Click("88;15");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocument19216801.RemotePort'.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(1));
            Keyboard.PrepareFocus(repo.WebDocument19216801.RemotePort);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'WebDocument19216801.RemotePort'.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(2));
            repo.WebDocument19216801.RemotePort.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '-a' with focus on 'WebDocument19216801.RemotePort'.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(3));
            repo.WebDocument19216801.RemotePort.PressKeys("-a");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Button14' at 88;35.", repo.WebDocument19216801.Button14Info, new RecordItemIndex(4));
            repo.WebDocument19216801.Button14.Click("88;35");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.RemotePort' at 78;13.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(5));
            //repo.WebDocument19216801.RemotePort.Click("78;13");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocument19216801.RemotePort'.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(6));
            //Keyboard.PrepareFocus(repo.WebDocument19216801.RemotePort);
            //Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '0' with focus on 'WebDocument19216801.RemotePort'.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(7));
            //repo.WebDocument19216801.RemotePort.PressKeys("0");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Button14' at 74;27.", repo.WebDocument19216801.Button14Info, new RecordItemIndex(8));
            //repo.WebDocument19216801.Button14.Click("74;27");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='errTipClose') on item 'WebDocument19216801.ErrCloseRemotePort'.", repo.WebDocument19216801.ErrCloseRemotePortInfo, new RecordItemIndex(9));
            Validate.Attribute(repo.WebDocument19216801.ErrCloseRemotePortInfo, "Class", "errTipClose");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-RemotePort') on item 'WebDocument19216801.ErrCloseRemotePort'.", repo.WebDocument19216801.ErrCloseRemotePortInfo, new RecordItemIndex(10));
            Validate.Attribute(repo.WebDocument19216801.ErrCloseRemotePortInfo, "Id", "errClose-RemotePort");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=31,Height=36}) on item 'WebDocument19216801.ErrCloseRemotePort'.", repo.WebDocument19216801.ErrCloseRemotePortInfo, new RecordItemIndex(11));
            //Validate.ContainsImage(repo.WebDocument19216801.ErrCloseRemotePortInfo, ErrCloseRemotePort_Screenshot1, ErrCloseRemotePort_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage ErrCloseRemotePort_Screenshot1
        { get { return repo.WebDocument19216801.ErrCloseRemotePortInfo.GetScreenshot1(new Rectangle(0, 0, 31, 36)); } }

        Imaging.FindOptions ErrCloseRemotePort_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
