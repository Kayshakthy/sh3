///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Choose_Wireless_Frequency_Both recording.
    /// </summary>
    [TestModule("54cf6d08-a1da-435f-beab-123046356d00", ModuleType.Recording, 1)]
    public partial class Choose_Wireless_Frequency_Both : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Choose_Wireless_Frequency_Both instance = new Choose_Wireless_Frequency_Both();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Choose_Wireless_Frequency_Both()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Choose_Wireless_Frequency_Both Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Scroll Vertical by -1320 units.", new RecordItemIndex(0));
            //Mouse.ScrollWheel(-1320);
            //Delay.Milliseconds(500);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Both 2.4 and 5GHz') on item 'WebDocument19216801.Both24And5GHz'.", repo.WebDocument19216801.Both24And5GHzInfo, new RecordItemIndex(1));
            //Validate.Attribute(repo.WebDocument19216801.Both24And5GHzInfo, "InnerText", "Both 2.4 and 5GHz");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='label') on item 'WebDocument19216801.Both24And5GHz'.", repo.WebDocument19216801.Both24And5GHzInfo, new RecordItemIndex(2));
            //Validate.Attribute(repo.WebDocument19216801.Both24And5GHzInfo, "TagName", "label");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.FmRbtnRadioBoth' at 17;20.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(3));
            //repo.WebDocument19216801.FmRbtnRadioBoth.Click("17;20");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='fmRadio checked') on item 'WebDocument19216801.FmRbtnRadioBoth'.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(4));
            //Validate.Attribute(repo.WebDocument19216801.FmRbtnRadioBothInfo, "Class", "fmRadio checked");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='fmRbtn-RadioBoth') on item 'WebDocument19216801.FmRbtnRadioBoth'.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(5));
            //Validate.Attribute(repo.WebDocument19216801.FmRbtnRadioBothInfo, "Id", "fmRbtn-RadioBoth");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=31,Height=31}) on item 'WebDocument19216801.FmRbtnRadioBoth'.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(6));
            //Validate.ContainsImage(repo.WebDocument19216801.FmRbtnRadioBothInfo, FmRbtnRadioBoth_Screenshot1, FmRbtnRadioBoth_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Both 2.4 GHz and 5 GHz') on item 'WebDocumentIE.Both24GHzAnd5GHz'.", repo.WebDocumentIE.Both24GHzAnd5GHzInfo, new RecordItemIndex(7));
            Validate.Attribute(repo.WebDocumentIE.Both24GHzAnd5GHzInfo, "InnerText", "Both 2.4 GHz and 5 GHz");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.FmRbtnRadioBoth' at 11;17.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(8));
            repo.WebDocument19216801.FmRbtnRadioBoth.Click("11;17");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='fmRadio checked') on item 'WebDocument19216801.FmRbtnRadioBoth'.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(9));
            //Validate.Attribute(repo.WebDocument19216801.FmRbtnRadioBothInfo, "Class", "fmRadio checked");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='fmRbtn-RadioBoth') on item 'WebDocument19216801.FmRbtnRadioBoth'.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(10));
            Validate.Attribute(repo.WebDocument19216801.FmRbtnRadioBothInfo, "Id", "fmRbtn-RadioBoth");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Rel='NewMacFilterRadioEnableGrp') on item 'WebDocument19216801.FmRbtnRadioBoth'.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(11));
            //Validate.Attribute(repo.WebDocument19216801.FmRbtnRadioBothInfo, "Rel", "NewMacFilterRadioEnableGrp");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=25,Height=25}) on item 'WebDocument19216801.FmRbtnRadioBoth'.", repo.WebDocument19216801.FmRbtnRadioBothInfo, new RecordItemIndex(12));
            //Validate.ContainsImage(repo.WebDocument19216801.FmRbtnRadioBothInfo, FmRbtnRadioBoth_Screenshot2, FmRbtnRadioBoth_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(13));
            
        }

#region Image Feature Data
        CompressedImage FmRbtnRadioBoth_Screenshot1
        { get { return repo.WebDocument19216801.FmRbtnRadioBothInfo.GetScreenshot1(new Rectangle(0, 0, 31, 31)); } }

        Imaging.FindOptions FmRbtnRadioBoth_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage FmRbtnRadioBoth_Screenshot2
        { get { return repo.WebDocument19216801.FmRbtnRadioBothInfo.GetScreenshot2(new Rectangle(0, 0, 25, 25)); } }

        Imaging.FindOptions FmRbtnRadioBoth_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
