///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NavigateConnectedDevices recording.
    /// </summary>
    [TestModule("bda0cfeb-209e-468b-a0ed-2f1a4de8b768", ModuleType.Recording, 1)]
    public partial class NavigateConnectedDevices : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static NavigateConnectedDevices instance = new NavigateConnectedDevices();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NavigateConnectedDevices()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NavigateConnectedDevices Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.ConnectedDevices.Click("41;2");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='All devices connected to you modem are listed below:') on item 'WebDocument19216801.DevicesInformation'.", repo.WebDocument19216801.DevicesInformationInfo, new RecordItemIndex(1));
            //Validate.Attribute(repo.WebDocument19216801.DevicesInformationInfo, "InnerText", "All devices connected to you modem are listed below:");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=324,Height=15}) on item 'WebDocument19216801.DevicesInformation'.", repo.WebDocument19216801.DevicesInformationInfo, new RecordItemIndex(2));
            //Validate.ContainsImage(repo.WebDocument19216801.DevicesInformationInfo, DevicesInformation_Screenshot1, DevicesInformation_Screenshot1_Options, Validate.DefaultMessage, new Validate.Options(){ReportScreenshot=Validate.ResultOption.Always});
            //Delay.Milliseconds(100);
            
            Validate_ConnectedDevices();
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='common_table') on item 'WebDocument19216801.AttachedDevicesTable'.", repo.WebDocument19216801.AttachedDevicesTableInfo, new RecordItemIndex(4));
            //Validate.Attribute(repo.WebDocument19216801.AttachedDevicesTableInfo, "Class", "common_table");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='AttachedDevicesTable') on item 'WebDocument19216801.AttachedDevicesTable'.", repo.WebDocument19216801.AttachedDevicesTableInfo, new RecordItemIndex(5));
            //Validate.Attribute(repo.WebDocument19216801.AttachedDevicesTableInfo, "Id", "AttachedDevicesTable");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot3' with region {X=0,Y=0,Width=875,Height=242}) on item 'WebDocument19216801.AttachedDevicesTable'.", repo.WebDocument19216801.AttachedDevicesTableInfo, new RecordItemIndex(6));
            //Validate.ContainsImage(repo.WebDocument19216801.AttachedDevicesTableInfo, AttachedDevicesTable_Screenshot3, AttachedDevicesTable_Screenshot3_Options);
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage DevicesInformation_Screenshot1
        { get { return repo.WebDocument19216801.DevicesInformationInfo.GetScreenshot1(new Rectangle(0, 0, 324, 15)); } }

        Imaging.FindOptions DevicesInformation_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage AttachedDevicesTable_Screenshot3
        { get { return repo.WebDocument19216801.AttachedDevicesTableInfo.GetScreenshot3(new Rectangle(0, 0, 875, 242)); } }

        Imaging.FindOptions AttachedDevicesTable_Screenshot3_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
