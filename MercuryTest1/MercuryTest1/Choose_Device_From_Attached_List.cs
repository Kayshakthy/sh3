///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Choose_Device_From_Attached_List recording.
    /// </summary>
    [TestModule("6c70f972-8c73-4dd3-9c0a-d2664b6ab7d0", ModuleType.Recording, 1)]
    public partial class Choose_Device_From_Attached_List : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Choose_Device_From_Attached_List instance = new Choose_Device_From_Attached_List();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Choose_Device_From_Attached_List()
        {
            Mac_Address0 = "";
            Mac_Address1 = "";
            Mac_Address2 = "";
            Mac_Address3 = "";
            Mac_Address4 = "";
            Mac_Address5 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Choose_Device_From_Attached_List Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mac_Address0;

        /// <summary>
        /// Gets or sets the value of variable Mac_Address0.
        /// </summary>
        [TestVariable("ccde6b93-8a5f-4cb8-959d-4ce4d5e999f5")]
        public string Mac_Address0
        {
            get { return _Mac_Address0; }
            set { _Mac_Address0 = value; }
        }

        string _Mac_Address1;

        /// <summary>
        /// Gets or sets the value of variable Mac_Address1.
        /// </summary>
        [TestVariable("d3cd21d7-35da-4559-a985-3dbc4418d5bc")]
        public string Mac_Address1
        {
            get { return _Mac_Address1; }
            set { _Mac_Address1 = value; }
        }

        string _Mac_Address2;

        /// <summary>
        /// Gets or sets the value of variable Mac_Address2.
        /// </summary>
        [TestVariable("12c754e4-8426-4fb1-a5a4-0cb6c44652b2")]
        public string Mac_Address2
        {
            get { return _Mac_Address2; }
            set { _Mac_Address2 = value; }
        }

        string _Mac_Address3;

        /// <summary>
        /// Gets or sets the value of variable Mac_Address3.
        /// </summary>
        [TestVariable("766225dc-1da1-4f97-9634-9a71a279f6b1")]
        public string Mac_Address3
        {
            get { return _Mac_Address3; }
            set { _Mac_Address3 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Mac_Address4.
        /// </summary>
        [TestVariable("76dec59d-7f0f-40be-a551-6c61a7c99568")]
        public string Mac_Address4
        {
            get { return repo.MAC_Address4; }
            set { repo.MAC_Address4 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Mac_Address5.
        /// </summary>
        [TestVariable("0464caf5-4800-4617-a484-1c90e2a5e7b7")]
        public string Mac_Address5
        {
            get { return repo.MAC_Address5; }
            set { repo.MAC_Address5 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            try {
                ChooseDeviceFromAttachedDevicesList(Mac_Address0, Mac_Address1, Mac_Address2, Mac_Address3, Mac_Address4, Mac_Address5);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
