///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
    public partial class Validate_DMZ_IP
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Validate_IsNotAValidIPAddress()
        {
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='is not a valid IP address.') on item 'WebDocument19216801.IsNotAValidIPAddress'.", repo.WebDocument19216801.IsNotAValidIPAddressInfo);
            //Validate.Attribute(repo.WebDocument19216801.IsNotAValidIPAddressInfo, "InnerText", "is not a valid IP address.");
            
            //bool ipVal =  Validate.Attribute(repo.WebDocument19216801.IsNotAValidIPAddressInfo, "InnerText", "is not a valid IP address.","DMZ IP Validation",false);
            /**
            bool ipVal =  Validate.Attribute(repo.WebDocument19216801.IsNotAValidIPAddressInfo, "InnerText", "is not a valid IP address.","{2}",false);
            Report.Info(ipVal.ToString());
            if(!ipVal){ //false
             	//"is not a valid IP address." string is NOT present         	
            	Report.Log(ReportLevel.Success," Valid IP");
            }else{//true
  
            	//validation is success --> "is not a valid IP address." string is present
            	Report.Log(ReportLevel.Failure,"InValid IP");
            }            
            **/
            bool ipVal = Validate.NotExists(repo.WebDocument19216801.IsNotAValidIPAddressInfo,"is not a valid IP address.",false);
            Report.Info(ipVal.ToString());
            if(ipVal){
            	Report.Log(ReportLevel.Success," Valid IP");
            }else{
            	Report.Log(ReportLevel.Failure,"InValid IP");
            }
 
            Report.Screenshot();
            //Report.Screenshot(repo.WebDocument19216801.IsNotAValidIPAddress.Element,true);	           
           
        }

    }
}