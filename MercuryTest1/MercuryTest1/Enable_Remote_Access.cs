///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Enable_Remote_Access recording.
    /// </summary>
    [TestModule("917c31fa-79f0-42c0-89ee-7394f55d4c18", ModuleType.Recording, 1)]
    public partial class Enable_Remote_Access : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Enable_Remote_Access instance = new Enable_Remote_Access();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Enable_Remote_Access()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Enable_Remote_Access Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.FmRbtnEnableRemoteAccess.Click("17;17");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.LogOut' at 29;16.", repo.WebDocument19216801.LogOutInfo, new RecordItemIndex(1));
            //repo.WebDocument19216801.LogOut.Click("29;16");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='fmRadio checked') on item 'WebDocument19216801.FmRbtnEnableRemoteAccess'.", repo.WebDocument19216801.FmRbtnEnableRemoteAccessInfo, new RecordItemIndex(2));
            //Validate.Attribute(repo.WebDocument19216801.FmRbtnEnableRemoteAccessInfo, "Class", "fmRadio checked");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WebDocument19216801.FmRbtnEnableRemoteAccess'.", repo.WebDocument19216801.FmRbtnEnableRemoteAccessInfo, new RecordItemIndex(3));
            //Validate.Exists(repo.WebDocument19216801.FmRbtnEnableRemoteAccessInfo);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='fmRbtn-EnableRemoteAccess') on item 'WebDocument19216801.FmRbtnEnableRemoteAccess'.", repo.WebDocument19216801.FmRbtnEnableRemoteAccessInfo, new RecordItemIndex(4));
            //Validate.Attribute(repo.WebDocument19216801.FmRbtnEnableRemoteAccessInfo, "Id", "fmRbtn-EnableRemoteAccess");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='8443') on item 'WebDocument19216801.RemotePort'.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(5));
            //Validate.Attribute(repo.WebDocument19216801.RemotePortInfo, "TagValue", "8443");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='8443') on item 'WebDocument19216801.RemotePort'.", repo.WebDocument19216801.RemotePortInfo, new RecordItemIndex(6));
            //Validate.Attribute(repo.WebDocument19216801.RemotePortInfo, "Value", "8443");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='submitBtn') on item 'WebDocument19216801.Button14'.", repo.WebDocument19216801.Button14Info, new RecordItemIndex(7));
            //Validate.Attribute(repo.WebDocument19216801.Button14Info, "Class", "submitBtn");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Apply changes') on item 'WebDocument19216801.Button14'.", repo.WebDocument19216801.Button14Info, new RecordItemIndex(8));
            //Validate.Attribute(repo.WebDocument19216801.Button14Info, "TagValue", "Apply changes");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Apply changes') on item 'WebDocument19216801.Button14'.", repo.WebDocument19216801.Button14Info, new RecordItemIndex(9));
            //Validate.Attribute(repo.WebDocument19216801.Button14Info, "Value", "Apply changes");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='submitBtn') on item 'WebDocument19216801.Button14'.", repo.WebDocument19216801.Button14Info, new RecordItemIndex(10));
            //Validate.Attribute(repo.WebDocument19216801.Button14Info, "Class", "submitBtn");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Apply changes') on item 'WebDocument19216801.Button14'.", repo.WebDocument19216801.Button14Info, new RecordItemIndex(11));
            //Validate.Attribute(repo.WebDocument19216801.Button14Info, "TagValue", "Apply changes");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Apply changes') on item 'WebDocument19216801.Button14'.", repo.WebDocument19216801.Button14Info, new RecordItemIndex(12));
            //Validate.Attribute(repo.WebDocument19216801.Button14Info, "Value", "Apply changes");
            //Delay.Milliseconds(100);
            
            repo.WebDocument19216801.Button14.Click("118;23");
            Delay.Milliseconds(200);
            
            Delay.Duration(10000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.SomeDivTag' at 433;443.", repo.WebDocument19216801.SomeDivTagInfo, new RecordItemIndex(15));
            //repo.WebDocument19216801.SomeDivTag.Click("433;443");
            //Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='RemoteAccess_field') on item 'WebDocument19216801.FormHeader'.", repo.WebDocument19216801.FormHeaderInfo, new RecordItemIndex(16));
            //Validate.Attribute(repo.WebDocument19216801.FormHeaderInfo, "Id", "RemoteAccess_field");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (tabindex='0') on item 'WebDocument19216801.FormHeader'.", repo.WebDocument19216801.FormHeaderInfo, new RecordItemIndex(17));
            //Validate.Attribute(repo.WebDocument19216801.FormHeaderInfo, "tabindex", "0");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=945,Height=330}) on item 'WebDocument19216801.FormHeader'.", repo.WebDocument19216801.FormHeaderInfo, new RecordItemIndex(18));
            //Validate.ContainsImage(repo.WebDocument19216801.FormHeaderInfo, FormHeader_Screenshot2, FormHeader_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            Capture_Remote_Access_Settings();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        CompressedImage FormHeader_Screenshot2
        { get { return repo.WebDocument19216801.FormHeaderInfo.GetScreenshot2(new Rectangle(0, 0, 945, 330)); } }

        Imaging.FindOptions FormHeader_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
