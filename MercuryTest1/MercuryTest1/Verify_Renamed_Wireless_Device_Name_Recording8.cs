///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verify_Renamed_Wireless_Device_Name_Recording8 recording.
    /// </summary>
    [TestModule("4d3e9b4a-494c-4e6a-adb9-2e6331fcadc6", ModuleType.Recording, 1)]
    public partial class Verify_Renamed_Wireless_Device_Name_Recording8 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Verify_Renamed_Wireless_Device_Name_Recording8 instance = new Verify_Renamed_Wireless_Device_Name_Recording8();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verify_Renamed_Wireless_Device_Name_Recording8()
        {
            wireless_device_name_old = "";
            wireless_devcie_name_new = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verify_Renamed_Wireless_Device_Name_Recording8 Instance
        {
            get { return instance; }
        }

#region Variables

        string _wireless_device_name_old;

        /// <summary>
        /// Gets or sets the value of variable wireless_device_name_old.
        /// </summary>
        [TestVariable("d5435f52-e333-40f9-bfeb-f7d3791504a9")]
        public string wireless_device_name_old
        {
            get { return _wireless_device_name_old; }
            set { _wireless_device_name_old = value; }
        }

        string _wireless_devcie_name_new;

        /// <summary>
        /// Gets or sets the value of variable wireless_devcie_name_new.
        /// </summary>
        [TestVariable("69a3ddf6-1b7c-4399-a38a-fe48e0443762")]
        public string wireless_devcie_name_new
        {
            get { return _wireless_devcie_name_new; }
            set { _wireless_devcie_name_new = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.ConnectedDevices.Click("41;2");
            Delay.Milliseconds(200);
            
            Validate_Renamed_Wireless_Connected_Device_Name(wireless_device_name_old, wireless_devcie_name_new);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 3m.", new RecordItemIndex(2));
            //Delay.Duration(180000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(3));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
