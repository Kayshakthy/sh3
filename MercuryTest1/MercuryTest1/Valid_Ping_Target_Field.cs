///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Valid_Ping_Target_Field recording.
    /// </summary>
    [TestModule("f0218b64-7621-48f5-985c-313e60a88d8e", ModuleType.Recording, 1)]
    public partial class Valid_Ping_Target_Field : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Valid_Ping_Target_Field instance = new Valid_Ping_Target_Field();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Valid_Ping_Target_Field()
        {
            PingURL = "";
            PingSize = "64";
            No_of_Pings = "3";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Valid_Ping_Target_Field Instance
        {
            get { return instance; }
        }

#region Variables

        string _PingURL;

        /// <summary>
        /// Gets or sets the value of variable PingURL.
        /// </summary>
        [TestVariable("b6b3cba7-e1af-4a4d-9e99-90aeee445c9b")]
        public string PingURL
        {
            get { return _PingURL; }
            set { _PingURL = value; }
        }

        string _PingSize;

        /// <summary>
        /// Gets or sets the value of variable PingSize.
        /// </summary>
        [TestVariable("0b5b9d05-a38e-4484-8ea0-ab4399a3fe4e")]
        public string PingSize
        {
            get { return _PingSize; }
            set { _PingSize = value; }
        }

        string _No_of_Pings;

        /// <summary>
        /// Gets or sets the value of variable No_of_Pings.
        /// </summary>
        [TestVariable("af6fb3b4-2642-4c80-9d74-47f2da5a7b2c")]
        public string No_of_Pings
        {
            get { return _No_of_Pings; }
            set { _No_of_Pings = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            repo.WebDocument19216801.AdvancedSettings.Click("69;11");
            Delay.Milliseconds(200);
            
            repo.WebDocument19216801.Tools.Click("17;7");
            Delay.Milliseconds(200);
            
            repo.WebDocument19216801.Ping.Click("18;10");
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Target.Click("20;10");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Target);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Target);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Target.PressKeys(PingURL);
            Delay.Milliseconds(200);
            
            repo.WebDocumentIE.Pingsize.Click("36;19");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocumentIE.Pingsize);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocumentIE.Pingsize.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            repo.WebDocumentIE.Pingsize.PressKeys(PingSize);
            Delay.Milliseconds(0);
            
            repo.WebDocumentIE.NoofPings.Click("31;9");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocumentIE.NoofPings);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocumentIE.NoofPings.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            repo.WebDocumentIE.NoofPings.PressKeys(No_of_Pings);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Start.Click("64;23");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'WebDocumentIE.ErrCloseTarget'.", repo.WebDocumentIE.ErrCloseTargetInfo, new RecordItemIndex(16));
            //Validate.NotExists(repo.WebDocumentIE.ErrCloseTargetInfo);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'WebDocumentIE.ErrCloseTarget'.", repo.WebDocumentIE.ErrCloseTargetInfo, new RecordItemIndex(17));
            Validate.NotExists(repo.WebDocumentIE.ErrCloseTargetInfo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(18));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
