///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace ArrisTest
{
	public partial class Choose_Channel_Manual_5GHz
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void Choose_Manual_Channel_5GHz(string argument1)
		{
			Report.Info("Channel Number(5GHz) : "+ argument1);
			//        	int channelNumber = Int32.Parse(argument1);
			int channelNumber = Int32.Parse(argument1.Trim());
			
			/*	//initialize Channel_5GHz
			WebDocument webDocument1 = "/dom[@domain='192.168.0.1']";
			Ranorex.SelectTag protocolTag1 = webDocument1.FindSingle("/dom[@domain='192.168.0.1']//select[#'Channel50']");
			int i=1;
			foreach(Ranorex.OptionTag optTag in protocolTag1.Find(".//option"))
			{
				Report.Info(optTag.InnerText);
				if(i==1){
					optTag.Selected = true;
					break;					
				}
			}
			*/
			if(channelNumber < 52){
				Report.Info("DFS channel value is < 52");
				Delay.Seconds(5);
				WebDocument webDocument = "/dom[@domain='192.168.0.1']";
//				Report.Info("Protocol(argument1) : "+argument1);
				//Ranorex.SelectTag protocolTag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//select[#'IPv4ProtocolGrp']");
				Ranorex.SelectTag protocolTag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//select[#'Channel50']");
				//Ranorex.SelectTag protocolTag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//select[#'WirelessMode50']");
				foreach(Ranorex.OptionTag optTag in protocolTag.Find(".//option"))
				{
					Report.Info(optTag.InnerText);
					string tempChannel = " Channel "+argument1.Trim();
					Report.Info("tempChannel : " + tempChannel);				
//					if(optTag.InnerText.Trim() == argument1.Trim()){
					if(optTag.InnerText.Trim() == tempChannel.Trim()){
						Report.Info("5GHz Matching-True");
						optTag.Selected = true;
						optTag.Click();
						break;
					}
				}
				TableTag table_2GHz = webDocument.FindSingle("/dom[@domain='192.168.0.1']//div[#'WirelessFrequency50GHz']/table");
				Report.Screenshot("Wireless_5GHz",table_2GHz.Element,false);
			}else{
				Report.Info("DFS channel value is >= 52");
				//call another module deal with this
				Delay.Seconds(5);
				WebDocument webDocument = "/dom[@domain='192.168.0.1']";	
				Ranorex.SelectTag protocolTag = webDocument.FindSingle("/dom[@domain='192.168.0.1']//select[#'Channel50']");
				foreach(Ranorex.OptionTag optTag in protocolTag.Find(".//option"))
				{
					Report.Info(optTag.InnerText);
					string tempChannel = " Channel "+argument1.Trim();
					Report.Info("tempChannel : " + tempChannel);
					if(optTag.InnerText.Trim() == tempChannel.Trim()){
						Report.Info("5GHz Matching-True");
						optTag.Selected = true;
						break;
					}
				}
				Ack_DFS_Channel_Selection.Start();
				TableTag table_2GHz = webDocument.FindSingle("/dom[@domain='192.168.0.1']//div[#'WirelessFrequency50GHz']/table");
				Report.Screenshot("Wireless_5GHz",table_2GHz.Element,false);				
				
			}
			Report.Screenshot();
		}

	}
}