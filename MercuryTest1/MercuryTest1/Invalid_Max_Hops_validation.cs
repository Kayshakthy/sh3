///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Invalid_Max_Hops_validation recording.
    /// </summary>
    [TestModule("ad5a8238-b592-4473-8777-bab22ff05ae3", ModuleType.Recording, 1)]
    public partial class Invalid_Max_Hops_validation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Invalid_Max_Hops_validation instance = new Invalid_Max_Hops_validation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Invalid_Max_Hops_validation()
        {
            Max_hops = "10";
            Trace_route = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Invalid_Max_Hops_validation Instance
        {
            get { return instance; }
        }

#region Variables

        string _Max_hops;

        /// <summary>
        /// Gets or sets the value of variable Max_hops.
        /// </summary>
        [TestVariable("c8ac146c-87eb-4188-bfae-abef6f5a7c13")]
        public string Max_hops
        {
            get { return _Max_hops; }
            set { _Max_hops = value; }
        }

        string _Trace_route;

        /// <summary>
        /// Gets or sets the value of variable Trace_route.
        /// </summary>
        [TestVariable("a66f5464-19c8-4377-bf04-1d3313390050")]
        public string Trace_route
        {
            get { return _Trace_route; }
            set { _Trace_route = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue='Clear results') on item 'WebDocument19216801.Button25'.", repo.WebDocument19216801.Button25Info, new RecordItemIndex(0));
            //Validate.Attribute(repo.WebDocument19216801.Button25Info, "TagValue", "Clear results");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='Clear results') on item 'WebDocument19216801.Button25'.", repo.WebDocument19216801.Button25Info, new RecordItemIndex(1));
            //Validate.Attribute(repo.WebDocument19216801.Button25Info, "Value", "Clear results");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=167,Height=57}) on item 'WebDocument19216801.Button25'.", repo.WebDocument19216801.Button25Info, new RecordItemIndex(2));
            //Validate.ContainsImage(repo.WebDocument19216801.Button25Info, Button25_Screenshot2, Button25_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocument19216801.Button25' at 84;29.", repo.WebDocument19216801.Button25Info, new RecordItemIndex(3));
            //repo.WebDocument19216801.Button25.Click("84;29");
            //Delay.Milliseconds(200);
            
            repo.WebDocument19216801.Target.Click("23;17");
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Target);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Target);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Target.PressKeys("www.bbc.co.uk");
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Baseport.Click("23;17");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Baseport);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Baseport);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '65535' with focus on 'WebDocument19216801.Baseport'.", repo.WebDocument19216801.BaseportInfo, new RecordItemIndex(11));
            repo.WebDocument19216801.Baseport.PressKeys("65535");
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Maxhops.Click("23;17");
            Delay.Milliseconds(200);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Maxhops);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Keyboard.PrepareFocus(repo.WebDocument19216801.Maxhops);
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Maxhops.PressKeys(Max_hops);
            Delay.Milliseconds(0);
            
            repo.WebDocument19216801.Start.Click("57;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(17));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='errTipClose') on item 'WebDocumentIE.ErrCloseMaxhops'.", repo.WebDocumentIE.ErrCloseMaxhopsInfo, new RecordItemIndex(18));
            Validate.Attribute(repo.WebDocumentIE.ErrCloseMaxhopsInfo, "Class", "errTipClose");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-Maxhops') on item 'WebDocumentIE.ErrCloseMaxhops'.", repo.WebDocumentIE.ErrCloseMaxhopsInfo, new RecordItemIndex(19));
            Validate.Attribute(repo.WebDocumentIE.ErrCloseMaxhopsInfo, "Id", "errClose-Maxhops");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'WebDocumentIE.ErrCloseMaxhops'.", repo.WebDocumentIE.ErrCloseMaxhopsInfo, new RecordItemIndex(20));
            Validate.Exists(repo.WebDocumentIE.ErrCloseMaxhopsInfo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(21));
            
            //Validate_MaximumNumberOfHopsMustBetween1An(Max_hops);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Maximum number of hops must between 1 and 255.') on item 'WebDocumentIE.MaximumNumberOfHopsMustBetween1An'.", repo.WebDocumentIE.MaximumNumberOfHopsMustBetween1AnInfo, new RecordItemIndex(23));
            //Validate.Attribute(repo.WebDocumentIE.MaximumNumberOfHopsMustBetween1AnInfo, "InnerText", "Maximum number of hops must between 1 and 255.");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=211,Height=43}) on item 'WebDocumentIE.MaximumNumberOfHopsMustBetween1An'.", repo.WebDocumentIE.MaximumNumberOfHopsMustBetween1AnInfo, new RecordItemIndex(24));
            //Validate.ContainsImage(repo.WebDocumentIE.MaximumNumberOfHopsMustBetween1AnInfo, MaximumNumberOfHopsMustBetween1An_Screenshot1_2, MaximumNumberOfHopsMustBetween1An_Screenshot1_2_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='errTipClose') on item 'WebDocumentIE.ErrCloseMaxhops'.", repo.WebDocumentIE.ErrCloseMaxhopsInfo, new RecordItemIndex(25));
            //Validate.Attribute(repo.WebDocumentIE.ErrCloseMaxhopsInfo, "Class", "errTipClose");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-Maxhops') on item 'WebDocumentIE.ErrCloseMaxhops'.", repo.WebDocumentIE.ErrCloseMaxhopsInfo, new RecordItemIndex(26));
            //Validate.Attribute(repo.WebDocumentIE.ErrCloseMaxhopsInfo, "Id", "errClose-Maxhops");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=31,Height=36}) on item 'WebDocumentIE.ErrCloseMaxhops'.", repo.WebDocumentIE.ErrCloseMaxhopsInfo, new RecordItemIndex(27));
            //Validate.ContainsImage(repo.WebDocumentIE.ErrCloseMaxhopsInfo, ErrCloseMaxhops_Screenshot1, ErrCloseMaxhops_Screenshot1_Options);
            //Delay.Milliseconds(100);
            
            //Validate_SpanTag1IsAnInvalidNumber();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='-1 is an invalid number.') on item 'WebDocumentIE.SpanTag1IsAnInvalidNumber'.", repo.WebDocumentIE.SpanTag1IsAnInvalidNumberInfo, new RecordItemIndex(29));
            //Validate.Attribute(repo.WebDocumentIE.SpanTag1IsAnInvalidNumberInfo, "InnerText", "-1 is an invalid number.");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=145,Height=26}) on item 'WebDocumentIE.SpanTag1IsAnInvalidNumber'.", repo.WebDocumentIE.SpanTag1IsAnInvalidNumberInfo, new RecordItemIndex(30));
            //Validate.ContainsImage(repo.WebDocumentIE.SpanTag1IsAnInvalidNumberInfo, SpanTag1IsAnInvalidNumber_Screenshot1_2, SpanTag1IsAnInvalidNumber_Screenshot1_2_Options);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-Maxhops') on item 'WebDocumentIE.ErrCloseMaxhops'.", repo.WebDocumentIE.ErrCloseMaxhopsInfo, new RecordItemIndex(31));
            //Validate.Attribute(repo.WebDocumentIE.ErrCloseMaxhopsInfo, "Id", "errClose-Maxhops");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=31,Height=36}) on item 'WebDocumentIE.ErrCloseMaxhops'.", repo.WebDocumentIE.ErrCloseMaxhopsInfo, new RecordItemIndex(32));
            //Validate.ContainsImage(repo.WebDocumentIE.ErrCloseMaxhopsInfo, ErrCloseMaxhops_Screenshot1_2, ErrCloseMaxhops_Screenshot1_2_Options);
            //Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(33));
            
        }

#region Image Feature Data
        CompressedImage Button25_Screenshot2
        { get { return repo.WebDocument19216801.Button25Info.GetScreenshot2(new Rectangle(0, 0, 167, 57)); } }

        Imaging.FindOptions Button25_Screenshot2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage MaximumNumberOfHopsMustBetween1An_Screenshot1
        { get { return repo.WebDocumentIE.MaximumNumberOfHopsMustBetween1AnInfo.GetScreenshot1(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions MaximumNumberOfHopsMustBetween1An_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage MaximumNumberOfHopsMustBetween1An_Screenshot1_2
        { get { return repo.WebDocumentIE.MaximumNumberOfHopsMustBetween1AnInfo.GetScreenshot1(new Rectangle(0, 0, 211, 43)); } }

        Imaging.FindOptions MaximumNumberOfHopsMustBetween1An_Screenshot1_2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage ErrCloseMaxhops_Screenshot1
        { get { return repo.WebDocumentIE.ErrCloseMaxhopsInfo.GetScreenshot1(new Rectangle(0, 0, 31, 36)); } }

        Imaging.FindOptions ErrCloseMaxhops_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage SpanTag1IsAnInvalidNumber_Screenshot1
        { get { return repo.WebDocumentIE.SpanTag1IsAnInvalidNumberInfo.GetScreenshot1(new Rectangle(0, 0, 0, 0)); } }

        Imaging.FindOptions SpanTag1IsAnInvalidNumber_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage SpanTag1IsAnInvalidNumber_Screenshot1_2
        { get { return repo.WebDocumentIE.SpanTag1IsAnInvalidNumberInfo.GetScreenshot1(new Rectangle(0, 0, 145, 26)); } }

        Imaging.FindOptions SpanTag1IsAnInvalidNumber_Screenshot1_2_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage ErrCloseMaxhops_Screenshot1_2
        { get { return repo.WebDocumentIE.ErrCloseMaxhopsInfo.GetScreenshot1(new Rectangle(0, 0, 31, 36)); } }

        Imaging.FindOptions ErrCloseMaxhops_Screenshot1_2_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
