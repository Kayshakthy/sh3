///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validate_Invalid_Gateway_LAN_IP recording.
    /// </summary>
    [TestModule("4109f825-b3b1-4340-9c65-9835b4e29786", ModuleType.Recording, 1)]
    public partial class Validate_Invalid_Gateway_LAN_IP : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Validate_Invalid_Gateway_LAN_IP instance = new Validate_Invalid_Gateway_LAN_IP();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validate_Invalid_Gateway_LAN_IP()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validate_Invalid_Gateway_LAN_IP Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocumentIE.StartIPAddress2' at 27;11.", repo.WebDocumentIE.StartIPAddress2Info, new RecordItemIndex(0));
            repo.WebDocumentIE.StartIPAddress2.Click("27;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocumentIE.StartIPAddress2'.", repo.WebDocumentIE.StartIPAddress2Info, new RecordItemIndex(1));
            Keyboard.PrepareFocus(repo.WebDocumentIE.StartIPAddress2);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'WebDocumentIE.StartIPAddress2'.", repo.WebDocumentIE.StartIPAddress2Info, new RecordItemIndex(2));
            repo.WebDocumentIE.StartIPAddress2.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1' with focus on 'WebDocumentIE.StartIPAddress2'.", repo.WebDocumentIE.StartIPAddress2Info, new RecordItemIndex(3));
            repo.WebDocumentIE.StartIPAddress2.PressKeys("1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocumentIE.StartIPAddress3' at 21;13.", repo.WebDocumentIE.StartIPAddress3Info, new RecordItemIndex(4));
            repo.WebDocumentIE.StartIPAddress3.Click("21;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'WebDocumentIE.StartIPAddress3'.", repo.WebDocumentIE.StartIPAddress3Info, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.WebDocumentIE.StartIPAddress3);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'WebDocumentIE.StartIPAddress3'.", repo.WebDocumentIE.StartIPAddress3Info, new RecordItemIndex(6));
            repo.WebDocumentIE.StartIPAddress3.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1' with focus on 'WebDocumentIE.StartIPAddress3'.", repo.WebDocumentIE.StartIPAddress3Info, new RecordItemIndex(7));
            repo.WebDocumentIE.StartIPAddress3.PressKeys("1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'WebDocumentIE.DHCPv4' at 66;17.", repo.WebDocumentIE.DHCPv4Info, new RecordItemIndex(8));
            repo.WebDocumentIE.DHCPv4.Click("66;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='IP address is invalid.') on item 'WebDocumentIE.IPAddressIsInvalid'.", repo.WebDocumentIE.IPAddressIsInvalidInfo, new RecordItemIndex(9));
            Validate.Attribute(repo.WebDocumentIE.IPAddressIsInvalidInfo, "InnerText", "IP address is invalid.");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='errTipClose') on item 'WebDocumentIE.ErrCloseStartIPAddress'.", repo.WebDocumentIE.ErrCloseStartIPAddressInfo, new RecordItemIndex(10));
            Validate.Attribute(repo.WebDocumentIE.ErrCloseStartIPAddressInfo, "Class", "errTipClose");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='errClose-StartIPAddress') on item 'WebDocumentIE.ErrCloseStartIPAddress'.", repo.WebDocumentIE.ErrCloseStartIPAddressInfo, new RecordItemIndex(11));
            Validate.Attribute(repo.WebDocumentIE.ErrCloseStartIPAddressInfo, "Id", "errClose-StartIPAddress");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=25,Height=29}) on item 'WebDocumentIE.ErrCloseStartIPAddress'.", repo.WebDocumentIE.ErrCloseStartIPAddressInfo, new RecordItemIndex(12));
            Validate.ContainsImage(repo.WebDocumentIE.ErrCloseStartIPAddressInfo, ErrCloseStartIPAddress_Screenshot1, ErrCloseStartIPAddress_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Class='confirm-wizard-text') on item 'WebDocumentIE.SorryThereWasAnErrorWhileUpdating'.", repo.WebDocumentIE.SorryThereWasAnErrorWhileUpdatingInfo, new RecordItemIndex(13));
            Validate.Attribute(repo.WebDocumentIE.SorryThereWasAnErrorWhileUpdatingInfo, "Class", "confirm-wizard-text");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Sorry! There was an error while updating your settings. Please try again a bit later.') on item 'WebDocumentIE.SorryThereWasAnErrorWhileUpdating'.", repo.WebDocumentIE.SorryThereWasAnErrorWhileUpdatingInfo, new RecordItemIndex(14));
            Validate.Attribute(repo.WebDocumentIE.SorryThereWasAnErrorWhileUpdatingInfo, "InnerText", "Sorry! There was an error while updating your settings. Please try again a bit later.");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Src='http://192.168.5.1/i/error-icon.svg') on item 'WebDocumentIE.ConfirmWizard1.Http19216851IErrorIconSvg'.", repo.WebDocumentIE.ConfirmWizard1.Http19216851IErrorIconSvgInfo, new RecordItemIndex(15));
            Validate.Attribute(repo.WebDocumentIE.ConfirmWizard1.Http19216851IErrorIconSvgInfo, "Src", "http://192.168.5.1/i/error-icon.svg");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=30,Height=30}) on item 'WebDocumentIE.ConfirmWizard1.Http19216851IErrorIconSvg'.", repo.WebDocumentIE.ConfirmWizard1.Http19216851IErrorIconSvgInfo, new RecordItemIndex(16));
            Validate.ContainsImage(repo.WebDocumentIE.ConfirmWizard1.Http19216851IErrorIconSvgInfo, Http19216851IErrorIconSvg_Screenshot1, Http19216851IErrorIconSvg_Screenshot1_Options);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage ErrCloseStartIPAddress_Screenshot1
        { get { return repo.WebDocumentIE.ErrCloseStartIPAddressInfo.GetScreenshot1(new Rectangle(0, 0, 25, 29)); } }

        Imaging.FindOptions ErrCloseStartIPAddress_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

        CompressedImage Http19216851IErrorIconSvg_Screenshot1
        { get { return repo.WebDocumentIE.ConfirmWizard1.Http19216851IErrorIconSvgInfo.GetScreenshot1(new Rectangle(0, 0, 30, 30)); } }

        Imaging.FindOptions Http19216851IErrorIconSvg_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
