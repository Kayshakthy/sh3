///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ArrisTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Disable_Add_Device_To_MAC_List_2_4G_Primary recording.
    /// </summary>
    [TestModule("858a332c-c5ca-40f7-a41a-7341cc9b98e8", ModuleType.Recording, 1)]
    public partial class Disable_Add_Device_To_MAC_List_2_4G_Primary : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MercuryTest1Repository repository.
        /// </summary>
        public static MercuryTest1Repository repo = MercuryTest1Repository.Instance;

        static Disable_Add_Device_To_MAC_List_2_4G_Primary instance = new Disable_Add_Device_To_MAC_List_2_4G_Primary();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Disable_Add_Device_To_MAC_List_2_4G_Primary()
        {
            Mac0 = "";
            Mac1 = "";
            Mac2 = "";
            Mac3 = "";
            Mac4 = "";
            Mac5 = "";
            AccessMode = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Disable_Add_Device_To_MAC_List_2_4G_Primary Instance
        {
            get { return instance; }
        }

#region Variables

        string _Mac0;

        /// <summary>
        /// Gets or sets the value of variable Mac0.
        /// </summary>
        [TestVariable("831c31b7-5a2e-4556-b1a5-9c7d6b7595e3")]
        public string Mac0
        {
            get { return _Mac0; }
            set { _Mac0 = value; }
        }

        string _Mac1;

        /// <summary>
        /// Gets or sets the value of variable Mac1.
        /// </summary>
        [TestVariable("cd42fdd2-71cc-4d1b-ae6f-8ce731ac2b0b")]
        public string Mac1
        {
            get { return _Mac1; }
            set { _Mac1 = value; }
        }

        string _Mac2;

        /// <summary>
        /// Gets or sets the value of variable Mac2.
        /// </summary>
        [TestVariable("b760bdf4-7665-42e5-b3ce-8094a2bdf11d")]
        public string Mac2
        {
            get { return _Mac2; }
            set { _Mac2 = value; }
        }

        string _Mac3;

        /// <summary>
        /// Gets or sets the value of variable Mac3.
        /// </summary>
        [TestVariable("60962a78-4a70-48c8-a645-130c4d76d4a9")]
        public string Mac3
        {
            get { return _Mac3; }
            set { _Mac3 = value; }
        }

        string _Mac4;

        /// <summary>
        /// Gets or sets the value of variable Mac4.
        /// </summary>
        [TestVariable("bf78c1ad-aca0-47d6-9d27-60382b9e4635")]
        public string Mac4
        {
            get { return _Mac4; }
            set { _Mac4 = value; }
        }

        string _Mac5;

        /// <summary>
        /// Gets or sets the value of variable Mac5.
        /// </summary>
        [TestVariable("55854a41-1e78-4417-b649-ec43ba939216")]
        public string Mac5
        {
            get { return _Mac5; }
            set { _Mac5 = value; }
        }

        string _AccessMode;

        /// <summary>
        /// Gets or sets the value of variable AccessMode.
        /// </summary>
        [TestVariable("29ccb04f-adb1-4ce6-abbb-e5f3252461a1")]
        public string AccessMode
        {
            get { return _AccessMode; }
            set { _AccessMode = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            try {
                Choose_Attached_Devices_To_Disable_Add_2_4GHz_Primary(Mac0, Mac1, Mac2, Mac3, Mac4, Mac5, AccessMode);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
